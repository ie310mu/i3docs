{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"go ie310go \uff1aweb\u5f00\u53d1\u6846\u67b6 i3work \uff1a\u654f\u6377\u5f00\u53d1\u7ba1\u7406\u5de5\u5177\uff0c\u57fa\u4e8eie310go\u5f00\u53d1 i3shell \uff1a\u5fae\u578bhttp\u670d\u52a1\u5668 c# i3go_codemaker \uff1ago\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u5efa\u8bae\u4e0eie310go\u914d\u5408\u4f7f\u7528 i3start \uff1a\u6548\u7387\u5de5\u5177\uff1awindows\u5feb\u6377\u65b9\u5f0f\u7ba1\u7406\u3001\u4efb\u52a1\u680f\u6807\u9898\u9501\u5b9a i3task \uff1a\u6548\u7387\u5de5\u5177\uff1a\u6e90\u7801\u3001\u6587\u4ef6\u81ea\u52a8\u4e0a\u4f20\u3001\u4e0b\u8f7d\uff08SVN\uff09 cry/uncry \uff1a\u6548\u7387\u5de5\u5177\uff1a\u6587\u4ef6\u3001\u76ee\u5f55\u52a0\u5bc6\u3001\u89e3\u5bc6 \u5176\u4ed6 i3back \uff1a\u6570\u636e\u5907\u4efd\u65b9\u6848 blog i3blog","title":"\u7d22\u5f15"},{"location":"#go","text":"ie310go \uff1aweb\u5f00\u53d1\u6846\u67b6 i3work \uff1a\u654f\u6377\u5f00\u53d1\u7ba1\u7406\u5de5\u5177\uff0c\u57fa\u4e8eie310go\u5f00\u53d1 i3shell \uff1a\u5fae\u578bhttp\u670d\u52a1\u5668","title":"go"},{"location":"#c35","text":"i3go_codemaker \uff1ago\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u5efa\u8bae\u4e0eie310go\u914d\u5408\u4f7f\u7528 i3start \uff1a\u6548\u7387\u5de5\u5177\uff1awindows\u5feb\u6377\u65b9\u5f0f\u7ba1\u7406\u3001\u4efb\u52a1\u680f\u6807\u9898\u9501\u5b9a i3task \uff1a\u6548\u7387\u5de5\u5177\uff1a\u6e90\u7801\u3001\u6587\u4ef6\u81ea\u52a8\u4e0a\u4f20\u3001\u4e0b\u8f7d\uff08SVN\uff09 cry/uncry \uff1a\u6548\u7387\u5de5\u5177\uff1a\u6587\u4ef6\u3001\u76ee\u5f55\u52a0\u5bc6\u3001\u89e3\u5bc6","title":"c#"},{"location":"#_1","text":"i3back \uff1a\u6570\u636e\u5907\u4efd\u65b9\u6848","title":"\u5176\u4ed6"},{"location":"#blog","text":"i3blog","title":"blog"},{"location":"ie310/","text":"ie310 http://ie310.cn https://github.com/ie310mu","title":"ie310"},{"location":"ie310/#ie310","text":"http://ie310.cn https://github.com/ie310mu","title":"ie310"},{"location":"i3back/","text":"\u7b80\u4ecb \u591a\u53f0\u7535\u8111\u4e2d\u6587\u6863\u3001\u6e90\u7801\u5982\u4f55\u540c\u6b65 \u5f52\u6863\u6587\u4ef6\u5907\u4efd \u7f51\u76d8\u5907\u4efd\u9632\u6b62\u4fe1\u606f\u6cc4\u9732 \u707e\u5907 \u5f85\u8865\u5145...","title":"\u4e2a\u4eba\u6570\u636e\u5907\u4efd\u65b9\u6848"},{"location":"i3back/#_1","text":"\u591a\u53f0\u7535\u8111\u4e2d\u6587\u6863\u3001\u6e90\u7801\u5982\u4f55\u540c\u6b65 \u5f52\u6863\u6587\u4ef6\u5907\u4efd \u7f51\u76d8\u5907\u4efd\u9632\u6b62\u4fe1\u606f\u6cc4\u9732 \u707e\u5907 \u5f85\u8865\u5145...","title":"\u7b80\u4ecb"},{"location":"i3blog/","text":"\u5206\u7c7b\u522b\u7d22\u5f15 \u5f85\u8865\u5145...","title":"\u5206\u7c7b\u522b\u7d22\u5f15"},{"location":"i3cry/","text":"\u914d\u5408\u4e2a\u4eba\u6570\u636e\u5907\u4efd\u65b9\u6848\u4f7f\u7528 \u6587\u4ef6\u52a0\u5bc6\u3001\u89e3\u5bc6 \u76ee\u5f55\u52a0\u5bc6\u3001\u89e3\u5bc6 \u5f85\u8865\u5145...","title":"cry/uncry"},{"location":"i3shell/","text":"\u7b80\u4ecb https://github.com/ie310mu/i3shell i3shell \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4f7f\u7528golang\u5f00\u53d1\uff0c\u53ef\u5f00\u542f\u4e00\u4e2ahttp\u7aef\u53e3\uff0c\u8bbf\u95ee\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u9759\u6001\u7f51\u9875\u6587\u4ef6 \u4e0b\u8f7d\u4e0e\u7f16\u8bd1 \u6e90\u7801\uff1a cd {yourGoPath}/src/github.com/ie310mu (\u9700\u8981\u5148\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55) git clone https://github.com/ie310mu/i3shell \u7f16\u8bd1\uff1a windows: cd {yourGoPath}/github.com/ie310mu/i3shell go build -o i3shell.exe main.go linux: cd {yourGoPath}/github.com/ie310mu/i3shell go build -o i3shell main.go \u60a8\u4e5f\u53ef\u76f4\u63a5\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u7ed3\u679c\uff1a windows linux \u4f7f\u7528 windows\uff1a cd {yourGoPath}/github.com/ie310mu/i3shell i3shell (\u9ed8\u8ba4\u4f7f\u75288093\u7aef\u53e3\uff0c\u88ab\u5360\u7528\u65f6\u629b\u51fa\u5f02\u5e38) \u6216 i3shell -p 8093 (\u4f7f\u7528\u6307\u5b9a\u7aef\u53e3\uff0c\u88ab\u5360\u7528\u65f6\u629b\u51fa\u5f02\u5e38) \u6216 i3shell -p 8093 -d F:\\TestFiles (\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u53ef\u6307\u5b9a\u76ee\u6807\u76ee\u5f55) linux\uff1a cd {yourGoPath}/github.com/ie310mu/i3shell ./i3shell \u6216 nohup ./i3shell (\u53ef\u7528kill -9 \u8fdb\u7a0bid \u5173\u95ed) \u8fd0\u884c\u6210\u529f\u540e\u4f1a\u81ea\u52a8\u8c03\u7528\u7cfb\u7edf\u6d4f\u89c8\u5668\u6253\u5f00\u5730\u5740 http://127.0.0.1:8093/ \uff0c\u9ed8\u8ba4\u663e\u793aindex.html\u4e2d\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u6587\u4ef6\u9700\u8981\u8f93\u5165\u5168\u8def\u5f84\u624d\u53ef\u4ee5\u8bbf\u95ee \u5176\u4ed6 \u5982\u679c\u9700\u8981\u6dfb\u52a0\u52a8\u6001api\uff0c\u8bf7\u67e5\u770bie310go\u9879\u76ee\uff1a https://github.com/ie310mu/ie310go","title":"i3shell"},{"location":"i3shell/#_1","text":"https://github.com/ie310mu/i3shell i3shell \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4f7f\u7528golang\u5f00\u53d1\uff0c\u53ef\u5f00\u542f\u4e00\u4e2ahttp\u7aef\u53e3\uff0c\u8bbf\u95ee\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u9759\u6001\u7f51\u9875\u6587\u4ef6","title":"\u7b80\u4ecb"},{"location":"i3shell/#_2","text":"\u6e90\u7801\uff1a cd {yourGoPath}/src/github.com/ie310mu (\u9700\u8981\u5148\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55) git clone https://github.com/ie310mu/i3shell \u7f16\u8bd1\uff1a windows: cd {yourGoPath}/github.com/ie310mu/i3shell go build -o i3shell.exe main.go linux: cd {yourGoPath}/github.com/ie310mu/i3shell go build -o i3shell main.go \u60a8\u4e5f\u53ef\u76f4\u63a5\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u7ed3\u679c\uff1a windows linux","title":"\u4e0b\u8f7d\u4e0e\u7f16\u8bd1"},{"location":"i3shell/#_3","text":"windows\uff1a cd {yourGoPath}/github.com/ie310mu/i3shell i3shell (\u9ed8\u8ba4\u4f7f\u75288093\u7aef\u53e3\uff0c\u88ab\u5360\u7528\u65f6\u629b\u51fa\u5f02\u5e38) \u6216 i3shell -p 8093 (\u4f7f\u7528\u6307\u5b9a\u7aef\u53e3\uff0c\u88ab\u5360\u7528\u65f6\u629b\u51fa\u5f02\u5e38) \u6216 i3shell -p 8093 -d F:\\TestFiles (\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u53ef\u6307\u5b9a\u76ee\u6807\u76ee\u5f55) linux\uff1a cd {yourGoPath}/github.com/ie310mu/i3shell ./i3shell \u6216 nohup ./i3shell (\u53ef\u7528kill -9 \u8fdb\u7a0bid \u5173\u95ed) \u8fd0\u884c\u6210\u529f\u540e\u4f1a\u81ea\u52a8\u8c03\u7528\u7cfb\u7edf\u6d4f\u89c8\u5668\u6253\u5f00\u5730\u5740 http://127.0.0.1:8093/ \uff0c\u9ed8\u8ba4\u663e\u793aindex.html\u4e2d\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u6587\u4ef6\u9700\u8981\u8f93\u5165\u5168\u8def\u5f84\u624d\u53ef\u4ee5\u8bbf\u95ee","title":"\u4f7f\u7528"},{"location":"i3shell/#_4","text":"\u5982\u679c\u9700\u8981\u6dfb\u52a0\u52a8\u6001api\uff0c\u8bf7\u67e5\u770bie310go\u9879\u76ee\uff1a https://github.com/ie310mu/ie310go","title":"\u5176\u4ed6"},{"location":"i3start/","text":"\u63d0\u4f9b\u5bf9windows\u5feb\u6377\u65b9\u5f0f\u7684\u7ba1\u7406 \uff1a \u9501\u5b9a\u5bb9\u5668\u4efb\u52a1\u680f\u6807\u9898 \uff1a \u901a\u8fc7\u70ed\u952e\u5feb\u901f\u663e\u793a\u3001\u9690\u85cf \u70ed\u952e\u5feb\u901f\u6253\u5f00\u641c\u7d22\u6846\uff1a \u5f85\u8865\u5145...","title":"i3start"},{"location":"i3start/jj/","text":"\u8fd9\u91cc\u63d0\u4f9b\u4e00\u7cfb\u5217\u7684windows\u5c0f\u5de5\u5177\uff0c\u7528\u4e8e\u8f85\u52a9\u5728windows\u4e2d\u7684\u5f00\u53d1\u5de5\u5177 \u8fd9\u4e9b\u5de5\u5177\u4f7f\u7528c#\u5f00\u53d1","title":"\u7b80\u4ecb"},{"location":"i3task/","text":"\u914d\u5408\u4e2a\u4eba\u6570\u636e\u5907\u4efd\u65b9\u6848\u4f7f\u7528 \u81ea\u52a8\u6279\u91cf\u4e0a\u4f20\u6e90\u7801\u3001\u6587\u4ef6\u81f3svn\u670d\u52a1\u5668 \u81ea\u52a8\u4ecesvn\u670d\u52a1\u5668\u6279\u91cf\u4e0b\u8f7d\u6e90\u7801\u3001\u6587\u4ef6 \u5f85\u8865\u5145...","title":"i3task"},{"location":"i3work/","text":"i3work\u662f\u4e00\u4e2a\u654f\u6377\u5f00\u53d1\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u57fa\u4e8eie310go\u5f00\u53d1 \u5f85\u8865\u5145...","title":"\u7b80\u4ecb"},{"location":"ie310go/api_args/","text":"\u5b57\u7b26\u4e32\u53c2\u6570 \u53c2\u6570\u503c\u9700\u8981\u5728\u65b9\u6cd5\u5185\u90e8\uff0c\u901a\u8fc7\u4ee3\u7801\u83b7\u53d6\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7531args *route.ServiceArgs\u63d0\u4f9b\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u65b9\u6cd5/\u8bf4\u660e GetStringParamWithCheck(paramName string, canBeNullOrEmpty bool) string \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0ccanBeNullOrEmpty\u6307\u5b9a\u662f\u5426\u53ef\u4ee5\u4e3a\u7a7a GetStringParam(paramName string) string \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u53ef\u4ee5\u4e3a\u7a7a GetStringParamWithDefault(paramName string, defaultValue string) \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c bool\u53c2\u6570 bool \u65b9\u6cd5/\u8bf4\u660e GetBoolParam(paramName string) bool \u83b7\u53d6bool\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetBoolParamWithDefault(paramName string, defaultValue bool) (r bool) \u83b7\u53d6bool\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c int\u53c2\u6570 int \u65b9\u6cd5/\u8bf4\u660e GetIntParam(paramName string) int \u83b7\u53d6int\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetIntParamWithDefault(paramName string, defaultValue int) (r int) \u83b7\u53d6bool\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c float\u53c2\u6570 float \u65b9\u6cd5/\u8bf4\u660e GetFloatParam(paramName string) float64 \u83b7\u53d6float\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetFloatParamWithDefault(paramName string, defaultValue float64) (r float64) \u83b7\u53d6float\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c time\u53c2\u6570 time \u65b9\u6cd5/\u8bf4\u660e GetDateTimeParam(paramName string) time.Time \u83b7\u53d6DateTime\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetDateTimeParamWithDefault(paramName string, defaultValue time.Time) (r time.Time) \u83b7\u53d6DateTime\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c GetDateParam(paramName string) time.Time \u83b7\u53d6Date\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a\uff08\u53ea\u6709\u65e5\u671f\u90e8\u5206\uff09 GetDateParamWithDefault(paramName string, defaultValue time.Time) (r time.Time) \u83b7\u53d6Date\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c GetBeginDateParam() time.Time \u83b7\u53d6\u5f00\u59cb\u65e5\u671f\uff08\u4ec5\u65e5\u671f\u90e8\u5206\uff09\uff0c\u83b7\u53d6\u4e0d\u5230d.IsZero()==true\uff0c\u5bf9\u5e94\u53c2\u6570\u540dbeginDate\uff0c\u683c\u5f0f2019-08-12 GetEndDateParam() time.Time \u83b7\u53d6\u7ed3\u675f\u65e5\u671f\uff08\u4ec5\u65e5\u671f\u90e8\u5206\uff0c\u4e14\u52a01\u5929\uff09\uff0c\u83b7\u53d6\u4e0d\u5230d.IsZero()==true\uff0c\u5bf9\u5e94\u53c2\u6570\u540dendDate\uff0c\u683c\u5f0f2019-08-12 GetBeginDateTimeParam() time.Time \u83b7\u53d6\u5f00\u59cb\u65e5\u671f\u65f6\u95f4 GetEndDateTimeParam() time.Time \u83b7\u53d6\u7ed3\u675f\u65e5\u671f\u65f6\u95f4 \u5206\u9875\u76f8\u5173\u53c2\u6570 \u5206\u9875 \u65b9\u6cd5/\u8bf4\u660e GetPageSizeParam() int \u83b7\u53d6\u53c2\u6570\uff1a\u6bcf\u9875\u6570\u636e\u6761\u6570\uff0c\u9ed8\u8ba420\uff0c\u6700\u5927100 GetCurrentPageParam() int \u83b7\u53d6\u53c2\u6570\uff1a\u5f53\u524d\u9875\u6570\uff0c\u4ece1\u5f00\u59cb\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u503c\u5c0f\u4e8e1\u65f6\u91cd\u7f6e\u4e3a1 \u5176\u4ed6\u53c2\u6570 \u5176\u4ed6 \u65b9\u6cd5/\u8bf4\u660e GetObjectParam(paramName string, obj interface{}) \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6ce8\u610f\u4f20\u5165\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u4f1a\u89e3\u6790json\u5b57\u7b26\u4e32\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u5bf9\u8c61 GetIsMobile() \u662f\u5426\u4ece\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\uff0c\u5bf9\u5e94\u53c2\u6570isMobile=true GetIsApp() bool \u662f\u5426\u4eceapp\u8bbf\u95ee\uff0c\u5bf9\u5e94\u53c2\u6570isApp=true packageResult \u6dfb\u52a0packageResult=false\u65f6\uff0c\u4e0d\u4f1a\u7528JSONServiceResult\u5bf9\u7ed3\u679c\u8fdb\u884c\u5c01\u88c5 convertResult \u6dfb\u52a0convertResult=false\u65f6\uff0c\u6700\u7ec8\u7ed3\u679c\u4e0d\u4f1a\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u7528JSONServiceResult\u5c01\u88c5 \u4f8b\u5982\u51fd\u6570\u672c\u6765\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32aaa\uff0cpackageResult=false\u65f6\u8fd4\u56de\"aaa\"\uff0c packageResult=false convertResult=false\u65f6\u8fd4\u56deaaa useJsonp useJsonp=true\u65f6\uff0c\u8868\u793a\u6b64\u6761\u8bf7\u6c42\u662f\u8de8\u57df\u8bf7\u6c42\uff08\u524d\u63d0\u662fhttpServer\u652f\u6301\u8de8\u57df\uff09 jsonpCallback jsonpCallback\uff1a\u8de8\u57df\u65f6\u7684\u56de\u8c03\u51fd\u6570\u540d\uff0c\u5982\u679c\u4f7f\u7528jQuery\u8bf7\u6c42\uff0cjQuery\u4f1a\u9ed8\u8ba4\u4f20\u9012\u53c2\u6570callback\uff0c\u6b64\u65f6jsonpCallback\u53ef\u4f20\u53ef\u4e0d\u4f20 jsonpCallback\u53c2\u6570\u4f18\u5148\u7ea7\u66f4\u9ad8 jsonpCallback\u3001callback\u4efb\u4e00\u53c2\u6570\u6709\u503c\u65f6\uff0c\u6700\u7ec8\u7684json\u5b57\u7b26\u4e32\u8fd8\u4f1a\u505a\u4e00\u6b21\u5c01\u88c5\uff0c\u6bd4\u5982jsonpCallback=aaa\uff0c\u5219\u5c01\u88c5\u4e3aaaa(jsonstr)\u3002\u5982\u679c\u662f\u4f7f\u7528jQuery\uff0c\u4f1a\u88ab\u81ea\u52a8\u89e3\u6790\u3002","title":"\u53c2\u6570"},{"location":"ie310go/api_args/#_1","text":"\u53c2\u6570\u503c\u9700\u8981\u5728\u65b9\u6cd5\u5185\u90e8\uff0c\u901a\u8fc7\u4ee3\u7801\u83b7\u53d6\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7531args *route.ServiceArgs\u63d0\u4f9b\uff0c\u5177\u4f53\u5982\u4e0b\uff1a \u65b9\u6cd5/\u8bf4\u660e GetStringParamWithCheck(paramName string, canBeNullOrEmpty bool) string \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0ccanBeNullOrEmpty\u6307\u5b9a\u662f\u5426\u53ef\u4ee5\u4e3a\u7a7a GetStringParam(paramName string) string \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u53ef\u4ee5\u4e3a\u7a7a GetStringParamWithDefault(paramName string, defaultValue string) \u83b7\u53d6\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c","title":"\u5b57\u7b26\u4e32\u53c2\u6570"},{"location":"ie310go/api_args/#bool","text":"bool \u65b9\u6cd5/\u8bf4\u660e GetBoolParam(paramName string) bool \u83b7\u53d6bool\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetBoolParamWithDefault(paramName string, defaultValue bool) (r bool) \u83b7\u53d6bool\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c","title":"bool\u53c2\u6570"},{"location":"ie310go/api_args/#int","text":"int \u65b9\u6cd5/\u8bf4\u660e GetIntParam(paramName string) int \u83b7\u53d6int\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetIntParamWithDefault(paramName string, defaultValue int) (r int) \u83b7\u53d6bool\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c","title":"int\u53c2\u6570"},{"location":"ie310go/api_args/#float","text":"float \u65b9\u6cd5/\u8bf4\u660e GetFloatParam(paramName string) float64 \u83b7\u53d6float\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetFloatParamWithDefault(paramName string, defaultValue float64) (r float64) \u83b7\u53d6float\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c","title":"float\u53c2\u6570"},{"location":"ie310go/api_args/#time","text":"time \u65b9\u6cd5/\u8bf4\u660e GetDateTimeParam(paramName string) time.Time \u83b7\u53d6DateTime\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a GetDateTimeParamWithDefault(paramName string, defaultValue time.Time) (r time.Time) \u83b7\u53d6DateTime\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c GetDateParam(paramName string) time.Time \u83b7\u53d6Date\u53c2\u6570\uff0c\u4e0d\u80fd\u4e3a\u7a7a\uff08\u53ea\u6709\u65e5\u671f\u90e8\u5206\uff09 GetDateParamWithDefault(paramName string, defaultValue time.Time) (r time.Time) \u83b7\u53d6Date\u53c2\u6570\uff0c\u53ef\u6307\u5b9a\u9ed8\u8ba4\u503c GetBeginDateParam() time.Time \u83b7\u53d6\u5f00\u59cb\u65e5\u671f\uff08\u4ec5\u65e5\u671f\u90e8\u5206\uff09\uff0c\u83b7\u53d6\u4e0d\u5230d.IsZero()==true\uff0c\u5bf9\u5e94\u53c2\u6570\u540dbeginDate\uff0c\u683c\u5f0f2019-08-12 GetEndDateParam() time.Time \u83b7\u53d6\u7ed3\u675f\u65e5\u671f\uff08\u4ec5\u65e5\u671f\u90e8\u5206\uff0c\u4e14\u52a01\u5929\uff09\uff0c\u83b7\u53d6\u4e0d\u5230d.IsZero()==true\uff0c\u5bf9\u5e94\u53c2\u6570\u540dendDate\uff0c\u683c\u5f0f2019-08-12 GetBeginDateTimeParam() time.Time \u83b7\u53d6\u5f00\u59cb\u65e5\u671f\u65f6\u95f4 GetEndDateTimeParam() time.Time \u83b7\u53d6\u7ed3\u675f\u65e5\u671f\u65f6\u95f4","title":"time\u53c2\u6570"},{"location":"ie310go/api_args/#_2","text":"\u5206\u9875 \u65b9\u6cd5/\u8bf4\u660e GetPageSizeParam() int \u83b7\u53d6\u53c2\u6570\uff1a\u6bcf\u9875\u6570\u636e\u6761\u6570\uff0c\u9ed8\u8ba420\uff0c\u6700\u5927100 GetCurrentPageParam() int \u83b7\u53d6\u53c2\u6570\uff1a\u5f53\u524d\u9875\u6570\uff0c\u4ece1\u5f00\u59cb\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u503c\u5c0f\u4e8e1\u65f6\u91cd\u7f6e\u4e3a1","title":"\u5206\u9875\u76f8\u5173\u53c2\u6570"},{"location":"ie310go/api_args/#_3","text":"\u5176\u4ed6 \u65b9\u6cd5/\u8bf4\u660e GetObjectParam(paramName string, obj interface{}) \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6ce8\u610f\u4f20\u5165\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u4f1a\u89e3\u6790json\u5b57\u7b26\u4e32\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u5bf9\u8c61 GetIsMobile() \u662f\u5426\u4ece\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\uff0c\u5bf9\u5e94\u53c2\u6570isMobile=true GetIsApp() bool \u662f\u5426\u4eceapp\u8bbf\u95ee\uff0c\u5bf9\u5e94\u53c2\u6570isApp=true","title":"\u5176\u4ed6\u53c2\u6570"},{"location":"ie310go/api_args/#packageresult","text":"\u6dfb\u52a0packageResult=false\u65f6\uff0c\u4e0d\u4f1a\u7528JSONServiceResult\u5bf9\u7ed3\u679c\u8fdb\u884c\u5c01\u88c5","title":"packageResult"},{"location":"ie310go/api_args/#convertresult","text":"\u6dfb\u52a0convertResult=false\u65f6\uff0c\u6700\u7ec8\u7ed3\u679c\u4e0d\u4f1a\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u7528JSONServiceResult\u5c01\u88c5 \u4f8b\u5982\u51fd\u6570\u672c\u6765\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32aaa\uff0cpackageResult=false\u65f6\u8fd4\u56de\"aaa\"\uff0c packageResult=false convertResult=false\u65f6\u8fd4\u56deaaa","title":"convertResult"},{"location":"ie310go/api_args/#usejsonp","text":"useJsonp=true\u65f6\uff0c\u8868\u793a\u6b64\u6761\u8bf7\u6c42\u662f\u8de8\u57df\u8bf7\u6c42\uff08\u524d\u63d0\u662fhttpServer\u652f\u6301\u8de8\u57df\uff09","title":"useJsonp"},{"location":"ie310go/api_args/#jsonpcallback","text":"jsonpCallback\uff1a\u8de8\u57df\u65f6\u7684\u56de\u8c03\u51fd\u6570\u540d\uff0c\u5982\u679c\u4f7f\u7528jQuery\u8bf7\u6c42\uff0cjQuery\u4f1a\u9ed8\u8ba4\u4f20\u9012\u53c2\u6570callback\uff0c\u6b64\u65f6jsonpCallback\u53ef\u4f20\u53ef\u4e0d\u4f20 jsonpCallback\u53c2\u6570\u4f18\u5148\u7ea7\u66f4\u9ad8 jsonpCallback\u3001callback\u4efb\u4e00\u53c2\u6570\u6709\u503c\u65f6\uff0c\u6700\u7ec8\u7684json\u5b57\u7b26\u4e32\u8fd8\u4f1a\u505a\u4e00\u6b21\u5c01\u88c5\uff0c\u6bd4\u5982jsonpCallback=aaa\uff0c\u5219\u5c01\u88c5\u4e3aaaa(jsonstr)\u3002\u5982\u679c\u662f\u4f7f\u7528jQuery\uff0c\u4f1a\u88ab\u81ea\u52a8\u89e3\u6790\u3002","title":"jsonpCallback"},{"location":"ie310go/api_base/","text":"Method\uff1aMethod\u662f\u670d\u52a1\u63d0\u4f9b\u7684\u6700\u5c0f\u7c92\u5ea6\uff0c\u5982\u201c\u5feb\u901f\u5f00\u59cb\u201d\u4e2d\u7684GetServerTime\u3002 Service\uff1a\u591a\u4e2aMethod\u7ec4\u5408\u6210\u4e00\u4e2aService\u3002 \u5728\u4ee3\u7801\u5c42\u6b21\uff0cService+Method\u5c31\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u548c\u5b9a\u4e49\u5728\u6b64\u7ed3\u6784\u4f53\u4e0a\u7684\u4e00\u7ec4\u51fd\u6570\u3002 Server\uff1a\u591a\u4e2aService\u4e3a\u4e00\u7ec4\uff0c\u79f0\u4e4b\u4e3a\u201cServer\u201d\u3002 ie310go\u7684server\u652f\u6301\u591a\u79cd\u534f\u8bae\u7684\u5b9e\u73b0\uff0c\u76ee\u524d\u4e3b\u8981\u4ee5http\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\u3002","title":"\u6982\u5ff5"},{"location":"ie310go/api_define/","text":"\u5b9a\u4e49 \u8981\u5b9a\u4e49\u4e00\u4e2a\u670d\u52a1\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8ba9\u5176\u7ee7\u627froute.BaseService\u5373\u53ef\uff0c\u5982\uff1a //import github.com/ie310mu/ie310go/route //TimeService .. type TimeService struct { route.BaseService } \u6ce8\u610f\uff0c\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u7c7b\u578b\u662fBaseLoginedService\uff0c\u6b64\u7c7b\u578b\u9700\u8981\u81ea\u5df1\u6dfb\u52a0 \u670d\u52a1\u540d\u9700\u8981\u6dfb\u52a0\u540e\u7f00Service \u5728\u670d\u52a1\u4e2d\u6dfb\u52a0\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u516c\u5f00\u7684\u65b9\u6cd5\u5373\u53ef\uff0c\u5982\uff1a //GetServerTime .. func (s TimeService) GetServerTime(args *route.ServiceArgs) string { now := time.Now() str := convert.DateTimeWithSecToStr(now) return str } \u65b9\u6cd5\u5fc5\u987b\u4e14\u53ea\u80fd\u6709\u4e00\u4e2a\u53c2\u6570\uff1aargs *route.ServiceArgs\uff0c\u5b9e\u9645\u9700\u8981\u7684\u53c2\u6570\u503c\u7684\u83b7\u53d6\u5728\u540e\u6587\u8bf4\u660e \u65b9\u6cd5\u53ef\u4ee5\u67090\u4e2a\u62161\u4e2a\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u88abjson\u5e8f\u5217\u5316\u7684\u7c7b\u578b \u6ce8\u518c\u3001\u542f\u52a8 \u751f\u6210\u4e00\u4e2ahttpServer\uff1a httpConfig := route.ServerHTTPConfig{Port: 8103 , ServiceSuffix: goss , Jsonp: true} srv := route.NewServerHTTP(httpConfig, httpServer ) Port\uff1aserver\u7684\u7aef\u53e3 ServiceSuffix\uff1a\u670d\u52a1\u7684\u540e\u7f00\uff0c\u6bd4\u5982TimeService\u6700\u7ec8\u7684\u670d\u52a1\u8bbf\u95ee\u540d\u662ftimeService.goss Jsonp\uff1aserver\u662f\u5426\u652f\u6301\u8de8\u57df\u8bf7\u6c42 \u5c06service\u6ce8\u518c\u5230server\u4e2d\uff1a srv.RegisterService( TimeService{}) \u6ce8\u518cserver\uff1a route.RegisterServer(srv) \u542f\u52a8server\uff1a ie310go.Run(nil) \u5173\u4e8e\u4f18\u96c5\u9000\u51fa\u8bf7\u53c2\u8003 \u4f18\u96c5\u9000\u51fa \u8c03\u7528 api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00\uff08\u670d\u52a1\u540d\u5bf9\u5e94\u4e8e\u670d\u52a1\u7c7bConsumeRecordService\uff0c\u9996\u5b57\u6bcd\u5c0f\u5199\uff09 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0\uff08\u670d\u52a1\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u662f\u516c\u5f00\u7684\u65b9\u6cd5\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u65b9\u6cd5\uff09 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570\uff08\u9700\u8981\u4ec0\u4e48\u53c2\u6570\uff0c\u7531\u65b9\u6cd5\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u786e\u5b9a\uff09 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012\uff0c\u7b80\u5355\u53c2\u6570\u53ef\u7528get\u4f20\u9012\uff0c\u590d\u6742\u53c2\u6570\u5efa\u8bae\u7528post\uff0c\u907f\u514d\u7f16\u7801\u9519\u4e71\u95ee\u9898 \uff08post\u65b9\u5f0f\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u8003 \u5feb\u901f\u5f00\u59cb \uff09 \u8fd4\u56de\u503c \u8fd4\u56de\u7684\u6570\u636e\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c \u662f\u4e00\u4e2aJSONServiceResult\u7ed3\u6784\u4f53\uff1a state\uff1a\u63a5\u53e3\u8c03\u7528\u72b6\u6001\uff0c\u6574\u6570\uff0c\u8fd4\u56de0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5b57\u7b26\u4e32\uff0cstate!=0\u65f6\u7684\u9519\u8bef\u6d88\u606f data\uff1ainterface{}\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u503c\uff08\u670d\u52a1\u65b9\u6cd5\u7684\u5b9e\u9645\u8fd4\u56de\u503c\uff09 DataJSON\uff1a\u5b57\u7b26\u4e32\uff0c\u5907\u7528\u5b57\u6bb5 ExtandData\uff1ainterface{}\uff0c\u5907\u7528\u5b57\u6bb5 \u5982\u679c\u4f7f\u7528jQuery\u8c03\u7528\u63a5\u53e3\uff0c\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u5bf9\u8c61\uff0c\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u53ef\u80fd\u9700\u8981\u505a\u4e00\u6b21\u5904\u7406\uff0c\u5c06json\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5bf9\u8c61 \u5206\u9875\u8fd4\u56de\u503c","title":"\u5b9a\u4e49\u4e0e\u8c03\u7528"},{"location":"ie310go/api_define/#_1","text":"\u8981\u5b9a\u4e49\u4e00\u4e2a\u670d\u52a1\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8ba9\u5176\u7ee7\u627froute.BaseService\u5373\u53ef\uff0c\u5982\uff1a //import github.com/ie310mu/ie310go/route //TimeService .. type TimeService struct { route.BaseService } \u6ce8\u610f\uff0c\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u7c7b\u578b\u662fBaseLoginedService\uff0c\u6b64\u7c7b\u578b\u9700\u8981\u81ea\u5df1\u6dfb\u52a0 \u670d\u52a1\u540d\u9700\u8981\u6dfb\u52a0\u540e\u7f00Service \u5728\u670d\u52a1\u4e2d\u6dfb\u52a0\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u516c\u5f00\u7684\u65b9\u6cd5\u5373\u53ef\uff0c\u5982\uff1a //GetServerTime .. func (s TimeService) GetServerTime(args *route.ServiceArgs) string { now := time.Now() str := convert.DateTimeWithSecToStr(now) return str } \u65b9\u6cd5\u5fc5\u987b\u4e14\u53ea\u80fd\u6709\u4e00\u4e2a\u53c2\u6570\uff1aargs *route.ServiceArgs\uff0c\u5b9e\u9645\u9700\u8981\u7684\u53c2\u6570\u503c\u7684\u83b7\u53d6\u5728\u540e\u6587\u8bf4\u660e \u65b9\u6cd5\u53ef\u4ee5\u67090\u4e2a\u62161\u4e2a\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u88abjson\u5e8f\u5217\u5316\u7684\u7c7b\u578b","title":"\u5b9a\u4e49"},{"location":"ie310go/api_define/#_2","text":"\u751f\u6210\u4e00\u4e2ahttpServer\uff1a httpConfig := route.ServerHTTPConfig{Port: 8103 , ServiceSuffix: goss , Jsonp: true} srv := route.NewServerHTTP(httpConfig, httpServer ) Port\uff1aserver\u7684\u7aef\u53e3 ServiceSuffix\uff1a\u670d\u52a1\u7684\u540e\u7f00\uff0c\u6bd4\u5982TimeService\u6700\u7ec8\u7684\u670d\u52a1\u8bbf\u95ee\u540d\u662ftimeService.goss Jsonp\uff1aserver\u662f\u5426\u652f\u6301\u8de8\u57df\u8bf7\u6c42 \u5c06service\u6ce8\u518c\u5230server\u4e2d\uff1a srv.RegisterService( TimeService{}) \u6ce8\u518cserver\uff1a route.RegisterServer(srv) \u542f\u52a8server\uff1a ie310go.Run(nil) \u5173\u4e8e\u4f18\u96c5\u9000\u51fa\u8bf7\u53c2\u8003 \u4f18\u96c5\u9000\u51fa","title":"\u6ce8\u518c\u3001\u542f\u52a8"},{"location":"ie310go/api_define/#_3","text":"api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00\uff08\u670d\u52a1\u540d\u5bf9\u5e94\u4e8e\u670d\u52a1\u7c7bConsumeRecordService\uff0c\u9996\u5b57\u6bcd\u5c0f\u5199\uff09 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0\uff08\u670d\u52a1\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u662f\u516c\u5f00\u7684\u65b9\u6cd5\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u65b9\u6cd5\uff09 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570\uff08\u9700\u8981\u4ec0\u4e48\u53c2\u6570\uff0c\u7531\u65b9\u6cd5\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u786e\u5b9a\uff09 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012\uff0c\u7b80\u5355\u53c2\u6570\u53ef\u7528get\u4f20\u9012\uff0c\u590d\u6742\u53c2\u6570\u5efa\u8bae\u7528post\uff0c\u907f\u514d\u7f16\u7801\u9519\u4e71\u95ee\u9898 \uff08post\u65b9\u5f0f\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u8003 \u5feb\u901f\u5f00\u59cb \uff09","title":"\u8c03\u7528"},{"location":"ie310go/api_define/#_4","text":"\u8fd4\u56de\u7684\u6570\u636e\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c \u662f\u4e00\u4e2aJSONServiceResult\u7ed3\u6784\u4f53\uff1a state\uff1a\u63a5\u53e3\u8c03\u7528\u72b6\u6001\uff0c\u6574\u6570\uff0c\u8fd4\u56de0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5b57\u7b26\u4e32\uff0cstate!=0\u65f6\u7684\u9519\u8bef\u6d88\u606f data\uff1ainterface{}\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u503c\uff08\u670d\u52a1\u65b9\u6cd5\u7684\u5b9e\u9645\u8fd4\u56de\u503c\uff09 DataJSON\uff1a\u5b57\u7b26\u4e32\uff0c\u5907\u7528\u5b57\u6bb5 ExtandData\uff1ainterface{}\uff0c\u5907\u7528\u5b57\u6bb5 \u5982\u679c\u4f7f\u7528jQuery\u8c03\u7528\u63a5\u53e3\uff0c\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u5bf9\u8c61\uff0c\u4f7f\u7528\u5176\u4ed6\u6846\u67b6\u53ef\u80fd\u9700\u8981\u505a\u4e00\u6b21\u5904\u7406\uff0c\u5c06json\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5bf9\u8c61 \u5206\u9875\u8fd4\u56de\u503c","title":"\u8fd4\u56de\u503c"},{"location":"ie310go/api_other/","text":"\u62e6\u622a\u5668 \u5728\u4ee3\u7801\u751f\u6210\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u57fa\u7840\u7c7b\u578bBaseLoginedService\uff1a package service import ( github.com/ie310mu/ie310go/route ) //BaseLoginedService .. type BaseLoginedService struct { route.BaseService } //BeforeExcute .. func (s BaseLoginedService) BeforeExcute(args *route.ServiceArgs) { } //AfterExcute .. func (s BaseLoginedService) AfterExcute(args *route.ServiceArgs) { } \u5728\u6b64\u7c7b\u578b\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9BeforeExcute\u3001AfterExcute\u7684\u6269\u5c55\uff0c\u505a\u4e00\u4e9b\u62e6\u622a\u7684\u64cd\u4f5c\uff08\u6bd4\u5982BeforeExcute\u4e2d\u68c0\u67e5\u662f\u5426\u6709\u767b\u5f55\u4fe1\u606f\uff0c\u6ca1\u6709\u65f6\u76f4\u63a5panic\u5373\u53ef\uff09\u3001\u8c03\u7528\u540e\u5904\u7406\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BaseLoginedService\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u5b9e\u73b0\u66f4\u591a\u7684\u62e6\u622a\u5668\u64cd\u4f5c \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u62e6\u622a\u5668\u201d\u662f\u901a\u8fc7\u7c7b\u7684\u7ee7\u627f\u6765\u5b9e\u73b0\u7684\uff0c\u548c\u771f\u6b63\u7684\u201c\u62e6\u622a\u5668\u201d\u6709\u4e00\u5b9a\u5dee\u522b session httpServer\u4e2d\u63d0\u4f9b\u5bf9session\u7684\u652f\u6301\uff08\u4f46\u4e0d\u63a8\u8350\u4f7f\u7528\uff0cie310go\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u81ea\u5b9a\u4e49token\u7684\u65b9\u5f0f\uff09 \u8981\u542f\u7528session\uff0c\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a ie310go.AppSessionInitFunc = session.Init //.....other code ie310go.Run(nil) //Init .. func Init() { sessionConfig := session.ManagerConfig{ Gclifetime: 3600, Maxlifetime: 3600, Secure: false, CookieLifeTime: 3600, ProviderConfig: ./tmp , } //config.Config.RedisURL\u6307\u793a\u662f\u5426\u4f7f\u7528redis\u4fdd\u5b58session\uff0c\u793a\u4f8b\u503c 127.0.0.1:6379 if config.Config.RedisURL != { logsagent.Info( session where init as redis : + config.Config.RedisURL) sessionConfig.ProviderConfig = config.Config.RedisURL gs, err := session.NewManager( redis , sessionConfig) throw.CheckErr(err) session.GlobalSessions = gs logsagent.Info( session init as redis : + config.Config.RedisURL) } else { logsagent.Info( session where init as memory ) gs, err := session.NewManager( memory , sessionConfig) throw.CheckErr(err) session.GlobalSessions = gs logsagent.Info( session init as memory ) } go session.GlobalSessions.GC() } \u4e0a\u4f20\u6587\u4ef6 \u793a\u4f8b\u4ee3\u7801\uff08\u6458\u53d6\u81ea i3work \uff09\uff1a //UploadFile \u53ea\u80fd\u7528\u4e8ehttp\u534f\u8bae\uff0c\u9700\u8981\u9644\u52a0\u53c2\u6570 packageResult=false convertResult=false func (s TaskRecordService) UploadFile(args *route.ServiceArgs) (result string) { defer func() { if err := recover(); err != nil { result = fmt.Sprintf( %v , err) } }() rs := args.GetRs().(*route.RequestResponseHTTP) r := rs.GetR() err := r.ParseMultipartForm(18 * 1024) throw.CheckErr(err) taskID := args.GetStringParamWithCheck( taskId , false) actionID := args.GetStringParamWithCheck( actionId , true) fileSize := args.GetIntParam( fileSize ) upFileName := args.GetStringParamWithCheck( fileName , false) userutil.CheckRole(args, userutil.DefaultError, file ) task := mapper.GetTaskRecordMapper( ro ).Get(nil, taskID) userutil.CheckProjectPower(args, userutil.DefaultError, task.ProjectCode) //\u83b7\u53d6handler file, handler, err := r.FormFile( file ) throw.CheckErr(err) defer file.Close() //fileSize if fileSize 100*1024*1024 { panic( \u6587\u4ef6\u4e0d\u80fd\u8d85\u8fc7100M ) } fileSizeKB := float64(fileSize) / float64(1024) fileSizeKB = math.RoundToEven(fileSizeKB) fmt.Println(fileSizeKB) defer func() { if err := recover(); err != nil { result = obj.InterfaceToStr(err) } }() //md5 body, err := ioutil.ReadAll(file) if err != nil { fmt.Println( ReadAll , err) return } //md5.Sum(body) md5Value := fmt.Sprintf( %x , md5.Sum(body)) fmt.Println(md5Value) //\u6587\u4ef6\u7c7b\u578b ext := path.Ext(handler.Filename) if ext == { panic( \u6587\u4ef6\u6ca1\u6709\u540e\u7f00\u540d ) } ext = strings.ToLower(ext) if ext != .xls ext != .xlsx ext != .doc ext != .docx ext != .pdf ext != .rar ext != .zip ext != .jpeg ext != .jpg ext != .png ext != .txt ext != .sql { panic( \u4ec5\u652f\u6301\u6587\u4ef6\u540e\u7f00\u540d\u4e3axls\u3001xlsx\u3001doc\u3001docx\u3001pdf\u3001rar\u3001zip\u3001jpeg\u3001jpg\u3001png\u3001txt\u3001sql ) } fmt.Println(ext) //\u521b\u5efa\u6570\u636e\u8bb0\u5f55 mp := mapper.GetTaskActionMapper( ) des := upFileName action := taskutil.CreateAction(args, taskID, \u4e0a\u4f20\u9644\u4ef6 , des, false) if actionID != { action = mp.Get(nil, actionID) action.Des = des } action.Md5 = md5Value action.Ext = ext action.ExtSize = float32(fileSize) action.ExtSize = action.ExtSize / float32(1024) //\u4fdd\u5b58\u6587\u4ef6 fileName := s.getUploadFileName(md5Value, ext) if !dir.PathExists(fileName) { f, err := os.OpenFile(fileName, os.O_WRONLY|os.O_CREATE, 0666) throw.CheckErr(err) defer f.Close() file.Seek(0, 0) io.Copy(f, file) } if actionID == { mp.Insert(nil, action) userutil.SaveAction(nil, args, \u4e0a\u4f20\u9644\u4ef6\uff1a +upFileName, task) } else { mp.Update(nil, action) userutil.SaveAction(nil, args, \u66ff\u6362\u9644\u4ef6\uff1a +upFileName, task) } rs.CustomContentType = text/html;charset=utf-8 return ` !DOCTYPE html html body class= layui-layout-body \u4e0a\u4f20\u6210\u529f script src= /packages/layui/layui.all.js /script script src= /js/base.js /script script $(function () { setTimeout(() = { window.top.closeFrm(true, addFile ); }, 500); }) /script /body /html ` } form action= /taskRecordService.goss?m=uploadFile packageResult=false convertResult=false cu=false method= post enctype= multipart/form-data id= form div class= layui-layout layui-layout-admin div class= layui-body style= top: 0px;left:0px;padding: 30px; input type= hidden id= taskId name= taskId / input type= hidden id= actionId name= actionId / input type= hidden id= fileSize name= fileSize / input type= hidden id= fileName name= fileName / input type= hidden id= token name= token / span id= fileNameSpan /span br / br / input class= dn type= file id= file name= file onchange= fileChanged(this.files); / /div div class= layui-footer style= left: 0px;height: 60px;z-index: 999; div class= layui-btn-container style= width: 100%;padding-top: 10px; button type= button class= layui-btn style= float: left; onclick= selectFile(); \u9009\u62e9\u6587\u4ef6 /button button type= button class= layui-btn layui-btn-danger style= float: right; onclick= uploadFile(); \u4e0a\u4f20 /button /div /div /div /form \u4e0b\u8f7d\u6587\u4ef6 \u793a\u4f8b\u4ee3\u7801\uff08\u6458\u53d6\u81ea i3work \uff09\uff1a //DownloadFile .. func (s TaskRecordService) DownloadFile(args *route.ServiceArgs) { id := args.GetStringParamWithCheck( id , true) mp := mapper.GetTaskActionMapper( ro ) action := mp.Get(nil, id) if action == nil { panic( \u9644\u4ef6\u4e0d\u5b58\u5728 ) } task := mapper.GetTaskRecordMapper( ro ).Get(nil, action.TaskID) userutil.CheckProjectPower(args, userutil.DefaultError, task.ProjectCode) fileName := s.getUploadFileName(action.Md5, action.Ext) if !dir.PathExists(fileName) { panic( \u6587\u4ef6\u4e0d\u5b58\u5728 ) } file, err := os.Open(fileName) throw.CheckErr(err) defer file.Close() rs := args.GetRs().(*route.RequestResponseHTTP) rs.GetW().Header().Add( Content-Type , application/octet-stream ) rs.GetW().Header().Add( content-disposition , attachment; filename=\\ +action.Des+ \\ ) _, err = io.Copy(rs.GetW(), file) throw.CheckErr(err) } Header httpServer\u7684Content-Type\u9ed8\u8ba4\u503c\u4e3aapplication/json;charset=utf-8\uff0c\u53ef\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u81ea\u5b9a\u4e49\uff1a rs.CustomContentType = text/html;charset=utf-8 \u4e0a\u8ff0\u4ee3\u7801\u9002\u7528\u4e8e\u666e\u901a\u65b9\u6cd5\uff08\u8fd4\u56de\u503c\u7531ie310go\u5c01\u88c5\u6210JSONServiceResult\u540e\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u4e32\u518d\u8f93\u51fa\uff09\uff0c\u5982\u679c\u7c7b\u4f3c\u4e8e\u4e0a\u6587\u4e2d\u4e0b\u8f7d\u6587\u4ef6\u7684\u8f93\u51fa\u65b9\u5f0f\uff08io.Copy(rs.GetW(), file)\uff09\uff0c\u5219\u9700\u8981\u5728Hearder\u4e2d\u5b9a\u4e49\uff1a rs := args.GetRs().(*route.RequestResponseHTTP) rs.GetW().Header().Add( Content-Type , application/octet-stream ) rs.GetW().Header().Add( content-disposition , attachment; filename=\\ +action.Des+ \\ ) _, err = io.Copy(rs.GetW(), file) throw.CheckErr(err) \u5176\u4ed6 redirect\uff08\u6682\u672a\u5b9e\u73b0\uff09","title":"\u5176\u4ed6"},{"location":"ie310go/api_other/#_1","text":"\u5728\u4ee3\u7801\u751f\u6210\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u57fa\u7840\u7c7b\u578bBaseLoginedService\uff1a package service import ( github.com/ie310mu/ie310go/route ) //BaseLoginedService .. type BaseLoginedService struct { route.BaseService } //BeforeExcute .. func (s BaseLoginedService) BeforeExcute(args *route.ServiceArgs) { } //AfterExcute .. func (s BaseLoginedService) AfterExcute(args *route.ServiceArgs) { } \u5728\u6b64\u7c7b\u578b\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9BeforeExcute\u3001AfterExcute\u7684\u6269\u5c55\uff0c\u505a\u4e00\u4e9b\u62e6\u622a\u7684\u64cd\u4f5c\uff08\u6bd4\u5982BeforeExcute\u4e2d\u68c0\u67e5\u662f\u5426\u6709\u767b\u5f55\u4fe1\u606f\uff0c\u6ca1\u6709\u65f6\u76f4\u63a5panic\u5373\u53ef\uff09\u3001\u8c03\u7528\u540e\u5904\u7406\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49BaseLoginedService\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u5b9e\u73b0\u66f4\u591a\u7684\u62e6\u622a\u5668\u64cd\u4f5c \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u62e6\u622a\u5668\u201d\u662f\u901a\u8fc7\u7c7b\u7684\u7ee7\u627f\u6765\u5b9e\u73b0\u7684\uff0c\u548c\u771f\u6b63\u7684\u201c\u62e6\u622a\u5668\u201d\u6709\u4e00\u5b9a\u5dee\u522b","title":"\u62e6\u622a\u5668"},{"location":"ie310go/api_other/#session","text":"httpServer\u4e2d\u63d0\u4f9b\u5bf9session\u7684\u652f\u6301\uff08\u4f46\u4e0d\u63a8\u8350\u4f7f\u7528\uff0cie310go\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u81ea\u5b9a\u4e49token\u7684\u65b9\u5f0f\uff09 \u8981\u542f\u7528session\uff0c\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\uff1a ie310go.AppSessionInitFunc = session.Init //.....other code ie310go.Run(nil) //Init .. func Init() { sessionConfig := session.ManagerConfig{ Gclifetime: 3600, Maxlifetime: 3600, Secure: false, CookieLifeTime: 3600, ProviderConfig: ./tmp , } //config.Config.RedisURL\u6307\u793a\u662f\u5426\u4f7f\u7528redis\u4fdd\u5b58session\uff0c\u793a\u4f8b\u503c 127.0.0.1:6379 if config.Config.RedisURL != { logsagent.Info( session where init as redis : + config.Config.RedisURL) sessionConfig.ProviderConfig = config.Config.RedisURL gs, err := session.NewManager( redis , sessionConfig) throw.CheckErr(err) session.GlobalSessions = gs logsagent.Info( session init as redis : + config.Config.RedisURL) } else { logsagent.Info( session where init as memory ) gs, err := session.NewManager( memory , sessionConfig) throw.CheckErr(err) session.GlobalSessions = gs logsagent.Info( session init as memory ) } go session.GlobalSessions.GC() }","title":"session"},{"location":"ie310go/api_other/#_2","text":"\u793a\u4f8b\u4ee3\u7801\uff08\u6458\u53d6\u81ea i3work \uff09\uff1a //UploadFile \u53ea\u80fd\u7528\u4e8ehttp\u534f\u8bae\uff0c\u9700\u8981\u9644\u52a0\u53c2\u6570 packageResult=false convertResult=false func (s TaskRecordService) UploadFile(args *route.ServiceArgs) (result string) { defer func() { if err := recover(); err != nil { result = fmt.Sprintf( %v , err) } }() rs := args.GetRs().(*route.RequestResponseHTTP) r := rs.GetR() err := r.ParseMultipartForm(18 * 1024) throw.CheckErr(err) taskID := args.GetStringParamWithCheck( taskId , false) actionID := args.GetStringParamWithCheck( actionId , true) fileSize := args.GetIntParam( fileSize ) upFileName := args.GetStringParamWithCheck( fileName , false) userutil.CheckRole(args, userutil.DefaultError, file ) task := mapper.GetTaskRecordMapper( ro ).Get(nil, taskID) userutil.CheckProjectPower(args, userutil.DefaultError, task.ProjectCode) //\u83b7\u53d6handler file, handler, err := r.FormFile( file ) throw.CheckErr(err) defer file.Close() //fileSize if fileSize 100*1024*1024 { panic( \u6587\u4ef6\u4e0d\u80fd\u8d85\u8fc7100M ) } fileSizeKB := float64(fileSize) / float64(1024) fileSizeKB = math.RoundToEven(fileSizeKB) fmt.Println(fileSizeKB) defer func() { if err := recover(); err != nil { result = obj.InterfaceToStr(err) } }() //md5 body, err := ioutil.ReadAll(file) if err != nil { fmt.Println( ReadAll , err) return } //md5.Sum(body) md5Value := fmt.Sprintf( %x , md5.Sum(body)) fmt.Println(md5Value) //\u6587\u4ef6\u7c7b\u578b ext := path.Ext(handler.Filename) if ext == { panic( \u6587\u4ef6\u6ca1\u6709\u540e\u7f00\u540d ) } ext = strings.ToLower(ext) if ext != .xls ext != .xlsx ext != .doc ext != .docx ext != .pdf ext != .rar ext != .zip ext != .jpeg ext != .jpg ext != .png ext != .txt ext != .sql { panic( \u4ec5\u652f\u6301\u6587\u4ef6\u540e\u7f00\u540d\u4e3axls\u3001xlsx\u3001doc\u3001docx\u3001pdf\u3001rar\u3001zip\u3001jpeg\u3001jpg\u3001png\u3001txt\u3001sql ) } fmt.Println(ext) //\u521b\u5efa\u6570\u636e\u8bb0\u5f55 mp := mapper.GetTaskActionMapper( ) des := upFileName action := taskutil.CreateAction(args, taskID, \u4e0a\u4f20\u9644\u4ef6 , des, false) if actionID != { action = mp.Get(nil, actionID) action.Des = des } action.Md5 = md5Value action.Ext = ext action.ExtSize = float32(fileSize) action.ExtSize = action.ExtSize / float32(1024) //\u4fdd\u5b58\u6587\u4ef6 fileName := s.getUploadFileName(md5Value, ext) if !dir.PathExists(fileName) { f, err := os.OpenFile(fileName, os.O_WRONLY|os.O_CREATE, 0666) throw.CheckErr(err) defer f.Close() file.Seek(0, 0) io.Copy(f, file) } if actionID == { mp.Insert(nil, action) userutil.SaveAction(nil, args, \u4e0a\u4f20\u9644\u4ef6\uff1a +upFileName, task) } else { mp.Update(nil, action) userutil.SaveAction(nil, args, \u66ff\u6362\u9644\u4ef6\uff1a +upFileName, task) } rs.CustomContentType = text/html;charset=utf-8 return ` !DOCTYPE html html body class= layui-layout-body \u4e0a\u4f20\u6210\u529f script src= /packages/layui/layui.all.js /script script src= /js/base.js /script script $(function () { setTimeout(() = { window.top.closeFrm(true, addFile ); }, 500); }) /script /body /html ` } form action= /taskRecordService.goss?m=uploadFile packageResult=false convertResult=false cu=false method= post enctype= multipart/form-data id= form div class= layui-layout layui-layout-admin div class= layui-body style= top: 0px;left:0px;padding: 30px; input type= hidden id= taskId name= taskId / input type= hidden id= actionId name= actionId / input type= hidden id= fileSize name= fileSize / input type= hidden id= fileName name= fileName / input type= hidden id= token name= token / span id= fileNameSpan /span br / br / input class= dn type= file id= file name= file onchange= fileChanged(this.files); / /div div class= layui-footer style= left: 0px;height: 60px;z-index: 999; div class= layui-btn-container style= width: 100%;padding-top: 10px; button type= button class= layui-btn style= float: left; onclick= selectFile(); \u9009\u62e9\u6587\u4ef6 /button button type= button class= layui-btn layui-btn-danger style= float: right; onclick= uploadFile(); \u4e0a\u4f20 /button /div /div /div /form","title":"\u4e0a\u4f20\u6587\u4ef6"},{"location":"ie310go/api_other/#_3","text":"\u793a\u4f8b\u4ee3\u7801\uff08\u6458\u53d6\u81ea i3work \uff09\uff1a //DownloadFile .. func (s TaskRecordService) DownloadFile(args *route.ServiceArgs) { id := args.GetStringParamWithCheck( id , true) mp := mapper.GetTaskActionMapper( ro ) action := mp.Get(nil, id) if action == nil { panic( \u9644\u4ef6\u4e0d\u5b58\u5728 ) } task := mapper.GetTaskRecordMapper( ro ).Get(nil, action.TaskID) userutil.CheckProjectPower(args, userutil.DefaultError, task.ProjectCode) fileName := s.getUploadFileName(action.Md5, action.Ext) if !dir.PathExists(fileName) { panic( \u6587\u4ef6\u4e0d\u5b58\u5728 ) } file, err := os.Open(fileName) throw.CheckErr(err) defer file.Close() rs := args.GetRs().(*route.RequestResponseHTTP) rs.GetW().Header().Add( Content-Type , application/octet-stream ) rs.GetW().Header().Add( content-disposition , attachment; filename=\\ +action.Des+ \\ ) _, err = io.Copy(rs.GetW(), file) throw.CheckErr(err) }","title":"\u4e0b\u8f7d\u6587\u4ef6"},{"location":"ie310go/api_other/#header","text":"httpServer\u7684Content-Type\u9ed8\u8ba4\u503c\u4e3aapplication/json;charset=utf-8\uff0c\u53ef\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u81ea\u5b9a\u4e49\uff1a rs.CustomContentType = text/html;charset=utf-8 \u4e0a\u8ff0\u4ee3\u7801\u9002\u7528\u4e8e\u666e\u901a\u65b9\u6cd5\uff08\u8fd4\u56de\u503c\u7531ie310go\u5c01\u88c5\u6210JSONServiceResult\u540e\u8f6c\u6362\u4e3ajson\u5b57\u7b26\u4e32\u518d\u8f93\u51fa\uff09\uff0c\u5982\u679c\u7c7b\u4f3c\u4e8e\u4e0a\u6587\u4e2d\u4e0b\u8f7d\u6587\u4ef6\u7684\u8f93\u51fa\u65b9\u5f0f\uff08io.Copy(rs.GetW(), file)\uff09\uff0c\u5219\u9700\u8981\u5728Hearder\u4e2d\u5b9a\u4e49\uff1a rs := args.GetRs().(*route.RequestResponseHTTP) rs.GetW().Header().Add( Content-Type , application/octet-stream ) rs.GetW().Header().Add( content-disposition , attachment; filename=\\ +action.Des+ \\ ) _, err = io.Copy(rs.GetW(), file) throw.CheckErr(err)","title":"Header"},{"location":"ie310go/api_other/#_4","text":"redirect\uff08\u6682\u672a\u5b9e\u73b0\uff09","title":"\u5176\u4ed6"},{"location":"ie310go/by/","text":"\u7f16\u8bd1 \u4f7f\u7528go\u7684\u539f\u751f\u7f16\u8bd1\u529f\u80fd\u5373\u53ef\uff0c\u5982\uff1a go build main.go \u5982\u679c\u7f16\u8bd1\u5e73\u53f0\u3001\u90e8\u7f72\u5e73\u53f0\u4e0d\u4e00\u81f4\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u529f\u80fd \uff08\u63a8\u8350\u76f4\u63a5\u5728\u76ee\u6807\u5e73\u53f0\u4e0a\u7f16\u8bd1\uff0c\u66f4\u7b80\u5355\uff09 \u53d1\u5e03 \u5c06\u7f16\u8bd1\u7ed3\u679c\u3001\u914d\u7f6e\u6587\u4ef6\u4ee5\u4efb\u610f\u4f60\u719f\u6089\u7684\u65b9\u5f0f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u8fd0\u884c\u5373\u53ef \u5982\u679c\u5f00\u542f\u4e86\u9759\u6001\u6587\u4ef6\u4ee3\u7406\uff0c\u6ce8\u610f\u9759\u6001\u6587\u4ef6\u4e5f\u9700\u8981\u53d1\u5e03","title":"\u7f16\u8bd1\u4e0e\u53d1\u5e03"},{"location":"ie310go/by/#_1","text":"\u4f7f\u7528go\u7684\u539f\u751f\u7f16\u8bd1\u529f\u80fd\u5373\u53ef\uff0c\u5982\uff1a go build main.go \u5982\u679c\u7f16\u8bd1\u5e73\u53f0\u3001\u90e8\u7f72\u5e73\u53f0\u4e0d\u4e00\u81f4\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u529f\u80fd \uff08\u63a8\u8350\u76f4\u63a5\u5728\u76ee\u6807\u5e73\u53f0\u4e0a\u7f16\u8bd1\uff0c\u66f4\u7b80\u5355\uff09","title":"\u7f16\u8bd1"},{"location":"ie310go/by/#_2","text":"\u5c06\u7f16\u8bd1\u7ed3\u679c\u3001\u914d\u7f6e\u6587\u4ef6\u4ee5\u4efb\u610f\u4f60\u719f\u6089\u7684\u65b9\u5f0f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u8fd0\u884c\u5373\u53ef \u5982\u679c\u5f00\u542f\u4e86\u9759\u6001\u6587\u4ef6\u4ee3\u7406\uff0c\u6ce8\u610f\u9759\u6001\u6587\u4ef6\u4e5f\u9700\u8981\u53d1\u5e03","title":"\u53d1\u5e03"},{"location":"ie310go/cache/","text":"\u7b80\u4ecb cache\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---cache\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/cache \u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863 \u7f13\u5b58\u6a21\u5757 beego \u7684 cache \u6a21\u5757\u662f\u7528\u6765\u505a\u6570\u636e\u7f13\u5b58\u7684\uff0c\u8bbe\u8ba1\u601d\u8def\u6765\u81ea\u4e8e database/sql \uff0c\u76ee\u524d\u652f\u6301 file\u3001memcache\u3001memory \u548c redis \u56db\u79cd\u5f15\u64ce\uff0c\u5b89\u88c5\u65b9\u5f0f\u5982\u4e0b\uff1a go get github.com/astaxie/beego/cache \u5982\u679c\u4f60\u4f7f\u7528memcache \u6216\u8005 redis \u9a71\u52a8\u5c31\u9700\u8981\u624b\u5de5\u5b89\u88c5\u5f15\u5165\u5305 go get -u github.com/astaxie/beego/cache/memcache \u800c\u4e14\u9700\u8981\u5728\u4f7f\u7528\u7684\u5730\u65b9\u5f15\u5165\u5305 import _ github.com/astaxie/beego/cache/memcache \u4f7f\u7528\u5165\u95e8 \u9996\u5148\u5f15\u5165\u5305\uff1a import ( github.com/astaxie/beego/cache ) \u7136\u540e\u521d\u59cb\u5316\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u5bf9\u8c61\uff1a bm, err := cache.NewCache( memory , `{ interval :60}`) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528bm\u589e\u5220\u6539\u7f13\u5b58\uff1a bm.Put( astaxie , 1, 10*time.Second) bm.Get( astaxie ) bm.IsExist( astaxie ) bm.Delete( astaxie ) \u5f15\u64ce\u8bbe\u7f6e \u76ee\u524d\u652f\u6301\u56db\u79cd\u4e0d\u540c\u7684\u5f15\u64ce\uff0c\u63a5\u4e0b\u6765\u5206\u522b\u4ecb\u7ecd\u8fd9\u56db\u79cd\u5f15\u64ce\u5982\u4f55\u8bbe\u7f6e\uff1a memory \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u914d\u7f6e\u7684\u4fe1\u606f\u8868\u793a GC \u7684\u65f6\u95f4\uff0c\u8868\u793a\u6bcf\u4e2a 60s \u4f1a\u8fdb\u884c\u4e00\u6b21\u8fc7\u671f\u6e05\u7406\uff1a { interval :60} file \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u914d\u7f6e CachePath \u8868\u793a\u7f13\u5b58\u7684\u6587\u4ef6\u76ee\u5f55\uff0c FileSuffix \u8868\u793a\u6587\u4ef6\u540e\u7f00\uff0c DirectoryLevel \u8868\u793a\u76ee\u5f55\u5c42\u7ea7\uff0c EmbedExpiry \u8868\u793a\u8fc7\u671f\u8bbe\u7f6e { CachePath : ./cache , FileSuffix : .cache , DirectoryLevel : 2 , EmbedExpiry : 120 } redis \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0credis \u91c7\u7528\u4e86\u5e93 redigo : { key : collectionName , conn : :6039 , dbNum : 0 , password : thePassWord } key: Redis collection \u7684\u540d\u79f0 conn: Redis \u8fde\u63a5\u4fe1\u606f dbNum: \u8fde\u63a5 Redis \u65f6\u7684 DB \u7f16\u53f7. \u9ed8\u8ba4\u662f0. password: \u7528\u4e8e\u8fde\u63a5\u6709\u5bc6\u7801\u7684 Redis \u670d\u52a1\u5668. memcache \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0cmemcache \u91c7\u7528\u4e86 vitess\u7684\u5e93 \uff0c\u8868\u793a memcache \u7684\u8fde\u63a5\u5730\u5740\uff1a { conn : 127.0.0.1:11211 } \u5f00\u53d1\u81ea\u5df1\u7684\u5f15\u64ce cache \u6a21\u5757\u91c7\u7528\u4e86\u63a5\u53e3\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u63a5\u53e3\uff0c\u7136\u540e\u6ce8\u518c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684 Cache \u5f15\u64ce\uff1a type Cache interface { Get(key string) interface{} GetMulti(keys []string) []interface{} Put(key string, val interface{}, timeout time.Duration) error Delete(key string) error Incr(key string) error Decr(key string) error IsExist(key string) bool ClearAll() error StartAndGC(config string) error } \u7528\u6237\u5f00\u53d1\u5b8c\u6bd5\u5728\u6700\u540e\u5199\u7c7b\u4f3c\u8fd9\u6837\u7684\uff1a func init() { Register( myowncache , NewOwnCache()) }","title":"cache"},{"location":"ie310go/cache/#_1","text":"cache\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---cache\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/cache","title":"\u7b80\u4ecb"},{"location":"ie310go/cache/#beego","text":"","title":"\u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863"},{"location":"ie310go/cache/#_2","text":"beego \u7684 cache \u6a21\u5757\u662f\u7528\u6765\u505a\u6570\u636e\u7f13\u5b58\u7684\uff0c\u8bbe\u8ba1\u601d\u8def\u6765\u81ea\u4e8e database/sql \uff0c\u76ee\u524d\u652f\u6301 file\u3001memcache\u3001memory \u548c redis \u56db\u79cd\u5f15\u64ce\uff0c\u5b89\u88c5\u65b9\u5f0f\u5982\u4e0b\uff1a go get github.com/astaxie/beego/cache \u5982\u679c\u4f60\u4f7f\u7528memcache \u6216\u8005 redis \u9a71\u52a8\u5c31\u9700\u8981\u624b\u5de5\u5b89\u88c5\u5f15\u5165\u5305 go get -u github.com/astaxie/beego/cache/memcache \u800c\u4e14\u9700\u8981\u5728\u4f7f\u7528\u7684\u5730\u65b9\u5f15\u5165\u5305 import _ github.com/astaxie/beego/cache/memcache","title":"\u7f13\u5b58\u6a21\u5757"},{"location":"ie310go/cache/#_3","text":"\u9996\u5148\u5f15\u5165\u5305\uff1a import ( github.com/astaxie/beego/cache ) \u7136\u540e\u521d\u59cb\u5316\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u5bf9\u8c61\uff1a bm, err := cache.NewCache( memory , `{ interval :60}`) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528bm\u589e\u5220\u6539\u7f13\u5b58\uff1a bm.Put( astaxie , 1, 10*time.Second) bm.Get( astaxie ) bm.IsExist( astaxie ) bm.Delete( astaxie )","title":"\u4f7f\u7528\u5165\u95e8"},{"location":"ie310go/cache/#_4","text":"\u76ee\u524d\u652f\u6301\u56db\u79cd\u4e0d\u540c\u7684\u5f15\u64ce\uff0c\u63a5\u4e0b\u6765\u5206\u522b\u4ecb\u7ecd\u8fd9\u56db\u79cd\u5f15\u64ce\u5982\u4f55\u8bbe\u7f6e\uff1a memory \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u914d\u7f6e\u7684\u4fe1\u606f\u8868\u793a GC \u7684\u65f6\u95f4\uff0c\u8868\u793a\u6bcf\u4e2a 60s \u4f1a\u8fdb\u884c\u4e00\u6b21\u8fc7\u671f\u6e05\u7406\uff1a { interval :60} file \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u914d\u7f6e CachePath \u8868\u793a\u7f13\u5b58\u7684\u6587\u4ef6\u76ee\u5f55\uff0c FileSuffix \u8868\u793a\u6587\u4ef6\u540e\u7f00\uff0c DirectoryLevel \u8868\u793a\u76ee\u5f55\u5c42\u7ea7\uff0c EmbedExpiry \u8868\u793a\u8fc7\u671f\u8bbe\u7f6e { CachePath : ./cache , FileSuffix : .cache , DirectoryLevel : 2 , EmbedExpiry : 120 } redis \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0credis \u91c7\u7528\u4e86\u5e93 redigo : { key : collectionName , conn : :6039 , dbNum : 0 , password : thePassWord } key: Redis collection \u7684\u540d\u79f0 conn: Redis \u8fde\u63a5\u4fe1\u606f dbNum: \u8fde\u63a5 Redis \u65f6\u7684 DB \u7f16\u53f7. \u9ed8\u8ba4\u662f0. password: \u7528\u4e8e\u8fde\u63a5\u6709\u5bc6\u7801\u7684 Redis \u670d\u52a1\u5668. memcache \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0cmemcache \u91c7\u7528\u4e86 vitess\u7684\u5e93 \uff0c\u8868\u793a memcache \u7684\u8fde\u63a5\u5730\u5740\uff1a { conn : 127.0.0.1:11211 }","title":"\u5f15\u64ce\u8bbe\u7f6e"},{"location":"ie310go/cache/#_5","text":"cache \u6a21\u5757\u91c7\u7528\u4e86\u63a5\u53e3\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u63a5\u53e3\uff0c\u7136\u540e\u6ce8\u518c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684 Cache \u5f15\u64ce\uff1a type Cache interface { Get(key string) interface{} GetMulti(keys []string) []interface{} Put(key string, val interface{}, timeout time.Duration) error Delete(key string) error Incr(key string) error Decr(key string) error IsExist(key string) bool ClearAll() error StartAndGC(config string) error } \u7528\u6237\u5f00\u53d1\u5b8c\u6bd5\u5728\u6700\u540e\u5199\u7c7b\u4f3c\u8fd9\u6837\u7684\uff1a func init() { Register( myowncache , NewOwnCache()) }","title":"\u5f00\u53d1\u81ea\u5df1\u7684\u5f15\u64ce"},{"location":"ie310go/cm_custom/","text":"\u81ea\u52a8\u751f\u6210\u4ee3\u7801\uff0c\u5fc5\u7136\u662f\u4f1a\u8fdb\u884c\u591a\u6b21\uff0c\u4e0d\u4f1a\u53ea\u751f\u6210\u4e00\u6b21\u5c31OK\u4e86 \u8fd9\u6837\uff0c\u5c31\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u751f\u6210\u7684\u4ee3\u7801\u4e0d\u6ee1\u8db3\u9700\u6c42\uff0c\u9700\u8981\u81ea\u884c\u4fee\u6539\u65f6\uff0c\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\u3001\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u5982\u4f55\u5171\u5b58\uff1f\u5982\u4f55\u4fdd\u8bc1\u91cd\u65b0\u751f\u6210\u65f6\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u8986\u76d6\u6389\uff1f \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0ci3go_codemaker\u751f\u6210\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u6807\u8bb0\uff0c\u7528\u4e8e\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5185\u5bb9 \u6bd4\u5982Model\u4ee3\u7801\u4e2d\uff1a package model import ( //customRefrenceBegin time //customRefrenceEnd ) //ConsumeRecord .. type ConsumeRecord struct { ID string `json: id db: id ` CreateTime time.Time `json: createTime db: createTime ` Type string `json: type db: type ` Value float32 `json: value db: value ` //customContentBegin //customContentEnd } \u4e0a\u9762\u7684//customRefrenceBegin\u3001//customRefrenceEnd\u5c31\u662f\u4e00\u5bf9\u6807\u8bb0\uff0c\u5b83\u4eec\u4e2d\u95f4\u7684\u5185\u5bb9\u5728\u91cd\u65b0\u751f\u6210\u65f6\u4f1a\u4fdd\u7559 Model\u3001Mapper\u3001Service\u4e2d\u5305\u542b\u5927\u91cf\u7684\u6807\u8bb0\uff0c\u6709\u9488\u5bf9\u65b9\u6cd5\u5185\u90e8\u7684\u3001\u6709\u9488\u5bf9\u4ee3\u7801\u6587\u4ef6\u7684\uff0c\u4ee5//xxxxBegin\u3001//xxxxEnd\u6210\u5bf9\u7684\u5f62\u5f0f\u51fa\u73b0 \u4e0d\u5728\u6807\u8bb0\u5bf9\u4e2d\u7684\u4ee3\u7801\uff0c\u5728\u91cd\u65b0\u751f\u6210\u540e\u4f1a\u4e22\u5931","title":"\u81ea\u5b9a\u4e49\u5185\u5bb9/\u6807\u8bb0\u5bf9"},{"location":"ie310go/cm_demo/","text":"\u76ee\u6807 \u5f00\u53d1\u4e00\u4e2a\u8bb0\u5e10\u670d\u52a1\uff0c\u63d0\u4f9bcrud\u63a5\u53e3\uff0c\u4f9b\u9759\u6001\u7f51\u9875\u8c03\u7528 \u6570\u636e\u5e93 \u5b89\u88c5mysql\u6570\u636e\u5e93 \u65b0\u5efa\u6570\u636e\u5e93 i3got002 \u65b0\u5efa\u6570\u636e\u8868 consume_record\uff1a CREATE TABLE `consume_record` ( `id` char(36) NOT NULL, `createTime` datetime DEFAULT NULL, `type` varchar(50) DEFAULT NULL, `value` decimal(14,2) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 \u63d0\u524d\u7533\u660e \u672c\u9875\u9762\u540e\u7eed\u7684\u793a\u4f8b\u4e2d\uff1a 1. i3go_codemaker\u4e2d\u7684\u914d\u7f6e\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u3002 \uff08\u6587\u4ef6\u76ee\u5f55\u3001\u5f15\u7528\u8def\u5f84\uff09 2. main.go\u4ee3\u7801\u4e2d\u7684\u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32\u3001service\u5305\u5f15\u7528\u8def\u5f84\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u3002 \u914d\u7f6e\u4e0e\u751f\u6210\u4ee3\u7801 \u751f\u6210\u9879\u76ee\u76ee\u5f55\uff1ai3go_t002 \uff08\u653e\u5728\u4f60\u81ea\u5df1\u60f3\u653e\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\u6211\u653e\u5728F:\\ie310.code\\GOWORK\\src\\github.com\\ie310mu\\tmp\\i3go_t002\uff0cF:\\ie310.code\\GOWORK\u5bf9\u5e94\u4e8e\u73af\u5883\u53d8\u91cfGOPATH\uff09 \u4e0b\u8f7d\u4ee3\u7801\u751f\u6210\u5de5\u5177 i3go_codemaker_2019.08.16.rar \uff0c\u89e3\u538b\u5230\u4efb\u610f\u76ee\u5f55 \u8fd0\u884c i3go_codemaker.exe \uff08\u9700\u8981.net framework 2.0\u652f\u6301\uff09 \u65b0\u5efa\u65b9\u6848 i3go_t002 \u6309\u4e0b\u56fe\u6b65\u9aa4\u64cd\u4f5c\u5e76\u8f93\u5165\u5185\u5bb9\uff1a \u70b9\u51fb\u751f\u6210\u6309\u94ae\uff0c\u5f00\u59cb\u4ee3\u7801\u751f\u6210\uff0c\u751f\u6210\u5b8c\u6bd5\u540e\u4f1a\u63d0\u793a\uff1a \u6253\u5f00\u8f93\u51fa\u76ee\u5f55\uff0c\u53ef\u4ee5\u770b\u5230\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6 \u5176\u4ed6\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801 \u6253\u5f00ConsumeRecord.go\u6587\u4ef6\uff0c\u627e\u5230\u201c//customRefrenceBegin\u201d\uff0c\u6362\u884c\u540e\u8f93\u5165 \"time\"\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a import ( //customRefrenceBegin time //customRefrenceEnd ) \u6253\u5f00ConsumeRecordService.go\u6587\u4ef6\uff0c\u627e\u5230\u6700\u540e\u9762\u7684\uff1a //goExportsSettingsBegin //false;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u4fee\u6539\u4e3a\uff1a\uff08\u5c06\u7b2c2\u884c\u6700\u524d\u9762\u7684false\u4fee\u6539\u4e3atrue\uff09 //goExportsSettingsBegin //true;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u7528i3go_codemaker\u91cd\u65b0\u751f\u6210\u4e00\u6b21\u4ee3\u7801\uff0c \u5f88\u91cd\u8981 \u5728\u6b64\u6587\u4ef6\u4e2d\uff0c\u627e\u5230Add\u65b9\u6cd5\u4e2d\u7684customBeforeAddContentBegin\u5b57\u6837\uff0c\u6362\u884c\uff0c\u8f93\u5165\uff1a item.CreateTime = time.Now() \u7136\u540e\u6dfb\u52a0\u5bf9time\u5305\u7684\u5bfc\u5165 \u5728service\u76ee\u5f55\u4e0b\u751f\u6210\u6587\u4ef6BaseLoginedService.go\uff0c\u8f93\u5165\u5185\u5bb9\uff1a package service import ( github.com/ie310mu/ie310go/route ) //BaseLoginedService .. type BaseLoginedService struct { route.BaseService } //BeforeExcute .. func (s BaseLoginedService) BeforeExcute(args *route.ServiceArgs) { } //AfterExcute .. func (s BaseLoginedService) AfterExcute(args *route.ServiceArgs) { } \u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u751f\u6210\u6587\u4ef6main.go\uff0c\u8f93\u5165\u5185\u5bb9\uff1a package main import ( fmt os os/signal syscall _ github.com/ie310mu/tmp/i3go_t002/service //\u5bfc\u5165services github.com/ie310mu/ie310go/common/logsagent github.com/ie310mu/ie310go/forks/github.com/ilibs/gosql github.com/ie310mu/ie310go github.com/ie310mu/ie310go/route ) func main() { defer func() { if err := recover(); err != nil { logsagent.Error( Exception has been caught. , err) logsagent.Warn( Press return to exit. ) var empty string fmt.Scanln( empty) } }() appinit() go ie310go.Run(nil) defer ie310go.Stop() sigs := make(chan os.Signal, 1) signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT) for s := range sigs { switch s { case syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT: logsagent.Info( got signal and try to exit: , s) return default: fmt.Println( got other signal : , s) } } } func appinit() { cfg := gosql.Config{Enable: true, Driver: mysql , Dsn: root:123456@tcp(127.0.0.1:3307)/i3got002?charset=utf8 parseTime=True loc=Asia%2FShanghai } ie310go.SetDbInfo(cfg, cfg) //server\u521d\u59cb\u5316 httpConfig := route.ServerHTTPConfig{Port: 8113 , ServiceSuffix: goss } srv := route.NewServerHTTP(httpConfig, httpServer ) exportServices(route.Services, srv) route.RegisterServer(srv) } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } } \u793a\u4f8b\u4ee3\u7801\u4e0b\u8f7d i3go_t002.rar \u542f\u52a8\u4e0e\u8c03\u7528 \u5728i3go_t002\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4\uff1a\uff08\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528go run main.go\uff0c\u56e0\u4e3a\u90a3\u6837\u8fd0\u884c\u76ee\u5f55\u662f\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\uff0c\u4f1a\u8bbf\u95ee\u4e0d\u5230\u7f51\u9875\u6587\u4ef6\uff09 go build main.go main \u65b0\u589e\u8bb0\u5f55 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=add useJsonp=true itemJson=%7B%22type%22%3A%22%E5%8D%88%E9%A4%90%22%2C%22value%22%3A25%7D \u6ce8\uff1a itemJson\u662fencodeURIComponent\u540e\u7684json\u5b57\u7b26\u4e32\uff0c\u53ef\u5728chrome\u7b49\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u751f\u6210\uff1a var item={}; item.type = \u5348\u9910 ; item.value = 25.00; json = JSON.stringify(item); json = encodeURIComponent(json); console.info(json); \u6ce8\uff1a useJsonp=true\u53c2\u6570\u7528\u4e8e\u6307\u793a\u662f\u5426\u662f\u8de8\u57df\u8bf7\u6c42\uff0c\u4e0d\u6307\u5b9a\u6b64\u53c2\u6570\u672a\u8fd4\u56derefer error\u5f02\u5e38 \u4fee\u6539\u8bb0\u5f55 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=update useJsonp=true itemJson=%7B%22value%22%3A21%2C%22type%22%3A%22%E6%99%9A%E9%A4%90%22%2C%22id%22%3A%225bd7b7b2-53c9-465e-ba31-9757cdabbc35%22%7D \u6ce8\uff1a itemJson\u662fencodeURIComponent\u540e\u7684json\u5b57\u7b26\u4e32\uff0c\u53ef\u5728chrome\u7b49\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u751f\u6210\uff1a var item={}; item.id = 5bd7b7b2-53c9-465e-ba31-9757cdabbc35 ; //id\u5fc5\u987b\u4e0e\u524d\u9762add\u64cd\u4f5c\u8fd4\u56de\u7684id\u5bf9\u5e94 item.type = \u665a\u9910 ; item.value = 21.00; json = JSON.stringify(item); json = encodeURIComponent(json); console.info(json); \u5220\u9664\u8bb0\u5f55 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=delete useJsonp=true id=5bd7b7b2-53c9-465e-ba31-9757cdabbc35 \u67e5\u8be2\u8bb0\u5f55 \u51c6\u5907\u6570\u636e\uff1a\u591a\u8fdb\u884c\u51e0\u6b21\u6dfb\u52a0\u8bb0\u5f55\u64cd\u4f5c\uff0c\u7136\u540e\u6253\u5f00\u6570\u636e\u5e93\u624b\u5de5\u4fee\u6539\u81f3\u7c7b\u4f3c\u5982\u4e0b\u6570\u636e\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true page=2 rows=4 sort=value%20desc \u53c2\u6570\u8bf4\u660e\uff1a page\uff1a\u663e\u793a\u7b2c\u51e0\u9875\uff0c\u4ece1\u5f00\u59cb\uff0c\u9ed8\u8ba4\u503c1 rows\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e\uff0c\u9ed8\u8ba4\u503c40 sort\uff1a\u6392\u5e8f\uff0c\u9ed8\u8ba4\u4e3a\u7a7a \u7ed3\u679c\u8bf4\u660e\uff1a state\uff1a\u72b6\u6001\uff0c\u4e3a0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5982\u679c\u63a5\u53e3\u8c03\u7528\u9519\u8bef\uff0c\u8fd9\u91cc\u5b58\u50a8\u9519\u8bef\u6d88\u606f data\uff1a\u8fd4\u56de\u7684\u6570\u636e\uff0c\u5bf9getList\u6765\u8bf4\uff0c\u662fpaging.PagingData\u7c7b\u578b data.pageIndex\uff1a\u9875\u7801\uff0c\u4ece1\u5f00\u59cb data.rowsInPage\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e data.pagecount\uff1a\u603b\u9875\u6570 data.total\uff1a\u603b\u884c\u6570 data.rows\uff1a\u7ed3\u679c\u6570\u7ec4 data.userData\uff1a\u5907\u7528\u5b57\u6bb5 \u6309\u7c7b\u522b\u67e5\u8be2 \u5728ConsumeRecordService.go\u6587\u4ef6\u4e2d\uff0c\u627e\u5230GetList\u65b9\u6cd5\uff0c\u5728\u201c//customBeforeGetListContentBegin\u201d\u4e0e\u201c//customBeforeGetListContentEnd\u201d\u4e4b\u95f4\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4ee3\u7801\uff1a whereStr = 1=1 typ := args.GetStringParamWithDefault( type , ) if typ != { whereStr = whereStr + and type = ? sqlArgs = append(sqlArgs, typ) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true type=%E6%99%9A%E9%A4%90 \u6309\u91d1\u989d\u67e5\u8be2 \u5728\u7c7b\u522b\u67e5\u8be2\u4ee3\u7801\u540e\u6dfb\u52a0\u91d1\u989d\u67e5\u8be2\u4ee3\u7801\uff1a bv := args.GetFloatParamWithDefault( bv , -9999) if bv != -9999 { whereStr = whereStr + and value = ? sqlArgs = append(sqlArgs, bv) } ev := args.GetFloatParamWithDefault( ev , -9999) if ev != -9999 { whereStr = whereStr + and value = ? sqlArgs = append(sqlArgs, ev) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true bv=26 ev=27 \u6309\u521b\u5efa\u65f6\u95f4\u67e5\u8be2 \u5728\u91d1\u989d\u67e5\u8be2\u4ee3\u7801\u540e\u6dfb\u52a0\u65f6\u95f4\u67e5\u8be2\u4ee3\u7801\uff1a beginDate := args.GetBeginDateParam() if !beginDate.IsZero() { whereStr = whereStr + and createTime = ? sqlArgs = append(sqlArgs, beginDate) } endDate := args.GetEndDateParam() if !endDate.IsZero() { whereStr = whereStr + and createTime ? sqlArgs = append(sqlArgs, endDate) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true beginDate=2019-08-13 endDate=2019-08-14 \u7279\u522b\u8bf4\u660e \u4e0a\u9762\u6dfb\u52a0\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u53ef\u4ee5\u7ec4\u5408\u67e5\u8be2 \u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316demo\u4ee3\u7801\uff0c\u8bbf\u95ee\u63a5\u53e3\u65f6\u4f7f\u7528\u4e86get\u65b9\u5f0f\uff0c\u540c\u65f6\u5bf9\u590d\u6742\u64cd\u4f5c\u7684\u53c2\u6570\u505a\u4e86\u7f16\u7801\u64cd\u4f5c\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5efa\u8bae\u590d\u6742\u53c2\u6570\u901a\u8fc7post\u65b9\u5f0f\u63d0\u4ea4\uff0c\u907f\u514d\u7f16\u7801\u4e0d\u4e00\u81f4\u5f15\u53d1\u9519\u8bef\u3002 \u63d0\u4f9b\u4e86\u63a5\u53e3\u540e\uff0c\u9759\u6001\u7f51\u9875\u4e2d\u53ef\u4ee5\u7528\u4efb\u610f\u4f60\u719f\u6089\u7684\u65b9\u5f0f\u8fdb\u884c\u8c03\u7528\uff0c\u6bd4\u5982\u5feb\u901f\u5f00\u59cb\u4e2d\u7684\u65b9\u6cd5","title":"demo"},{"location":"ie310go/cm_demo/#_1","text":"\u5f00\u53d1\u4e00\u4e2a\u8bb0\u5e10\u670d\u52a1\uff0c\u63d0\u4f9bcrud\u63a5\u53e3\uff0c\u4f9b\u9759\u6001\u7f51\u9875\u8c03\u7528","title":"\u76ee\u6807"},{"location":"ie310go/cm_demo/#_2","text":"\u5b89\u88c5mysql\u6570\u636e\u5e93 \u65b0\u5efa\u6570\u636e\u5e93 i3got002 \u65b0\u5efa\u6570\u636e\u8868 consume_record\uff1a CREATE TABLE `consume_record` ( `id` char(36) NOT NULL, `createTime` datetime DEFAULT NULL, `type` varchar(50) DEFAULT NULL, `value` decimal(14,2) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8","title":"\u6570\u636e\u5e93"},{"location":"ie310go/cm_demo/#_3","text":"\u672c\u9875\u9762\u540e\u7eed\u7684\u793a\u4f8b\u4e2d\uff1a 1. i3go_codemaker\u4e2d\u7684\u914d\u7f6e\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u3002 \uff08\u6587\u4ef6\u76ee\u5f55\u3001\u5f15\u7528\u8def\u5f84\uff09 2. main.go\u4ee3\u7801\u4e2d\u7684\u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32\u3001service\u5305\u5f15\u7528\u8def\u5f84\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u4fee\u6539\u3002","title":"\u63d0\u524d\u7533\u660e"},{"location":"ie310go/cm_demo/#_4","text":"\u751f\u6210\u9879\u76ee\u76ee\u5f55\uff1ai3go_t002 \uff08\u653e\u5728\u4f60\u81ea\u5df1\u60f3\u653e\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\u6211\u653e\u5728F:\\ie310.code\\GOWORK\\src\\github.com\\ie310mu\\tmp\\i3go_t002\uff0cF:\\ie310.code\\GOWORK\u5bf9\u5e94\u4e8e\u73af\u5883\u53d8\u91cfGOPATH\uff09 \u4e0b\u8f7d\u4ee3\u7801\u751f\u6210\u5de5\u5177 i3go_codemaker_2019.08.16.rar \uff0c\u89e3\u538b\u5230\u4efb\u610f\u76ee\u5f55 \u8fd0\u884c i3go_codemaker.exe \uff08\u9700\u8981.net framework 2.0\u652f\u6301\uff09 \u65b0\u5efa\u65b9\u6848 i3go_t002 \u6309\u4e0b\u56fe\u6b65\u9aa4\u64cd\u4f5c\u5e76\u8f93\u5165\u5185\u5bb9\uff1a \u70b9\u51fb\u751f\u6210\u6309\u94ae\uff0c\u5f00\u59cb\u4ee3\u7801\u751f\u6210\uff0c\u751f\u6210\u5b8c\u6bd5\u540e\u4f1a\u63d0\u793a\uff1a \u6253\u5f00\u8f93\u51fa\u76ee\u5f55\uff0c\u53ef\u4ee5\u770b\u5230\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6","title":"\u914d\u7f6e\u4e0e\u751f\u6210\u4ee3\u7801"},{"location":"ie310go/cm_demo/#_5","text":"\u6253\u5f00ConsumeRecord.go\u6587\u4ef6\uff0c\u627e\u5230\u201c//customRefrenceBegin\u201d\uff0c\u6362\u884c\u540e\u8f93\u5165 \"time\"\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a import ( //customRefrenceBegin time //customRefrenceEnd ) \u6253\u5f00ConsumeRecordService.go\u6587\u4ef6\uff0c\u627e\u5230\u6700\u540e\u9762\u7684\uff1a //goExportsSettingsBegin //false;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u4fee\u6539\u4e3a\uff1a\uff08\u5c06\u7b2c2\u884c\u6700\u524d\u9762\u7684false\u4fee\u6539\u4e3atrue\uff09 //goExportsSettingsBegin //true;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u7528i3go_codemaker\u91cd\u65b0\u751f\u6210\u4e00\u6b21\u4ee3\u7801\uff0c \u5f88\u91cd\u8981 \u5728\u6b64\u6587\u4ef6\u4e2d\uff0c\u627e\u5230Add\u65b9\u6cd5\u4e2d\u7684customBeforeAddContentBegin\u5b57\u6837\uff0c\u6362\u884c\uff0c\u8f93\u5165\uff1a item.CreateTime = time.Now() \u7136\u540e\u6dfb\u52a0\u5bf9time\u5305\u7684\u5bfc\u5165 \u5728service\u76ee\u5f55\u4e0b\u751f\u6210\u6587\u4ef6BaseLoginedService.go\uff0c\u8f93\u5165\u5185\u5bb9\uff1a package service import ( github.com/ie310mu/ie310go/route ) //BaseLoginedService .. type BaseLoginedService struct { route.BaseService } //BeforeExcute .. func (s BaseLoginedService) BeforeExcute(args *route.ServiceArgs) { } //AfterExcute .. func (s BaseLoginedService) AfterExcute(args *route.ServiceArgs) { } \u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u751f\u6210\u6587\u4ef6main.go\uff0c\u8f93\u5165\u5185\u5bb9\uff1a package main import ( fmt os os/signal syscall _ github.com/ie310mu/tmp/i3go_t002/service //\u5bfc\u5165services github.com/ie310mu/ie310go/common/logsagent github.com/ie310mu/ie310go/forks/github.com/ilibs/gosql github.com/ie310mu/ie310go github.com/ie310mu/ie310go/route ) func main() { defer func() { if err := recover(); err != nil { logsagent.Error( Exception has been caught. , err) logsagent.Warn( Press return to exit. ) var empty string fmt.Scanln( empty) } }() appinit() go ie310go.Run(nil) defer ie310go.Stop() sigs := make(chan os.Signal, 1) signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT) for s := range sigs { switch s { case syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT: logsagent.Info( got signal and try to exit: , s) return default: fmt.Println( got other signal : , s) } } } func appinit() { cfg := gosql.Config{Enable: true, Driver: mysql , Dsn: root:123456@tcp(127.0.0.1:3307)/i3got002?charset=utf8 parseTime=True loc=Asia%2FShanghai } ie310go.SetDbInfo(cfg, cfg) //server\u521d\u59cb\u5316 httpConfig := route.ServerHTTPConfig{Port: 8113 , ServiceSuffix: goss } srv := route.NewServerHTTP(httpConfig, httpServer ) exportServices(route.Services, srv) route.RegisterServer(srv) } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } }","title":"\u5176\u4ed6\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801"},{"location":"ie310go/cm_demo/#_6","text":"i3go_t002.rar","title":"\u793a\u4f8b\u4ee3\u7801\u4e0b\u8f7d"},{"location":"ie310go/cm_demo/#_7","text":"\u5728i3go_t002\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4\uff1a\uff08\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528go run main.go\uff0c\u56e0\u4e3a\u90a3\u6837\u8fd0\u884c\u76ee\u5f55\u662f\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\uff0c\u4f1a\u8bbf\u95ee\u4e0d\u5230\u7f51\u9875\u6587\u4ef6\uff09 go build main.go main","title":"\u542f\u52a8\u4e0e\u8c03\u7528"},{"location":"ie310go/cm_demo/#_8","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=add useJsonp=true itemJson=%7B%22type%22%3A%22%E5%8D%88%E9%A4%90%22%2C%22value%22%3A25%7D \u6ce8\uff1a itemJson\u662fencodeURIComponent\u540e\u7684json\u5b57\u7b26\u4e32\uff0c\u53ef\u5728chrome\u7b49\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u751f\u6210\uff1a var item={}; item.type = \u5348\u9910 ; item.value = 25.00; json = JSON.stringify(item); json = encodeURIComponent(json); console.info(json); \u6ce8\uff1a useJsonp=true\u53c2\u6570\u7528\u4e8e\u6307\u793a\u662f\u5426\u662f\u8de8\u57df\u8bf7\u6c42\uff0c\u4e0d\u6307\u5b9a\u6b64\u53c2\u6570\u672a\u8fd4\u56derefer error\u5f02\u5e38","title":"\u65b0\u589e\u8bb0\u5f55"},{"location":"ie310go/cm_demo/#_9","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=update useJsonp=true itemJson=%7B%22value%22%3A21%2C%22type%22%3A%22%E6%99%9A%E9%A4%90%22%2C%22id%22%3A%225bd7b7b2-53c9-465e-ba31-9757cdabbc35%22%7D \u6ce8\uff1a itemJson\u662fencodeURIComponent\u540e\u7684json\u5b57\u7b26\u4e32\uff0c\u53ef\u5728chrome\u7b49\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u751f\u6210\uff1a var item={}; item.id = 5bd7b7b2-53c9-465e-ba31-9757cdabbc35 ; //id\u5fc5\u987b\u4e0e\u524d\u9762add\u64cd\u4f5c\u8fd4\u56de\u7684id\u5bf9\u5e94 item.type = \u665a\u9910 ; item.value = 21.00; json = JSON.stringify(item); json = encodeURIComponent(json); console.info(json);","title":"\u4fee\u6539\u8bb0\u5f55"},{"location":"ie310go/cm_demo/#_10","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=delete useJsonp=true id=5bd7b7b2-53c9-465e-ba31-9757cdabbc35","title":"\u5220\u9664\u8bb0\u5f55"},{"location":"ie310go/cm_demo/#_11","text":"\u51c6\u5907\u6570\u636e\uff1a\u591a\u8fdb\u884c\u51e0\u6b21\u6dfb\u52a0\u8bb0\u5f55\u64cd\u4f5c\uff0c\u7136\u540e\u6253\u5f00\u6570\u636e\u5e93\u624b\u5de5\u4fee\u6539\u81f3\u7c7b\u4f3c\u5982\u4e0b\u6570\u636e\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true page=2 rows=4 sort=value%20desc \u53c2\u6570\u8bf4\u660e\uff1a page\uff1a\u663e\u793a\u7b2c\u51e0\u9875\uff0c\u4ece1\u5f00\u59cb\uff0c\u9ed8\u8ba4\u503c1 rows\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e\uff0c\u9ed8\u8ba4\u503c40 sort\uff1a\u6392\u5e8f\uff0c\u9ed8\u8ba4\u4e3a\u7a7a \u7ed3\u679c\u8bf4\u660e\uff1a state\uff1a\u72b6\u6001\uff0c\u4e3a0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5982\u679c\u63a5\u53e3\u8c03\u7528\u9519\u8bef\uff0c\u8fd9\u91cc\u5b58\u50a8\u9519\u8bef\u6d88\u606f data\uff1a\u8fd4\u56de\u7684\u6570\u636e\uff0c\u5bf9getList\u6765\u8bf4\uff0c\u662fpaging.PagingData\u7c7b\u578b data.pageIndex\uff1a\u9875\u7801\uff0c\u4ece1\u5f00\u59cb data.rowsInPage\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e data.pagecount\uff1a\u603b\u9875\u6570 data.total\uff1a\u603b\u884c\u6570 data.rows\uff1a\u7ed3\u679c\u6570\u7ec4 data.userData\uff1a\u5907\u7528\u5b57\u6bb5","title":"\u67e5\u8be2\u8bb0\u5f55"},{"location":"ie310go/cm_demo/#_12","text":"\u5728ConsumeRecordService.go\u6587\u4ef6\u4e2d\uff0c\u627e\u5230GetList\u65b9\u6cd5\uff0c\u5728\u201c//customBeforeGetListContentBegin\u201d\u4e0e\u201c//customBeforeGetListContentEnd\u201d\u4e4b\u95f4\u6dfb\u52a0\u81ea\u5b9a\u4e49\u4ee3\u7801\uff1a whereStr = 1=1 typ := args.GetStringParamWithDefault( type , ) if typ != { whereStr = whereStr + and type = ? sqlArgs = append(sqlArgs, typ) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true type=%E6%99%9A%E9%A4%90","title":"\u6309\u7c7b\u522b\u67e5\u8be2"},{"location":"ie310go/cm_demo/#_13","text":"\u5728\u7c7b\u522b\u67e5\u8be2\u4ee3\u7801\u540e\u6dfb\u52a0\u91d1\u989d\u67e5\u8be2\u4ee3\u7801\uff1a bv := args.GetFloatParamWithDefault( bv , -9999) if bv != -9999 { whereStr = whereStr + and value = ? sqlArgs = append(sqlArgs, bv) } ev := args.GetFloatParamWithDefault( ev , -9999) if ev != -9999 { whereStr = whereStr + and value = ? sqlArgs = append(sqlArgs, ev) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true bv=26 ev=27","title":"\u6309\u91d1\u989d\u67e5\u8be2"},{"location":"ie310go/cm_demo/#_14","text":"\u5728\u91d1\u989d\u67e5\u8be2\u4ee3\u7801\u540e\u6dfb\u52a0\u65f6\u95f4\u67e5\u8be2\u4ee3\u7801\uff1a beginDate := args.GetBeginDateParam() if !beginDate.IsZero() { whereStr = whereStr + and createTime = ? sqlArgs = append(sqlArgs, beginDate) } endDate := args.GetEndDateParam() if !endDate.IsZero() { whereStr = whereStr + and createTime ? sqlArgs = append(sqlArgs, endDate) } \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u5730\u5740\uff1a http://127.0.0.1:8113/consumeRecordService.goss?m=getList useJsonp=true beginDate=2019-08-13 endDate=2019-08-14","title":"\u6309\u521b\u5efa\u65f6\u95f4\u67e5\u8be2"},{"location":"ie310go/cm_demo/#_15","text":"\u4e0a\u9762\u6dfb\u52a0\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u53ef\u4ee5\u7ec4\u5408\u67e5\u8be2 \u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316demo\u4ee3\u7801\uff0c\u8bbf\u95ee\u63a5\u53e3\u65f6\u4f7f\u7528\u4e86get\u65b9\u5f0f\uff0c\u540c\u65f6\u5bf9\u590d\u6742\u64cd\u4f5c\u7684\u53c2\u6570\u505a\u4e86\u7f16\u7801\u64cd\u4f5c\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5efa\u8bae\u590d\u6742\u53c2\u6570\u901a\u8fc7post\u65b9\u5f0f\u63d0\u4ea4\uff0c\u907f\u514d\u7f16\u7801\u4e0d\u4e00\u81f4\u5f15\u53d1\u9519\u8bef\u3002 \u63d0\u4f9b\u4e86\u63a5\u53e3\u540e\uff0c\u9759\u6001\u7f51\u9875\u4e2d\u53ef\u4ee5\u7528\u4efb\u610f\u4f60\u719f\u6089\u7684\u65b9\u5f0f\u8fdb\u884c\u8c03\u7528\uff0c\u6bd4\u5982\u5feb\u901f\u5f00\u59cb\u4e2d\u7684\u65b9\u6cd5","title":"\u7279\u522b\u8bf4\u660e"},{"location":"ie310go/cm_jj/","text":"i3go_codemaker\u7528\u4e8e\u81ea\u52a8\u751f\u6210model\u3001mapper\u3001service\u5c42\u4ee3\u7801\uff0c\u4e0eie310go\u5bc6\u5207\u914d\u5408\uff0c\u7b80\u5316\u5de5\u4f5c \u652f\u6301mysql\u6570\u636e\u5e93 \u751f\u6210\u6d41\u7a0b\u4e3a\uff1a\u5728mysql\u4e2d\u5b9a\u4e49\u6570\u636e\u8868\u3001\u5b57\u6bb5\u7c7b\u578b ----- i3go_codemaker\u4e2d\u914d\u7f6e\u3001\u751f\u6210 ----- \u4f7f\u7528\u751f\u6210\u7684\u4ee3\u7801 \u751f\u6210\u7684\u4ee3\u7801\u6587\u4ef6\u4e2d\u9884\u7559\u4e86\u81ea\u5b9a\u4e49\u6807\u8bb0\uff0c\u53ef\u4ee5\u81ea\u884c\u6dfb\u52a0\u6216\u4fee\u6539\u4ee3\u7801\uff0c \u4e0b\u6b21\u91cd\u65b0\u751f\u6210\u65f6\u81ea\u5b9a\u4e49\u5185\u5bb9\u4e0d\u4f1a\u88ab\u8986\u76d6","title":"\u7b80\u4ecb"},{"location":"ie310go/cm_mapper/","text":"\u8bf4\u660e mapper\u4e3a\u6570\u636e\u5b58\u53d6\u5c42\uff0c\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b \u6bcf\u6b21\u4f7f\u7528\u524d\u9700\u8981\u83b7\u53d6mapper\u5b9e\u4f8b\uff0c\u5982\uff1a mp := mapper.GetConsumeRecordMapper( ro ) GetXXXXMapper\u4e2d\u95f4\u7684XXXX\u90e8\u5206\uff0c\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u540d\u79f0 GetXXXXMapper\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b\uff0c\u4e00\u822c\u7528\u4e8e\u8bfb\u5199\u5206\u79bb\u67b6\u6784\u3002\u6570\u636e\u5e93\u7684\u521d\u59cb\u5316\uff0c\u8bf7\u53c2\u8003\u7ae0\u8282 \u5e94\u7528\u521d\u59cb\u5316 \u4e8b\u52a1 mp.Tx2(...)\u53ef\u5f00\u542f\u4e8b\u52a1 \u4e8b\u52a1\u4ee3\u7801\u793a\u4f8b\uff1a\uff08\u6709panic\u65f6\uff0c\u81ea\u52a8\u56de\u6eda\uff09 mp.Tx2(func(tx *sqlx.Tx) { //do..................... }) \u6240\u6709mapper\u65b9\u6cd5\u7b2c1\u4e2a\u53c2\u6570tx\uff0c\u4f7f\u7528\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7684\u56de\u8c03\u53c2\u6570\u5373\u53ef\uff0c\u4e0d\u542f\u7528\u4e8b\u52a1\u65f6\u53ef\u4f20nil \u65b9\u6cd5\u8be6\u7ec6\u8bf4\u660e \u83b7\u53d6\u5355\u6761\u6570\u636e\u3001\u5224\u65ad\u662f\u5426\u5b58\u5728 \uff08XXXModel\u4ee3\u8868\u6a21\u578b\u7c7b\u540d\uff09 \u65b9\u6cd5/\u8bf4\u660e Get(tx, id) *XXXModel \u6839\u636eid\u83b7\u53d6\uff0c\u672a\u83b7\u53d6\u5230\u8fd4\u56denil GetFirst(tx, whereStr, orderStr, args...) *XXXModel \u6839\u636e\u6761\u4ef6\u67e5\u627e\u7b2c1\u6761\u6570\u636e\uff0cwhereStr\u3001orderby\u90fd\u662fmysql\u539f\u751fsql\u8bed\u53e5\uff0c\u4e0d\u7528\u5305\u542bwhere\u3001order by\u5b57\u6837\u3002\u9700\u8981\u53c2\u6570\u65f6\uff0c\u5728whereStr\u4e2d\u7528?\u66ff\u4ee3\uff0c\u540c\u65f6\u5728\u53c2\u6570\u6700\u540e\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570\uff0c\u6bcf\u4e2a?\u5bf9\u5e94\u4e00\u4e2a\u53c2\u6570\u3002 \u5176\u4ed6\u51fd\u6570\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u9664\u975e\u7279\u522b\u6307\u5b9a Exists(tx, id) bool \u6839\u636eid\u5224\u65ad\u6570\u636e\u662f\u5426\u5b58\u5728 GetByCode(tx, code) *XXXModel \u6839\u636ecode\u83b7\u53d6\uff0c\u9700\u8981\u6570\u636e\u8868\u4e2d\u6709code\u5b57\u6bb5 \u83b7\u53d6\u591a\u6761\u6570\u636e \u65b9\u6cd5/\u8bf4\u660e Gets(tx, pageIndex, rowsInPage, whereStr, orderStr, args...) []*XXXModel \u83b7\u53d6\u591a\u6761\u6570\u636e\u3001pageIndex\u4ece1\u5f00\u59cb\u3001whereStr\u3001orderStr\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e0d\u8981where\u3001order by\u90e8\u5206 Getss(tx, pageIndex, rowsInPage, sqlStr, args...) []*XXXModel \u83b7\u53d6\u591a\u6761\u6570\u636e\u3001pageIndex\u4ece1\u5f00\u59cb\u3001sqlStr\u53c2\u6570\u662f\u5b8c\u6574\u7684sql\u8bed\u53e5\uff0c\u5982 select * from table1 where id=? and version=? GetTops(tx, top, whereStr, orderStr, args...) []*XXXModel \u83b7\u53d6\u524d\u51e0\u6761\u6570\u636e GetTopss(tx, top, sqlStr, args...) []*XXXModel \u83b7\u53d6\u524d\u51e0\u6761\u6570\u636e\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u63d2\u5165 \u65b9\u6cd5/\u8bf4\u660e Insert(tx,item *XXXModel) int,int \u63d2\u5165\u5355\u6761\u6570\u636e\uff0c\u8fd4\u56de\u503c1\uff1a\u6570\u636e\u7684id\uff08id\u662f\u81ea\u589e\u5b57\u6bb5\u65f6\u624d\u8fd4\u56de\uff0c\u5426\u5219\u4e0d\u8fd4\u56de\uff09\uff0c\u8fd4\u56de\u503c2\uff1a\u63d2\u5165\u6210\u529f\u7684\u6761\u6570 Inserts(tx,items []*XXXModel) int \u63d2\u5165\u591a\u6761\u6570\u636e\uff0c\u8fd4\u56de\u503c\uff1a\u63d2\u5165\u6210\u529f\u7684\u6761\u6570 \u4fee\u6539 \u65b9\u6cd5/\u8bf4\u660e Update(tx,item *XXXModel) int \u66f4\u65b0\u6570\u636e\uff0c\u8fd4\u56de\u6210\u529f\u7684\u6761\u6570\uff0c\u4e0b\u540c Updates(tx,updateStr,whereStr,args...) int \u66f4\u65b0\u6570\u636e Updatess(tx,sqlStr,args...) int \u66f4\u65b0\u6570\u636e\u3001\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u5220\u9664 \u65b9\u6cd5/\u8bf4\u660e Del(tx,id) int \u6839\u636eid\u5220\u9664 Dels(tx,whereStr,args...) int \u6839\u636ewhere\u5220\u9664 Delss(tx,sqlStr,args...) int \u6839\u636esql\u5220\u9664\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u8ba1\u6570\u7b49 \u65b9\u6cd5/\u8bf4\u660e GetCount(tx,whereStr,args...) int \u83b7\u53d6\u6570\u91cf GetCountss(tx,sqlStr,args...) int \u83b7\u53d6\u6570\u91cf\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 GetStringss(tx,sqlStr,args...) string \u83b7\u53d6\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 GetFloatss(tx,sqlStr,args...) float64 \u83b7\u53d6\u6570\u503c\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 BaseMapper mapper\u7684\u65b9\u6cd5\u7531\u57fa\u7840\u7c7b\u578bBaseMapper\u63d0\u4f9b\u652f\u6491\uff0c\u53ef\u5728BaseMapper\u57fa\u7840\u4e0a\u5b9a\u4e49\u5176\u4ed6\u65b9\u6cd5\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u6e90\u7801","title":"Mapper"},{"location":"ie310go/cm_mapper/#_1","text":"mapper\u4e3a\u6570\u636e\u5b58\u53d6\u5c42\uff0c\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b \u6bcf\u6b21\u4f7f\u7528\u524d\u9700\u8981\u83b7\u53d6mapper\u5b9e\u4f8b\uff0c\u5982\uff1a mp := mapper.GetConsumeRecordMapper( ro ) GetXXXXMapper\u4e2d\u95f4\u7684XXXX\u90e8\u5206\uff0c\u5bf9\u5e94\u4e8e\u6570\u636e\u8868\u540d\u79f0 GetXXXXMapper\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b\uff0c\u4e00\u822c\u7528\u4e8e\u8bfb\u5199\u5206\u79bb\u67b6\u6784\u3002\u6570\u636e\u5e93\u7684\u521d\u59cb\u5316\uff0c\u8bf7\u53c2\u8003\u7ae0\u8282 \u5e94\u7528\u521d\u59cb\u5316","title":"\u8bf4\u660e"},{"location":"ie310go/cm_mapper/#_2","text":"mp.Tx2(...)\u53ef\u5f00\u542f\u4e8b\u52a1 \u4e8b\u52a1\u4ee3\u7801\u793a\u4f8b\uff1a\uff08\u6709panic\u65f6\uff0c\u81ea\u52a8\u56de\u6eda\uff09 mp.Tx2(func(tx *sqlx.Tx) { //do..................... }) \u6240\u6709mapper\u65b9\u6cd5\u7b2c1\u4e2a\u53c2\u6570tx\uff0c\u4f7f\u7528\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7684\u56de\u8c03\u53c2\u6570\u5373\u53ef\uff0c\u4e0d\u542f\u7528\u4e8b\u52a1\u65f6\u53ef\u4f20nil","title":"\u4e8b\u52a1"},{"location":"ie310go/cm_mapper/#_3","text":"\u83b7\u53d6\u5355\u6761\u6570\u636e\u3001\u5224\u65ad\u662f\u5426\u5b58\u5728 \uff08XXXModel\u4ee3\u8868\u6a21\u578b\u7c7b\u540d\uff09 \u65b9\u6cd5/\u8bf4\u660e Get(tx, id) *XXXModel \u6839\u636eid\u83b7\u53d6\uff0c\u672a\u83b7\u53d6\u5230\u8fd4\u56denil GetFirst(tx, whereStr, orderStr, args...) *XXXModel \u6839\u636e\u6761\u4ef6\u67e5\u627e\u7b2c1\u6761\u6570\u636e\uff0cwhereStr\u3001orderby\u90fd\u662fmysql\u539f\u751fsql\u8bed\u53e5\uff0c\u4e0d\u7528\u5305\u542bwhere\u3001order by\u5b57\u6837\u3002\u9700\u8981\u53c2\u6570\u65f6\uff0c\u5728whereStr\u4e2d\u7528?\u66ff\u4ee3\uff0c\u540c\u65f6\u5728\u53c2\u6570\u6700\u540e\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570\uff0c\u6bcf\u4e2a?\u5bf9\u5e94\u4e00\u4e2a\u53c2\u6570\u3002 \u5176\u4ed6\u51fd\u6570\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u9664\u975e\u7279\u522b\u6307\u5b9a Exists(tx, id) bool \u6839\u636eid\u5224\u65ad\u6570\u636e\u662f\u5426\u5b58\u5728 GetByCode(tx, code) *XXXModel \u6839\u636ecode\u83b7\u53d6\uff0c\u9700\u8981\u6570\u636e\u8868\u4e2d\u6709code\u5b57\u6bb5 \u83b7\u53d6\u591a\u6761\u6570\u636e \u65b9\u6cd5/\u8bf4\u660e Gets(tx, pageIndex, rowsInPage, whereStr, orderStr, args...) []*XXXModel \u83b7\u53d6\u591a\u6761\u6570\u636e\u3001pageIndex\u4ece1\u5f00\u59cb\u3001whereStr\u3001orderStr\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e0d\u8981where\u3001order by\u90e8\u5206 Getss(tx, pageIndex, rowsInPage, sqlStr, args...) []*XXXModel \u83b7\u53d6\u591a\u6761\u6570\u636e\u3001pageIndex\u4ece1\u5f00\u59cb\u3001sqlStr\u53c2\u6570\u662f\u5b8c\u6574\u7684sql\u8bed\u53e5\uff0c\u5982 select * from table1 where id=? and version=? GetTops(tx, top, whereStr, orderStr, args...) []*XXXModel \u83b7\u53d6\u524d\u51e0\u6761\u6570\u636e GetTopss(tx, top, sqlStr, args...) []*XXXModel \u83b7\u53d6\u524d\u51e0\u6761\u6570\u636e\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u63d2\u5165 \u65b9\u6cd5/\u8bf4\u660e Insert(tx,item *XXXModel) int,int \u63d2\u5165\u5355\u6761\u6570\u636e\uff0c\u8fd4\u56de\u503c1\uff1a\u6570\u636e\u7684id\uff08id\u662f\u81ea\u589e\u5b57\u6bb5\u65f6\u624d\u8fd4\u56de\uff0c\u5426\u5219\u4e0d\u8fd4\u56de\uff09\uff0c\u8fd4\u56de\u503c2\uff1a\u63d2\u5165\u6210\u529f\u7684\u6761\u6570 Inserts(tx,items []*XXXModel) int \u63d2\u5165\u591a\u6761\u6570\u636e\uff0c\u8fd4\u56de\u503c\uff1a\u63d2\u5165\u6210\u529f\u7684\u6761\u6570 \u4fee\u6539 \u65b9\u6cd5/\u8bf4\u660e Update(tx,item *XXXModel) int \u66f4\u65b0\u6570\u636e\uff0c\u8fd4\u56de\u6210\u529f\u7684\u6761\u6570\uff0c\u4e0b\u540c Updates(tx,updateStr,whereStr,args...) int \u66f4\u65b0\u6570\u636e Updatess(tx,sqlStr,args...) int \u66f4\u65b0\u6570\u636e\u3001\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u5220\u9664 \u65b9\u6cd5/\u8bf4\u660e Del(tx,id) int \u6839\u636eid\u5220\u9664 Dels(tx,whereStr,args...) int \u6839\u636ewhere\u5220\u9664 Delss(tx,sqlStr,args...) int \u6839\u636esql\u5220\u9664\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 \u8ba1\u6570\u7b49 \u65b9\u6cd5/\u8bf4\u660e GetCount(tx,whereStr,args...) int \u83b7\u53d6\u6570\u91cf GetCountss(tx,sqlStr,args...) int \u83b7\u53d6\u6570\u91cf\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 GetStringss(tx,sqlStr,args...) string \u83b7\u53d6\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5 GetFloatss(tx,sqlStr,args...) float64 \u83b7\u53d6\u6570\u503c\uff0c\u9700\u8981\u5b8c\u6574\u7684sql\u8bed\u53e5","title":"\u65b9\u6cd5\u8be6\u7ec6\u8bf4\u660e"},{"location":"ie310go/cm_mapper/#basemapper","text":"mapper\u7684\u65b9\u6cd5\u7531\u57fa\u7840\u7c7b\u578bBaseMapper\u63d0\u4f9b\u652f\u6491\uff0c\u53ef\u5728BaseMapper\u57fa\u7840\u4e0a\u5b9a\u4e49\u5176\u4ed6\u65b9\u6cd5\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u6e90\u7801","title":"BaseMapper"},{"location":"ie310go/cm_model/","text":"\u8bf4\u660e \u53ef\u6839\u636emysql\u7684\u6570\u636e\u8868\u5b9a\u4e49\uff0c\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684Model\u4ee3\u7801\uff1a package model import ( //customRefrenceBegin time //customRefrenceEnd ) //ConsumeRecord .. type ConsumeRecord struct { ID string `json: id db: id ` CreateTime time.Time `json: createTime db: createTime ` Type string `json: type db: type ` Value float32 `json: value db: value ` //customContentBegin //customContentEnd } \u5b57\u6bb5\u540d\u5168\u90e8\u5927\u5199 \u5305\u542bjson\u6807\u8bb0\u3001db\u6807\u8bb0\uff0c\u6807\u8bb0\u5168\u90e8\u5c0f\u5199 id\u5b57\u6bb5 \u5fc5\u987b\u5305\u542bid\u5b57\u6bb5 \u5b57\u6bb5\u540d\u5fc5\u987b\u662f id \u5fc5\u987b\u662f\u4e3b\u952e\u3001\u975e\u7a7a \u652f\u6301\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff1a char(36)\uff1aguid\uff0c\u5728Insert\u524d\u9700\u8981\u8d4b\u503c\uff08service.add\u65b9\u6cd5\u4e2d\u5df2\u7ecf\u6709\u5bf9\u5e94\u7684\u5904\u7406\uff09 int\u81ea\u589e\uff1a\u81ea\u589e\u578b\u4e3b\u952e\uff0cInsert\u524d\u4e0d\u80fd\u8d4b\u503c\uff0cInsert\u6210\u529f\u540e\u4f1a\u8fd4\u56deid \u81ea\u589e\u5b57\u6bb5 \u975eid\u5b57\u6bb5\u4e5f\u652f\u6301\u81ea\u589e \u540c\u6837\u4e0d\u80fd\u63d0\u524d\u8d4b\u503c date\u4e0edatetime \u652f\u6301date\u3001datetime\u7b49\u5b57\u6bb5\u7c7b\u578b \u5982\u679c\u6570\u636e\u8868\u5305\u542b\u5305\u542bdate\u3001datetime\u7b49\u7c7b\u578b\uff0c\u751f\u6210\u540e\u9700\u8981\u5728//customRefrenceBegin\u3001//customRefrenceEnd\u6807\u8bb0\u5bf9\u4e2d\u5bfc\u5165\u5305time\uff0c\u5982\u4e0b\uff1a import ( //customRefrenceBegin time //customRefrenceEnd ) \u5982\u679c\u4e0d\u5bfc\u5165time\u5305\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519","title":"Model"},{"location":"ie310go/cm_model/#_1","text":"\u53ef\u6839\u636emysql\u7684\u6570\u636e\u8868\u5b9a\u4e49\uff0c\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684Model\u4ee3\u7801\uff1a package model import ( //customRefrenceBegin time //customRefrenceEnd ) //ConsumeRecord .. type ConsumeRecord struct { ID string `json: id db: id ` CreateTime time.Time `json: createTime db: createTime ` Type string `json: type db: type ` Value float32 `json: value db: value ` //customContentBegin //customContentEnd } \u5b57\u6bb5\u540d\u5168\u90e8\u5927\u5199 \u5305\u542bjson\u6807\u8bb0\u3001db\u6807\u8bb0\uff0c\u6807\u8bb0\u5168\u90e8\u5c0f\u5199","title":"\u8bf4\u660e"},{"location":"ie310go/cm_model/#id","text":"\u5fc5\u987b\u5305\u542bid\u5b57\u6bb5 \u5b57\u6bb5\u540d\u5fc5\u987b\u662f id \u5fc5\u987b\u662f\u4e3b\u952e\u3001\u975e\u7a7a \u652f\u6301\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff1a char(36)\uff1aguid\uff0c\u5728Insert\u524d\u9700\u8981\u8d4b\u503c\uff08service.add\u65b9\u6cd5\u4e2d\u5df2\u7ecf\u6709\u5bf9\u5e94\u7684\u5904\u7406\uff09 int\u81ea\u589e\uff1a\u81ea\u589e\u578b\u4e3b\u952e\uff0cInsert\u524d\u4e0d\u80fd\u8d4b\u503c\uff0cInsert\u6210\u529f\u540e\u4f1a\u8fd4\u56deid","title":"id\u5b57\u6bb5"},{"location":"ie310go/cm_model/#_2","text":"\u975eid\u5b57\u6bb5\u4e5f\u652f\u6301\u81ea\u589e \u540c\u6837\u4e0d\u80fd\u63d0\u524d\u8d4b\u503c","title":"\u81ea\u589e\u5b57\u6bb5"},{"location":"ie310go/cm_model/#datedatetime","text":"\u652f\u6301date\u3001datetime\u7b49\u5b57\u6bb5\u7c7b\u578b \u5982\u679c\u6570\u636e\u8868\u5305\u542b\u5305\u542bdate\u3001datetime\u7b49\u7c7b\u578b\uff0c\u751f\u6210\u540e\u9700\u8981\u5728//customRefrenceBegin\u3001//customRefrenceEnd\u6807\u8bb0\u5bf9\u4e2d\u5bfc\u5165\u5305time\uff0c\u5982\u4e0b\uff1a import ( //customRefrenceBegin time //customRefrenceEnd ) \u5982\u679c\u4e0d\u5bfc\u5165time\u5305\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519","title":"date\u4e0edatetime"},{"location":"ie310go/cm_service/","text":"\u8bf4\u660e service\u63d0\u4f9bGet;GetList;Add;Update;Delete\u7b49\u65b9\u6cd5 \u8003\u8651\u63a5\u53e3\u66b4\u9732\u7684\u5b89\u5168\u6027\u95ee\u9898\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u9ed8\u8ba4\u662f\u4e0d\u5f00\u653e\u7684\uff08\u65b9\u6cd5\u540d\u5c0f\u5199\uff09 \u8981\u5f00\u653e\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u9700\u8981\u4fee\u6539\u6587\u4ef6\u5c3e\u90e8goExportsSettings\u6807\u8bb0\u5bf9\u4e2d\u7684\u4ee3\u7801\uff0c\u5c06false\u6539\u4e3atrue\uff1a //goExportsSettingsBegin //true;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u4fee\u6539\u4e3atrue\u540e\uff0c5\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u5f00\u653e\uff0c\u4e0d\u60f3\u5f00\u653e\u7684\u65b9\u6cd5\u5728\u6b64\u884c\u5220\u9664\u5373\u53ef\uff0c\u6bd4\u5982\u4e0d\u60f3\u5f00\u653eadd\u3001update\u3001delete\uff0c\u5219\u4fee\u6539\u4e3a\uff1a //goExportsSettingsBegin //true;Get;GetList;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u6ce8\u610f\uff0c\u5f00\u653e\u7684\u65b9\u6cd5\uff0c\u524d\u540e\u90fd\u8981\u6709; \u6bcf\u4e2a\u65b9\u6cd5\u90fd\u63d0\u4f9b\u81ea\u5b9a\u4e49\u4ee3\u7801\u6807\u8bb0\u5bf9\uff0c\u4f9b\u7b80\u5355\u4fee\u6539\uff0c\u5982\u679c\u4fee\u6539\u592a\u590d\u6742\uff0c\u5efa\u8bae\u5728customContentBegin\u6807\u8bb0\u5bf9\u4e2d\u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5b9a\u4e49\u4e0e\u81ea\u52a8\u751f\u6210\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff08\u5927\u5199\u3001\u9700\u8981\u4e00\u4e2aargs\u53c2\u6570\uff09 \u5982\u4f55\u8c03\u7528 api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00\uff08\u670d\u52a1\u540d\u5bf9\u5e94\u4e8e\u670d\u52a1\u7c7bConsumeRecordService\uff0c\u9996\u5b57\u6bcd\u5c0f\u5199\uff09 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0\uff08\u670d\u52a1\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u662f\u516c\u5f00\u7684\u65b9\u6cd5\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u65b9\u6cd5\uff09 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570\uff08\u9700\u8981\u4ec0\u4e48\u53c2\u6570\uff0c\u7531\u65b9\u6cd5\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u786e\u5b9a\uff09 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012\uff0c\u7b80\u5355\u53c2\u6570\u53ef\u7528get\u4f20\u9012\uff0c\u590d\u6742\u53c2\u6570\u5efa\u8bae\u7528post\uff0c\u907f\u514d\u7f16\u7801\u9519\u4e71\u95ee\u9898 \uff08post\u65b9\u5f0f\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u8003 \u5feb\u901f\u5f00\u59cb \uff09 \u8fd4\u56de\u7684\u6570\u636e\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c \u662f\u4e00\u4e2aJSONServiceResult\u7ed3\u6784\u4f53\uff1a state\uff1a\u63a5\u53e3\u8c03\u7528\u72b6\u6001\uff0c\u6574\u6570\uff0c\u8fd4\u56de0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5b57\u7b26\u4e32\uff0cstate!=0\u65f6\u7684\u9519\u8bef\u6d88\u606f data\uff1ainterface{}\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u503c\uff08\u670d\u52a1\u65b9\u6cd5\u7684\u5b9e\u9645\u8fd4\u56de\u503c\uff09 DataJSON\uff1a\u5b57\u7b26\u4e32\uff0c\u5907\u7528\u5b57\u6bb5 ExtandData\uff1ainterface{}\uff0c\u5907\u7528\u5b57\u6bb5 \u5206\u9875\u8fd4\u56de\u503c getList\u65b9\u6cd5\u8fd4\u56de\u7684\u662f*paging.PagingData pageIndex\uff1a\u9875\u7801\uff0c\u4ece1\u5f00\u59cb rowsInPage\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e pagecount\uff1a\u603b\u9875\u6570 total\uff1a\u603b\u884c\u6570 rows\uff1a\u7ed3\u679c\u6570\u7ec4 userData\uff1a\u5907\u7528\u5b57\u6bb5 add\u7b49\u65b9\u6cd5\u4e2d\u7684\u4e8b\u52a1\u5904\u7406 \u81ea\u52a8\u751f\u6210\u7684add\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\uff1a //Add .. func (s ConsumeRecordService) Add(args *route.ServiceArgs) string { item := s.getItem(args, true) mp := mapper.GetConsumeRecordMapper( ) useTx := false //customBeforeAddContentBegin item.CreateTime = time.Now() //customBeforeAddContentEnd if !useTx { _, count := mp.Insert(nil, item) //item.ID = lastIntID if count == 0 { panic( Insert\u672a\u6210\u529f ) } } //customAfterAddContentBegin //customAfterAddContentEnd return item.ID } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cadd\u65b9\u6cd5\u662f\u4e0d\u4f7f\u7528\u4e8b\u52a1\u7684\u3002 \u5982\u679c\u9700\u8981\u4f7f\u7528\u4e8b\u52a1\uff0c\u5728customBeforeAddContent\u6807\u8bb0\u5bf9\u4e2duseTx\u8d4b\u503c\u4e3afalse\uff0c\u7136\u540e\u5728customAfterAddContent\u6807\u8bb0\u5bf9\u4e2d\u5199\u5165\u81ea\u5df1\u7684\u4ee3\u7801\u3002\uff08\u5f53\u7136\uff0c\u5982\u679c\u95f2\u9ebb\u70e6\u3001\u5305\u542b\u65e0\u6548\u4ee3\u7801\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\u5199\u5230customContent\u6807\u8bb0\u5bf9\u4e2d\uff09 \u670d\u52a1\u5bfc\u51fa \u81ea\u52a8\u751f\u6210\u7684service\u4ee3\u7801\u5305\u542binit\u51fd\u6570\u5982\u4e0b\uff1a func init() { route.Add( ConsumeRecordService{}) } \u901a\u8fc7route.Services\u53ef\u4ee5\u83b7\u53d6\u5230\u6240\u6709\u6ce8\u518c\u7684\u670d\u52a1\uff1a func appinit() { //... exportServices(route.Services, srv) //... } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } } \u5728exportServices\u4e2d\u53ef\u4ee5\u589e\u52a0\u5bfc\u51fa\u903b\u8f91\uff0c\u6bd4\u5982\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u5224\u65ad\u662f\u5426\u9700\u8981\u6ce8\u518c \u81ea\u5df1\u6dfb\u52a0\u7684\u670d\u52a1\u7c7b\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u60c5\u51b5\u7075\u6d3b\u5e94\u7528\u786e\u5b9a\u662f\u5426\u6dfb\u52a0init\u51fd\u6570 \u9ad8\u7ea7 service\u7684\u9ad8\u7ea7\u4f7f\u7528\u53ef\u53c2\u8003 api\u5f00\u53d1","title":"Service"},{"location":"ie310go/cm_service/#_1","text":"service\u63d0\u4f9bGet;GetList;Add;Update;Delete\u7b49\u65b9\u6cd5 \u8003\u8651\u63a5\u53e3\u66b4\u9732\u7684\u5b89\u5168\u6027\u95ee\u9898\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u9ed8\u8ba4\u662f\u4e0d\u5f00\u653e\u7684\uff08\u65b9\u6cd5\u540d\u5c0f\u5199\uff09 \u8981\u5f00\u653e\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u9700\u8981\u4fee\u6539\u6587\u4ef6\u5c3e\u90e8goExportsSettings\u6807\u8bb0\u5bf9\u4e2d\u7684\u4ee3\u7801\uff0c\u5c06false\u6539\u4e3atrue\uff1a //goExportsSettingsBegin //true;Get;GetList;Add;Update;Delete;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u4fee\u6539\u4e3atrue\u540e\uff0c5\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u5f00\u653e\uff0c\u4e0d\u60f3\u5f00\u653e\u7684\u65b9\u6cd5\u5728\u6b64\u884c\u5220\u9664\u5373\u53ef\uff0c\u6bd4\u5982\u4e0d\u60f3\u5f00\u653eadd\u3001update\u3001delete\uff0c\u5219\u4fee\u6539\u4e3a\uff1a //goExportsSettingsBegin //true;Get;GetList;\u6ce8\u610f:\u4fee\u6539true/false\u540e\u8981\u91cd\u65b0\u751f\u6210\u4e00\u6b21; //goExportsSettingsEnd \u6ce8\u610f\uff0c\u5f00\u653e\u7684\u65b9\u6cd5\uff0c\u524d\u540e\u90fd\u8981\u6709; \u6bcf\u4e2a\u65b9\u6cd5\u90fd\u63d0\u4f9b\u81ea\u5b9a\u4e49\u4ee3\u7801\u6807\u8bb0\u5bf9\uff0c\u4f9b\u7b80\u5355\u4fee\u6539\uff0c\u5982\u679c\u4fee\u6539\u592a\u590d\u6742\uff0c\u5efa\u8bae\u5728customContentBegin\u6807\u8bb0\u5bf9\u4e2d\u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5b9a\u4e49\u4e0e\u81ea\u52a8\u751f\u6210\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff08\u5927\u5199\u3001\u9700\u8981\u4e00\u4e2aargs\u53c2\u6570\uff09","title":"\u8bf4\u660e"},{"location":"ie310go/cm_service/#_2","text":"api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00\uff08\u670d\u52a1\u540d\u5bf9\u5e94\u4e8e\u670d\u52a1\u7c7bConsumeRecordService\uff0c\u9996\u5b57\u6bcd\u5c0f\u5199\uff09 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0\uff08\u670d\u52a1\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u662f\u516c\u5f00\u7684\u65b9\u6cd5\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u65b9\u6cd5\uff09 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570\uff08\u9700\u8981\u4ec0\u4e48\u53c2\u6570\uff0c\u7531\u65b9\u6cd5\u5185\u90e8\u4ee3\u7801\u903b\u8f91\u786e\u5b9a\uff09 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012\uff0c\u7b80\u5355\u53c2\u6570\u53ef\u7528get\u4f20\u9012\uff0c\u590d\u6742\u53c2\u6570\u5efa\u8bae\u7528post\uff0c\u907f\u514d\u7f16\u7801\u9519\u4e71\u95ee\u9898 \uff08post\u65b9\u5f0f\u7684\u8c03\u7528\u53ef\u4ee5\u53c2\u8003 \u5feb\u901f\u5f00\u59cb \uff09 \u8fd4\u56de\u7684\u6570\u636e\u662f\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff0c \u662f\u4e00\u4e2aJSONServiceResult\u7ed3\u6784\u4f53\uff1a state\uff1a\u63a5\u53e3\u8c03\u7528\u72b6\u6001\uff0c\u6574\u6570\uff0c\u8fd4\u56de0\u8868\u793a\u8c03\u7528\u6210\u529f message\uff1a\u5b57\u7b26\u4e32\uff0cstate!=0\u65f6\u7684\u9519\u8bef\u6d88\u606f data\uff1ainterface{}\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u503c\uff08\u670d\u52a1\u65b9\u6cd5\u7684\u5b9e\u9645\u8fd4\u56de\u503c\uff09 DataJSON\uff1a\u5b57\u7b26\u4e32\uff0c\u5907\u7528\u5b57\u6bb5 ExtandData\uff1ainterface{}\uff0c\u5907\u7528\u5b57\u6bb5","title":"\u5982\u4f55\u8c03\u7528"},{"location":"ie310go/cm_service/#_3","text":"getList\u65b9\u6cd5\u8fd4\u56de\u7684\u662f*paging.PagingData pageIndex\uff1a\u9875\u7801\uff0c\u4ece1\u5f00\u59cb rowsInPage\uff1a\u6bcf\u9875\u591a\u5c11\u6761\u6570\u636e pagecount\uff1a\u603b\u9875\u6570 total\uff1a\u603b\u884c\u6570 rows\uff1a\u7ed3\u679c\u6570\u7ec4 userData\uff1a\u5907\u7528\u5b57\u6bb5","title":"\u5206\u9875\u8fd4\u56de\u503c"},{"location":"ie310go/cm_service/#add","text":"\u81ea\u52a8\u751f\u6210\u7684add\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\uff1a //Add .. func (s ConsumeRecordService) Add(args *route.ServiceArgs) string { item := s.getItem(args, true) mp := mapper.GetConsumeRecordMapper( ) useTx := false //customBeforeAddContentBegin item.CreateTime = time.Now() //customBeforeAddContentEnd if !useTx { _, count := mp.Insert(nil, item) //item.ID = lastIntID if count == 0 { panic( Insert\u672a\u6210\u529f ) } } //customAfterAddContentBegin //customAfterAddContentEnd return item.ID } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cadd\u65b9\u6cd5\u662f\u4e0d\u4f7f\u7528\u4e8b\u52a1\u7684\u3002 \u5982\u679c\u9700\u8981\u4f7f\u7528\u4e8b\u52a1\uff0c\u5728customBeforeAddContent\u6807\u8bb0\u5bf9\u4e2duseTx\u8d4b\u503c\u4e3afalse\uff0c\u7136\u540e\u5728customAfterAddContent\u6807\u8bb0\u5bf9\u4e2d\u5199\u5165\u81ea\u5df1\u7684\u4ee3\u7801\u3002\uff08\u5f53\u7136\uff0c\u5982\u679c\u95f2\u9ebb\u70e6\u3001\u5305\u542b\u65e0\u6548\u4ee3\u7801\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\u5199\u5230customContent\u6807\u8bb0\u5bf9\u4e2d\uff09","title":"add\u7b49\u65b9\u6cd5\u4e2d\u7684\u4e8b\u52a1\u5904\u7406"},{"location":"ie310go/cm_service/#_4","text":"\u81ea\u52a8\u751f\u6210\u7684service\u4ee3\u7801\u5305\u542binit\u51fd\u6570\u5982\u4e0b\uff1a func init() { route.Add( ConsumeRecordService{}) } \u901a\u8fc7route.Services\u53ef\u4ee5\u83b7\u53d6\u5230\u6240\u6709\u6ce8\u518c\u7684\u670d\u52a1\uff1a func appinit() { //... exportServices(route.Services, srv) //... } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } } \u5728exportServices\u4e2d\u53ef\u4ee5\u589e\u52a0\u5bfc\u51fa\u903b\u8f91\uff0c\u6bd4\u5982\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u5224\u65ad\u662f\u5426\u9700\u8981\u6ce8\u518c \u81ea\u5df1\u6dfb\u52a0\u7684\u670d\u52a1\u7c7b\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u60c5\u51b5\u7075\u6d3b\u5e94\u7528\u786e\u5b9a\u662f\u5426\u6dfb\u52a0init\u51fd\u6570","title":"\u670d\u52a1\u5bfc\u51fa"},{"location":"ie310go/cm_service/#_5","text":"service\u7684\u9ad8\u7ea7\u4f7f\u7528\u53ef\u53c2\u8003 api\u5f00\u53d1","title":"\u9ad8\u7ea7"},{"location":"ie310go/cm_setting/","text":"\u65b9\u6848\u533a i3go_codemaker\u652f\u6301\u591a\u79cd\u65b9\u6848\uff0c\u5728\u65b9\u6848\u533a\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef \u6570\u636e\u5e93\u4fe1\u606f \u65b0\u5efa\u6216\u9009\u62e9\u65b9\u6848\u540e\uff0c\u5728\u6570\u636e\u5e93\u4fe1\u606f\u533a\u8f93\u5165\u6570\u636e\u5e93\u7684\u4fe1\u606f \u6570\u636e\u5e93\u7c7b\u578b\uff1a\u76ee\u524d\u53ea\u652f\u6301mysql \u670d\u52a1\u5668\uff1a\u670d\u52a1\u5668ip\u6216\u57df\u540d\uff0c\u7aef\u53e3\u4e0d\u662f3306\u65f6\u53ef\u4ee5\u540e\u9762\u9644\u52a0 :\u7aef\u53e3 \u7528\u6237\u540d \u5bc6\u7801 \u6570\u636e\u5e93 \u8f93\u5165\u6570\u636e\u5e93\u4fe1\u606f\u540e\uff0c\u70b9\u51fb\u201c\u6d4b\u8bd5\u201d\u53ef\u68c0\u67e5\u4fe1\u606f\u662f\u5426\u6b63\u786e \u8868\u9009\u62e9 \u5982\u679c\u6570\u636e\u5e93\u4fe1\u606f\u6b63\u786e\uff0c\u70b9\u51fb\u201c\u5237\u65b0\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5728\u8868\u9009\u62e9\u533a\u663e\u793a\u6570\u636e\u8868\u4fe1\u606f \u4e0d\u663e\u793a\u6240\u6709\u7684\u6570\u636e\u8868\uff0c\u800c\u662f\u53ea\u663e\u793a\u6570\u636e\u8868\u7684\u524d\u7f00\uff0c\u6bd4\u5982\u8868sys_user\uff0c\u524d\u7f00\u5c31\u662fsys\uff0c\u591a\u4e2a\u8868\u53ef\u80fd\u5171\u7528\u4e00\u4e2a\u524d\u7f00 \u6570\u636e\u8868\u5fc5\u987b\u8981\u6709\u524d\u7f00\uff0c\u5426\u5219\u65e0\u6cd5\u663e\u793a\uff0c\u6bd4\u5982\u8868xxxRecord\u5c31\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u8868\u540d \u53ef\u5728\u524d\u7f00\u524d\u8fdb\u884c\u52fe\u9009\uff0c\u52fe\u9009\u540e\uff0c\u7b26\u5408\u6b64\u524d\u7f00\u7684\u6570\u636e\u8868\u624d\u4f1a\u751f\u6210\u4ee3\u7801 \u82e5\u8868\u540d\u6709\u4fee\u6539\uff0c\u53ef\u70b9\u51fb\u201c\u5237\u65b0\u201d\u6309\u94ae\u5237\u65b0\u524d\u7f00\u5217\u8868 \u8f93\u51fa \u52fe\u9009Model\u3001Mapper\u3001Service\u524d\u9762\u7684\u590d\u9009\u6846\uff0c\u751f\u6210\u5bf9\u5e94\u7684\u4ee3\u7801 \u6ce8\u610f\uff1a\u7531\u4e8evscode\u7b49\u5de5\u5177\u7684\u4ee3\u7801\u81ea\u52a8\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801\u548c\u81ea\u52a8\u751f\u6210\u7684\u53ef\u80fd\u6709\u4e0d\u4e00\u81f4\uff0cMapper\u3001Service\u5728\u91cd\u65b0\u751f\u6210\u65f6\u57fa\u672c\u4e0d\u4f1a\u53d8\u5316\uff0cModel\u53ef\u80fd\u53d8\u5316\u8f83\u5927\uff08\u90fd\u662f\u7a7a\u683c\u3001\u6362\u884c\u4e4b\u7c7b\u7684\u5dee\u8ddd\uff0c\u5bf9\u4ee3\u7801\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff09\u3002 \u8f93\u5165\u8def\u5f84\uff1a\u6309\u9879\u76ee\u7684\u5b9e\u9645\u8def\u5f84\uff0c\u786e\u5b9a\u76f8\u5e94\u4ee3\u7801\u7684\u8f93\u51fa\u8def\u5f84 \u5f15\u7528\u7a7a\u95f4\uff1aMapper\u9700\u8981\u5f15\u7528Model\uff0cService\u9700\u8981\u5f15\u7528Model\u3001Mapper\uff0c\u6309\u5b9e\u9645\u60c5\u51b5\u8f93\u5165\uff08\u5355\u4e2a\u5f15\u7528\u7528\"\"\u5305\u56f4\uff0c\u591a\u4e2a\u5f15\u7528\u7528;\u9694\u5f00\uff09 \u5f15\u7528\u7a7a\u95f4\u53ef\u81ea\u884c\u8f93\u5165\u5176\u4ed6\u7684\u5f15\u7528\uff0c\u4f46\u7531\u4e8ego\u7f16\u8bd1\u65f6\u7684\u7279\u6027\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u672a\u4f7f\u7528\u7684\u5f15\u7528\u7f16\u8bd1\u65f6\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u662f\u6240\u6709\u7684\u6570\u636e\u8868\u90fd\u8981\u5f15\u7528\uff0c\u8fd8\u662f\u751f\u6210\u4ee3\u7801\u540e\u5404\u81ea\u5728\u4ee3\u7801\u6587\u4ef6\u4e2d\u7684\u81ea\u5b9a\u4e49\u5f15\u7528\u6807\u8bb0\u5bf9\u4e2d\u6dfb\u52a0\u4e3a\u597d\u3002 \u5907\u4efd\u4e0e\u6062\u590d \u53f3\u4e0a\u89d2\u6709\u5907\u4efd\u3001\u6062\u590d\u529f\u80fd\uff0c\u907f\u514d\u56e0\u7a81\u7136\u65ad\u7535\u7b49\u5bfc\u81f4\u7684\u914d\u7f6e\u6587\u4ef6\u635f\u574f","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"ie310go/cm_setting/#_1","text":"i3go_codemaker\u652f\u6301\u591a\u79cd\u65b9\u6848\uff0c\u5728\u65b9\u6848\u533a\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef","title":"\u65b9\u6848\u533a"},{"location":"ie310go/cm_setting/#_2","text":"\u65b0\u5efa\u6216\u9009\u62e9\u65b9\u6848\u540e\uff0c\u5728\u6570\u636e\u5e93\u4fe1\u606f\u533a\u8f93\u5165\u6570\u636e\u5e93\u7684\u4fe1\u606f \u6570\u636e\u5e93\u7c7b\u578b\uff1a\u76ee\u524d\u53ea\u652f\u6301mysql \u670d\u52a1\u5668\uff1a\u670d\u52a1\u5668ip\u6216\u57df\u540d\uff0c\u7aef\u53e3\u4e0d\u662f3306\u65f6\u53ef\u4ee5\u540e\u9762\u9644\u52a0 :\u7aef\u53e3 \u7528\u6237\u540d \u5bc6\u7801 \u6570\u636e\u5e93 \u8f93\u5165\u6570\u636e\u5e93\u4fe1\u606f\u540e\uff0c\u70b9\u51fb\u201c\u6d4b\u8bd5\u201d\u53ef\u68c0\u67e5\u4fe1\u606f\u662f\u5426\u6b63\u786e","title":"\u6570\u636e\u5e93\u4fe1\u606f"},{"location":"ie310go/cm_setting/#_3","text":"\u5982\u679c\u6570\u636e\u5e93\u4fe1\u606f\u6b63\u786e\uff0c\u70b9\u51fb\u201c\u5237\u65b0\u201d\u6309\u94ae\uff0c\u53ef\u4ee5\u5728\u8868\u9009\u62e9\u533a\u663e\u793a\u6570\u636e\u8868\u4fe1\u606f \u4e0d\u663e\u793a\u6240\u6709\u7684\u6570\u636e\u8868\uff0c\u800c\u662f\u53ea\u663e\u793a\u6570\u636e\u8868\u7684\u524d\u7f00\uff0c\u6bd4\u5982\u8868sys_user\uff0c\u524d\u7f00\u5c31\u662fsys\uff0c\u591a\u4e2a\u8868\u53ef\u80fd\u5171\u7528\u4e00\u4e2a\u524d\u7f00 \u6570\u636e\u8868\u5fc5\u987b\u8981\u6709\u524d\u7f00\uff0c\u5426\u5219\u65e0\u6cd5\u663e\u793a\uff0c\u6bd4\u5982\u8868xxxRecord\u5c31\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u8868\u540d \u53ef\u5728\u524d\u7f00\u524d\u8fdb\u884c\u52fe\u9009\uff0c\u52fe\u9009\u540e\uff0c\u7b26\u5408\u6b64\u524d\u7f00\u7684\u6570\u636e\u8868\u624d\u4f1a\u751f\u6210\u4ee3\u7801 \u82e5\u8868\u540d\u6709\u4fee\u6539\uff0c\u53ef\u70b9\u51fb\u201c\u5237\u65b0\u201d\u6309\u94ae\u5237\u65b0\u524d\u7f00\u5217\u8868","title":"\u8868\u9009\u62e9"},{"location":"ie310go/cm_setting/#_4","text":"\u52fe\u9009Model\u3001Mapper\u3001Service\u524d\u9762\u7684\u590d\u9009\u6846\uff0c\u751f\u6210\u5bf9\u5e94\u7684\u4ee3\u7801 \u6ce8\u610f\uff1a\u7531\u4e8evscode\u7b49\u5de5\u5177\u7684\u4ee3\u7801\u81ea\u52a8\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801\u548c\u81ea\u52a8\u751f\u6210\u7684\u53ef\u80fd\u6709\u4e0d\u4e00\u81f4\uff0cMapper\u3001Service\u5728\u91cd\u65b0\u751f\u6210\u65f6\u57fa\u672c\u4e0d\u4f1a\u53d8\u5316\uff0cModel\u53ef\u80fd\u53d8\u5316\u8f83\u5927\uff08\u90fd\u662f\u7a7a\u683c\u3001\u6362\u884c\u4e4b\u7c7b\u7684\u5dee\u8ddd\uff0c\u5bf9\u4ee3\u7801\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff09\u3002 \u8f93\u5165\u8def\u5f84\uff1a\u6309\u9879\u76ee\u7684\u5b9e\u9645\u8def\u5f84\uff0c\u786e\u5b9a\u76f8\u5e94\u4ee3\u7801\u7684\u8f93\u51fa\u8def\u5f84 \u5f15\u7528\u7a7a\u95f4\uff1aMapper\u9700\u8981\u5f15\u7528Model\uff0cService\u9700\u8981\u5f15\u7528Model\u3001Mapper\uff0c\u6309\u5b9e\u9645\u60c5\u51b5\u8f93\u5165\uff08\u5355\u4e2a\u5f15\u7528\u7528\"\"\u5305\u56f4\uff0c\u591a\u4e2a\u5f15\u7528\u7528;\u9694\u5f00\uff09 \u5f15\u7528\u7a7a\u95f4\u53ef\u81ea\u884c\u8f93\u5165\u5176\u4ed6\u7684\u5f15\u7528\uff0c\u4f46\u7531\u4e8ego\u7f16\u8bd1\u65f6\u7684\u7279\u6027\uff0c\u5982\u679c\u6dfb\u52a0\u4e86\u672a\u4f7f\u7528\u7684\u5f15\u7528\u7f16\u8bd1\u65f6\u4f1a\u62a5\u9519\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u662f\u6240\u6709\u7684\u6570\u636e\u8868\u90fd\u8981\u5f15\u7528\uff0c\u8fd8\u662f\u751f\u6210\u4ee3\u7801\u540e\u5404\u81ea\u5728\u4ee3\u7801\u6587\u4ef6\u4e2d\u7684\u81ea\u5b9a\u4e49\u5f15\u7528\u6807\u8bb0\u5bf9\u4e2d\u6dfb\u52a0\u4e3a\u597d\u3002","title":"\u8f93\u51fa"},{"location":"ie310go/cm_setting/#_5","text":"\u53f3\u4e0a\u89d2\u6709\u5907\u4efd\u3001\u6062\u590d\u529f\u80fd\uff0c\u907f\u514d\u56e0\u7a81\u7136\u65ad\u7535\u7b49\u5bfc\u81f4\u7684\u914d\u7f6e\u6587\u4ef6\u635f\u574f","title":"\u5907\u4efd\u4e0e\u6062\u590d"},{"location":"ie310go/cm_type2type/","text":"[MySql] tinyint;bool smallint;int mediumint;int int;int integer;int bigint;int bit;\u8bf7\u4f7f\u7528tinyint double;float32 float;float32 decimal;float32 numeric;float32 char;string varchar;string date;time.Time time;time.Time timestamp;time.Time datetime;time.Time tinyblob;[]byte blob;[]byte mediumblob;[]byte longblob;[]byte longtext;string binary;\u8bf7\u4f7f\u7528blob varbinary;\u8bf7\u4f7f\u7528blob text;string \u4e0a\u8868\u4e2d\uff0c\u6bcf\u4e00\u884c\u4e3a\u4e00\u79cd\u5bf9\u5e94\u5173\u7cfb\uff0c\u524d\u9762\u4e3amysql\u4e2d\u7684\u7c7b\u578b\uff0c\u540e\u9762\u4e3ago\u4e2d\u7684\u7c7b\u578b \u6709\u7684\u7c7b\u578b\u4e0d\u652f\u6301\uff0c\u8bf7\u6309\u540e\u9762\u7684\u8bf4\u660e\u4f7f\u7528\u5bf9\u5e94\u7684\u7c7b\u578b \u4e0d\u5728\u4e0a\u8868\u4e2d\u7684\u7c7b\u578b\u4e0d\u652f\u6301","title":"\u6570\u636e\u7c7b\u578b\u5bf9\u7167\u8868"},{"location":"ie310go/config/","text":"\u7b80\u4ecb ie310go\u4e0d\u63d0\u4f9b\u590d\u6742\u7684\u914d\u7f6e\u7cfb\u7edf \u4ec5\u63d0\u4f9b\u7b80\u5355json\u89e3\u6790\uff0c\u4e0b\u6587\u6f14\u793a\u5982\u4f55\u4f7f\u7528\uff1a AppConfig\u7c7b \u9996\u5148\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aAppConfig\u7c7b\uff1a //AppConfig .. type AppConfig struct { Port string ServiceSuffix string Jsonp bool LogArgs bool Appkey string StaticFilePath string RiotIndexPath string DataBase gosql.Config DataBaseRO gosql.Config RedisURL string } appconfig.json\u6587\u4ef6 \u7136\u540e\uff0c\u9700\u8981\u5b9a\u4e49\u5bf9\u5e94\u7684json\u6587\u4ef6appconfig.json\uff1a { Port : 8083 , AdminPort : 8084 , ServiceSuffix : goss , Jsonp : true, LogArgs : false, Appkey : i3work_goservcie , RedisURL : 127.0.0.1:6379 , StaticFilePath : , RiotIndexPath : , DataBase : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 }, DataBaseRO : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 } } \u89e3\u6790 \u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef\u5c06json\u6587\u4ef6\u89e3\u6790\u5230Config\u7c7b\u4e2d\uff1a package config import ( github.com/ie310mu/ie310go/config ) // Config ... var Config AppConfig // Init ... func Init(file string) AppConfig { config.ScanFromFile(file, Config) return Config } \u8c03\u7528\u65f6\uff0c\u53ef\u7ed3\u5408\u547d\u4ee4\u884c\u53c2\u6570\u52a8\u6001\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e \u8c03\u8bd5\u65f6\u65e0\u6b64\u53c2\u6570\u9ed8\u8ba4\u4f7f\u7528\u6839\u76ee\u5f55\u4e0b\u914d\u7f6e\uff0c\u6d4b\u8bd5\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u53ef\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u5b9e\u9645\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a //import cu i3work/config configFileName := appconfig.json for _, arg := range os.Args { if strings.Index(arg, -cf ) == 0 { //\u914d\u7f6e\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) configFileName = fileName } } cfg := cu.Init(configFileName) \u6ce8\uff1a\u4e0a\u8ff0\u4ee3\u7801\u662f\u901a\u8fc7\u89e3\u6790os.Args\u6765\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u662f\u901a\u8fc7flag\u6765\u81ea\u52a8\u89e3\u6790 \u5176\u4ed6 \u4e0a\u6587\u53ea\u662f\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7684\u793a\u4f8b\uff0c\u5b9e\u9645\u4e0a\u53ef\u4f7f\u7528\u4efb\u610f\u5b9e\u73b0\u65b9\u5f0f\u4ee5\u6ee1\u8db3\u9879\u76ee\u9700\u6c42 \u53ef\u4ee5\u7ed3\u5408flag\u547d\u4ee4\u884c\u53c2\u6570\u4f7f\u7528 \u53ef\u4ee5\u4f7f\u7528toml\uff08\u7c7b\u4f3c\u4e8eini\u914d\u7f6e\uff09","title":"config"},{"location":"ie310go/config/#_1","text":"ie310go\u4e0d\u63d0\u4f9b\u590d\u6742\u7684\u914d\u7f6e\u7cfb\u7edf \u4ec5\u63d0\u4f9b\u7b80\u5355json\u89e3\u6790\uff0c\u4e0b\u6587\u6f14\u793a\u5982\u4f55\u4f7f\u7528\uff1a","title":"\u7b80\u4ecb"},{"location":"ie310go/config/#appconfig","text":"\u9996\u5148\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aAppConfig\u7c7b\uff1a //AppConfig .. type AppConfig struct { Port string ServiceSuffix string Jsonp bool LogArgs bool Appkey string StaticFilePath string RiotIndexPath string DataBase gosql.Config DataBaseRO gosql.Config RedisURL string }","title":"AppConfig\u7c7b"},{"location":"ie310go/config/#appconfigjson","text":"\u7136\u540e\uff0c\u9700\u8981\u5b9a\u4e49\u5bf9\u5e94\u7684json\u6587\u4ef6appconfig.json\uff1a { Port : 8083 , AdminPort : 8084 , ServiceSuffix : goss , Jsonp : true, LogArgs : false, Appkey : i3work_goservcie , RedisURL : 127.0.0.1:6379 , StaticFilePath : , RiotIndexPath : , DataBase : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 }, DataBaseRO : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 } }","title":"appconfig.json\u6587\u4ef6"},{"location":"ie310go/config/#_2","text":"\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef\u5c06json\u6587\u4ef6\u89e3\u6790\u5230Config\u7c7b\u4e2d\uff1a package config import ( github.com/ie310mu/ie310go/config ) // Config ... var Config AppConfig // Init ... func Init(file string) AppConfig { config.ScanFromFile(file, Config) return Config } \u8c03\u7528\u65f6\uff0c\u53ef\u7ed3\u5408\u547d\u4ee4\u884c\u53c2\u6570\u52a8\u6001\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e \u8c03\u8bd5\u65f6\u65e0\u6b64\u53c2\u6570\u9ed8\u8ba4\u4f7f\u7528\u6839\u76ee\u5f55\u4e0b\u914d\u7f6e\uff0c\u6d4b\u8bd5\u6216\u751f\u4ea7\u73af\u5883\u4e2d\u53ef\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u6307\u5b9a\u5b9e\u9645\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a //import cu i3work/config configFileName := appconfig.json for _, arg := range os.Args { if strings.Index(arg, -cf ) == 0 { //\u914d\u7f6e\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) configFileName = fileName } } cfg := cu.Init(configFileName) \u6ce8\uff1a\u4e0a\u8ff0\u4ee3\u7801\u662f\u901a\u8fc7\u89e3\u6790os.Args\u6765\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u662f\u901a\u8fc7flag\u6765\u81ea\u52a8\u89e3\u6790","title":"\u89e3\u6790"},{"location":"ie310go/config/#_3","text":"\u4e0a\u6587\u53ea\u662f\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7684\u793a\u4f8b\uff0c\u5b9e\u9645\u4e0a\u53ef\u4f7f\u7528\u4efb\u610f\u5b9e\u73b0\u65b9\u5f0f\u4ee5\u6ee1\u8db3\u9879\u76ee\u9700\u6c42 \u53ef\u4ee5\u7ed3\u5408flag\u547d\u4ee4\u884c\u53c2\u6570\u4f7f\u7528 \u53ef\u4ee5\u4f7f\u7528toml\uff08\u7c7b\u4f3c\u4e8eini\u914d\u7f6e\uff09","title":"\u5176\u4ed6"},{"location":"ie310go/db/","text":"\u7b80\u4ecb db\u6a21\u5757\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b\uff0c \u4ee3\u7801\u751f\u6210 --- Mapper \u5df2\u57fa\u672c\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5bf9BaseMapper\u7684\u6269\u5c55\u5b9e\u73b0\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u6b64\u5904\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd \u6570\u636e\u5e93\u521d\u59cb\u5316 \u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5bf9\u6570\u636e\u5e93\u521d\u59cb\u5316\uff1a ie310go.SetDbInfo(cfg.DataBase, cfg.DataBaseRO) SetDbInfo\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c1\u4e2a\u662f\u53ef\u5199\u6570\u636e\u5e93\u7684\u4fe1\u606f\uff0c\u7b2c2\u4e2a\u662f\u53ea\u8bfb\u6570\u636e\u5e93\u7684\u4fe1\u606f \u5b9a\u4e49\u5982\u4e0b\uff1a // github.com/ie310mu/ie310go/forks/github.com/ilibs/gosql type Config struct { Enable bool `json: enable ` Driver string `json: driver ` Dsn string `json: dsn ` MaxOpenConns int `toml: max_open_conns json: max_open_conns ` //\u6700\u5927\u6253\u5f00\u7684\u8fde\u63a5\u6570 MaxIdleConns int `toml: max_idle_conns json: max_idle_conns ` //\u6700\u5927\u95f2\u7f6e\u8fde\u63a5\u6570 MaxLifetime int `toml: max_life_time json: max_life_time ` //\u6700\u5927\u95f2\u7f6e\u65f6\u95f4\uff0c\u5355\u4f4ds\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3amysql waittime\u7684\u4e00\u534a ShowSql bool `toml: show_sql json: show_sql ` } \u83b7\u53d6mapper\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u4e86\u5982\u4e0b\u7684\u4ee3\u7801\uff1a mp := mapper.GetConsumeRecordMapper( ro ) \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a \"ro\"\uff1a\u83b7\u53d6\u53ea\u8bfbmapper \"\"\uff1a\u76f8\u5f53\u4e8e\"default\"\uff0c\u83b7\u53d6\u53ef\u5199mapper","title":"db"},{"location":"ie310go/db/#_1","text":"db\u6a21\u5757\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b\uff0c \u4ee3\u7801\u751f\u6210 --- Mapper \u5df2\u57fa\u672c\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5bf9BaseMapper\u7684\u6269\u5c55\u5b9e\u73b0\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u6b64\u5904\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd","title":"\u7b80\u4ecb"},{"location":"ie310go/db/#_2","text":"\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5bf9\u6570\u636e\u5e93\u521d\u59cb\u5316\uff1a ie310go.SetDbInfo(cfg.DataBase, cfg.DataBaseRO) SetDbInfo\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c1\u4e2a\u662f\u53ef\u5199\u6570\u636e\u5e93\u7684\u4fe1\u606f\uff0c\u7b2c2\u4e2a\u662f\u53ea\u8bfb\u6570\u636e\u5e93\u7684\u4fe1\u606f \u5b9a\u4e49\u5982\u4e0b\uff1a // github.com/ie310mu/ie310go/forks/github.com/ilibs/gosql type Config struct { Enable bool `json: enable ` Driver string `json: driver ` Dsn string `json: dsn ` MaxOpenConns int `toml: max_open_conns json: max_open_conns ` //\u6700\u5927\u6253\u5f00\u7684\u8fde\u63a5\u6570 MaxIdleConns int `toml: max_idle_conns json: max_idle_conns ` //\u6700\u5927\u95f2\u7f6e\u8fde\u63a5\u6570 MaxLifetime int `toml: max_life_time json: max_life_time ` //\u6700\u5927\u95f2\u7f6e\u65f6\u95f4\uff0c\u5355\u4f4ds\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3amysql waittime\u7684\u4e00\u534a ShowSql bool `toml: show_sql json: show_sql ` } \u83b7\u53d6mapper\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u4e86\u5982\u4e0b\u7684\u4ee3\u7801\uff1a mp := mapper.GetConsumeRecordMapper( ro ) \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a \"ro\"\uff1a\u83b7\u53d6\u53ea\u8bfbmapper \"\"\uff1a\u76f8\u5f53\u4e8e\"default\"\uff0c\u83b7\u53d6\u53ef\u5199mapper","title":"\u6570\u636e\u5e93\u521d\u59cb\u5316"},{"location":"ie310go/docker/","text":"\u63a8\u8350\u4ee5docker\u65b9\u5f0f\u90e8\u7f72 \u5305\u542b\u9759\u6001\u6587\u4ef6\u4ee3\u7406\u7684docker build\u6587\u4ef6\u793a\u4f8b\uff08\u6458\u53d6\u81ea i3work \u9879\u76ee\uff09\uff1a linux\u4e2d\u7684shell\u811a\u672cbuild\uff1a cd /root/GoPath/src/github.com/ie310mu svn checkout svn://host:port/000.git/ie310go /root/GoPath/src/github.com/ie310mu/ie310go cd /root/GoPath/src svn checkout svn://host:port/023.i3work /root/GoPath/src/i3work export GOPATH=/root/GoPath cd /root/GoPath/src/i3work GOOS=linux GOARCH=amd64 go build --ldflags -extldflags -static -tags netgo main.go rm -fr /root/createimages/05.02.i3work.go/i3workGo mkdir /root/createimages/05.02.i3work.go/i3workGo cp -fp /root/GoPath/src/i3work/main /root/createimages/05.02.i3work.go/i3workGo/main cp -afpr /root/GoPath/src/i3work/static /root/createimages/05.02.i3work.go/i3workGo/static rm -fr /root/createimages/05.02.i3work.go/usr mkdir -pv /root/createimages/05.02.i3work.go/usr/share/zoneinfo/Asia cp -f /usr/share/zoneinfo/Asia/Shanghai /root/createimages/05.02.i3work.go/usr/share/zoneinfo/Asia/Shanghai docker build -t host:port/ie310/inftc.i3work.go:latest /root/createimages/05.02.i3work.go docker rmi -f `docker images | grep none | awk {print $3} ` Dockerfile\uff1a FROM alpine:latest # \u4e0b\u9762\u51e0\u53e5\u8bbe\u7f6e\u65f6\u533a COPY ./usr/share/zoneinfo/Asia/Shanghai /usr/share/zoneinfo/Asia/Shanghai RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime RUN echo Asia/Shanghai /etc/timezone COPY ./i3workGo /root/i3workGo COPY ./GoRuntimeFiles /usr/local VOLUME [ /root/i3workGoConfig , /root/i3workGoLogs , /root/i3workGo/upload , /root/i3workGo/riot-index ] WORKDIR / CMD /root/i3workGo/main -cf /root/i3workGoConfig/appconfig.json -lf /root/i3workGoLogs/i3work.log push\u811a\u672c\uff1a docker push host:port/ie310/inftc.i3work.go:latest","title":"Docker"},{"location":"ie310go/dy/","text":"tpc/ipc/ws\uff1a \u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09 http: \u4e0d\u80fd\u4f7f\u7528route.Client\u8c03\u7528\uff0c\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2abackurl\u8ba9\u670d\u52a1\u5668\u56de\u8c03 \u8ba2\u9605\uff1a http://localhost:8003/testService.goss?m=sub subMethod=getSystemState backurl=http://localhost:8003/testService.goss?m=reciveSystemState \u8ba2\u9605\u6210\u529f\u4f1a\u8fd4\u56de\u8ba2\u9605id\u5982\uff1a 8856200d-d112-410b-8b09-a08cb67a57e4 \u53d6\u6d88\u8ba2\u9605\uff1a http://localhost:8003/testService.goss?m=unSub subId=5954e63d-e2f1-4d8a-8246-03baae1e97c9","title":"\u8ba2\u9605/\u53d1\u5e03"},{"location":"ie310go/dy/#tpcipcws","text":"\u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"tpc/ipc/ws\uff1a"},{"location":"ie310go/dy/#http","text":"\u4e0d\u80fd\u4f7f\u7528route.Client\u8c03\u7528\uff0c\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2abackurl\u8ba9\u670d\u52a1\u5668\u56de\u8c03 \u8ba2\u9605\uff1a http://localhost:8003/testService.goss?m=sub subMethod=getSystemState backurl=http://localhost:8003/testService.goss?m=reciveSystemState \u8ba2\u9605\u6210\u529f\u4f1a\u8fd4\u56de\u8ba2\u9605id\u5982\uff1a 8856200d-d112-410b-8b09-a08cb67a57e4 \u53d6\u6d88\u8ba2\u9605\uff1a http://localhost:8003/testService.goss?m=unSub subId=5954e63d-e2f1-4d8a-8246-03baae1e97c9","title":"http:"},{"location":"ie310go/grpc/","text":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1 \u53c2\u8003 tcp \u8c03\u7528\u65b9\u5f0f c#\u8c03\u7528\u793a\u4f8b\uff0c\u53c2\u8003\uff1aie310go/clienttest/Ie310goGrpcTest_csharp.rar","title":"grpc"},{"location":"ie310go/grpc/#_1","text":"\u53c2\u8003 tcp","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1"},{"location":"ie310go/grpc/#_2","text":"c#\u8c03\u7528\u793a\u4f8b\uff0c\u53c2\u8003\uff1aie310go/clienttest/Ie310goGrpcTest_csharp.rar","title":"\u8c03\u7528\u65b9\u5f0f"},{"location":"ie310go/gz/","text":"\u6ce8\u610f ie310go\u6846\u67b6\u4e2d\u6709\u5f88\u591a\u89c4\u5219\u6216\u7ea6\u675f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6b64\u6587\u6863\u4ee5\u8bc4\u4f30\u662f\u5426\u9002\u7528\u60a8\u7684\u9879\u76ee\u3002 \u52a8\u9759\u5206\u79bb \u63d0\u5021\u52a8\u9759\u5206\u79bb\uff0c\u4e0d\u63d0\u4f9b\u6a21\u677f\u6587\u4ef6\u52a8\u6001\u6e32\u67d3\u6210html\u7684\u529f\u80fd \u63d0\u4f9b\u7b80\u5355\u7684\u9759\u6001\u6587\u4ef6\u4ee3\u7406\u529f\u80fd\uff0c\u4e5f\u9884\u7559\u4e86\u53ef\u81ea\u884c\u5904\u7406\u7684\u63a5\u53e3 api\u7edf\u4e00\u8def\u5f84\u683c\u5f0f \u7edf\u4e00api\u8c03\u7528\u8def\u5f84\u683c\u5f0f\uff0c\u51cf\u5c11\u524d\u540e\u7aef\u6c9f\u901a\u969c\u788d\uff0c\u964d\u4f4e\u5f00\u53d1\u4eba\u5458\u5fc3\u667a\u8d1f\u62c5 api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012 \u7b80\u5355\u7684\u914d\u7f6e \u63d0\u5021\u7b80\u5355\u914d\u7f6e\uff0c\u4f7f\u7528json\u914d\u7f6e\u3001flag\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u964d\u4f4e\u914d\u7f6e\u7cfb\u7edf\u7684\u590d\u6742\u6027 db\u6a21\u5757 \u6ca1\u6709\u590d\u6742\u7684orm\u6620\u5c04\u529f\u80fd \u5148\u5b9a\u4e49\u6570\u636e\u8868\uff0c\u518d\u6839\u636e\u6570\u636e\u8868\u81ea\u52a8\u751f\u6210model\u3001mapper\u3001service\uff08\u76ee\u524d\u53ea\u652f\u6301mysql\uff09 \u81ea\u52a8\u751f\u6210\u7684mapper\u7c7b\u5305\u542b\u6240\u6709\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c mapper\u7c7b\u63d0\u4f9b\u65b9\u4fbf\u7684\u6269\u5c55\u65b9\u6cd5\uff0c\u53ef\u968f\u65f6\u6269\u5c55\u66f4\u590d\u6742\u7684\u64cd\u4f5c \u9ed8\u8ba4\u53ea\u751f\u6210\u5355\u8868\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u591a\u8868\u7ea7\u8054\u7b49\u590d\u6742\u64cd\u4f5c\uff0c\u4ea4\u7531\u7a0b\u5e8f\u5458\u81ea\u884c\u5904\u7406\uff08\u4f46\u63d0\u4f9b\u7b80\u4fbf\u7684\u57fa\u672c\u65b9\u6cd5\u652f\u6301\uff09 \u6269\u5c55mapper\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u751fsql\u8bed\u53e5\uff0c\u56de\u5f52\u539f\u59cb\uff0c\u4e0d\u4f7f\u7528hsql\u7b49\u4e0d\u5177\u6709\u901a\u7528\u6027\u7684\u65b9\u5f0f\uff0c\u964d\u4f4e\u5b66\u4e60\u6210\u672c \u603b\u4e4b\uff0cdb\u6a21\u5757\u6709\u70b9\u7c7b\u4f3c\u4e8ejava\u4e2d\u7684mybatis\uff0c\u4f46\u7531\u4e8ego\u8bed\u8a00\u7684\u7279\u6027\uff0c\u4e5f\u5b58\u5728\u5f88\u591a\u53d8\u5316 \u5173\u4e8ehttps \u76ee\u524d\u672a\u63d0\u4f9bhttps\u652f\u6301\uff0c\u53ef\u8003\u8651\u5728\u51fa\u53e3\u5c42\u4f7f\u7528nginx\u53cd\u5411\u4ee3\u7406\u6dfb\u52a0https\u652f\u6301 \u603b\u7ed3 ie310go\u5728\u5f88\u591a\u65b9\u9762\u8fdb\u884c\u4e86\u5f3a\u89c4\u5219\u7ea6\u675f\uff0c\u653e\u5f03\u4e86\u7075\u6d3b\u6027\uff0c\u5e26\u6765\u4e00\u81f4\u6027\u3001\u7b80\u6d01\u6027\uff0c\u8fd9\u4e0ego\u8bed\u8a00\u672c\u8eab\u7684\u7279\u6027\u7c7b\u4f3c\u3002","title":"\u89c4\u5219/\u7ea6\u675f"},{"location":"ie310go/gz/#_1","text":"ie310go\u6846\u67b6\u4e2d\u6709\u5f88\u591a\u89c4\u5219\u6216\u7ea6\u675f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u6b64\u6587\u6863\u4ee5\u8bc4\u4f30\u662f\u5426\u9002\u7528\u60a8\u7684\u9879\u76ee\u3002","title":"\u6ce8\u610f"},{"location":"ie310go/gz/#_2","text":"\u63d0\u5021\u52a8\u9759\u5206\u79bb\uff0c\u4e0d\u63d0\u4f9b\u6a21\u677f\u6587\u4ef6\u52a8\u6001\u6e32\u67d3\u6210html\u7684\u529f\u80fd \u63d0\u4f9b\u7b80\u5355\u7684\u9759\u6001\u6587\u4ef6\u4ee3\u7406\u529f\u80fd\uff0c\u4e5f\u9884\u7559\u4e86\u53ef\u81ea\u884c\u5904\u7406\u7684\u63a5\u53e3","title":"\u52a8\u9759\u5206\u79bb"},{"location":"ie310go/gz/#api","text":"\u7edf\u4e00api\u8c03\u7528\u8def\u5f84\u683c\u5f0f\uff0c\u51cf\u5c11\u524d\u540e\u7aef\u6c9f\u901a\u969c\u788d\uff0c\u964d\u4f4e\u5f00\u53d1\u4eba\u5458\u5fc3\u667a\u8d1f\u62c5 api\u8def\u5f84\u793a\u4f8b\uff1ahttp://host:port/xxxxService.xxx?m=xxx par1=xxx par2=xxx xxxxService.xxx\u90e8\u5206\uff1a\u670d\u52a1\u540d.\u670d\u52a1\u540e\u7f00 m=xxx\uff1a\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u540d\u79f0 par1=xxx par2=xxx\uff1a\u4f20\u9012\u7684\u53c2\u6570 \u53c2\u6570\u53ef\u4ee5\u7528get\u65b9\u5f0f\u4f20\u9012\u4e5f\u53ef\u4ee5\u7528post\u65b9\u5f0f\u4f20\u9012","title":"api\u7edf\u4e00\u8def\u5f84\u683c\u5f0f"},{"location":"ie310go/gz/#_3","text":"\u63d0\u5021\u7b80\u5355\u914d\u7f6e\uff0c\u4f7f\u7528json\u914d\u7f6e\u3001flag\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u964d\u4f4e\u914d\u7f6e\u7cfb\u7edf\u7684\u590d\u6742\u6027","title":"\u7b80\u5355\u7684\u914d\u7f6e"},{"location":"ie310go/gz/#db","text":"\u6ca1\u6709\u590d\u6742\u7684orm\u6620\u5c04\u529f\u80fd \u5148\u5b9a\u4e49\u6570\u636e\u8868\uff0c\u518d\u6839\u636e\u6570\u636e\u8868\u81ea\u52a8\u751f\u6210model\u3001mapper\u3001service\uff08\u76ee\u524d\u53ea\u652f\u6301mysql\uff09 \u81ea\u52a8\u751f\u6210\u7684mapper\u7c7b\u5305\u542b\u6240\u6709\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c mapper\u7c7b\u63d0\u4f9b\u65b9\u4fbf\u7684\u6269\u5c55\u65b9\u6cd5\uff0c\u53ef\u968f\u65f6\u6269\u5c55\u66f4\u590d\u6742\u7684\u64cd\u4f5c \u9ed8\u8ba4\u53ea\u751f\u6210\u5355\u8868\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u591a\u8868\u7ea7\u8054\u7b49\u590d\u6742\u64cd\u4f5c\uff0c\u4ea4\u7531\u7a0b\u5e8f\u5458\u81ea\u884c\u5904\u7406\uff08\u4f46\u63d0\u4f9b\u7b80\u4fbf\u7684\u57fa\u672c\u65b9\u6cd5\u652f\u6301\uff09 \u6269\u5c55mapper\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u751fsql\u8bed\u53e5\uff0c\u56de\u5f52\u539f\u59cb\uff0c\u4e0d\u4f7f\u7528hsql\u7b49\u4e0d\u5177\u6709\u901a\u7528\u6027\u7684\u65b9\u5f0f\uff0c\u964d\u4f4e\u5b66\u4e60\u6210\u672c \u603b\u4e4b\uff0cdb\u6a21\u5757\u6709\u70b9\u7c7b\u4f3c\u4e8ejava\u4e2d\u7684mybatis\uff0c\u4f46\u7531\u4e8ego\u8bed\u8a00\u7684\u7279\u6027\uff0c\u4e5f\u5b58\u5728\u5f88\u591a\u53d8\u5316","title":"db\u6a21\u5757"},{"location":"ie310go/gz/#https","text":"\u76ee\u524d\u672a\u63d0\u4f9bhttps\u652f\u6301\uff0c\u53ef\u8003\u8651\u5728\u51fa\u53e3\u5c42\u4f7f\u7528nginx\u53cd\u5411\u4ee3\u7406\u6dfb\u52a0https\u652f\u6301","title":"\u5173\u4e8ehttps"},{"location":"ie310go/gz/#_4","text":"ie310go\u5728\u5f88\u591a\u65b9\u9762\u8fdb\u884c\u4e86\u5f3a\u89c4\u5219\u7ea6\u675f\uff0c\u653e\u5f03\u4e86\u7075\u6d3b\u6027\uff0c\u5e26\u6765\u4e00\u81f4\u6027\u3001\u7b80\u6d01\u6027\uff0c\u8fd9\u4e0ego\u8bed\u8a00\u672c\u8eab\u7684\u7279\u6027\u7c7b\u4f3c\u3002","title":"\u603b\u7ed3"},{"location":"ie310go/init/","text":"\u7b80\u4ecb \u672c\u6587\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u521d\u59cb\u5316\u5b9e\u4f8b\uff0c\u5305\u542b\u524d\u6587\u6240\u6d89\u53ca\u5230\u7684\u6a21\u5757 \u793a\u4f8b\u4ee3\u7801\u6458\u53d6\u81ea i3work \u9879\u76ee main.go package main import ( fmt os os/signal strings syscall _ i3work/service //\u5bfc\u5165services _ github.com/ie310mu/ie310go/cache/redis //\u5bfc\u5165\u7f13\u5b58\u7684redis\u9a71\u52a8 github.com/ie310mu/ie310go/common/dir github.com/ie310mu/ie310go/common/json github.com/ie310mu/ie310go/common/logsagent _ github.com/ie310mu/ie310go/session/redis //\u5bfc\u5165session\u7684redis\u9a71\u52a8 i3work/cache cu i3work/config github.com/ie310mu/ie310go github.com/ie310mu/ie310go/route ) func main() { //\u5f02\u5e38\u5904\u7406 defer func() { if err := recover(); err != nil { logsagent.Error( Exception has been caught. , err) logsagent.Warn( Press return to exit. ) var empty string fmt.Scanln( empty) } }() //\u521d\u59cb\u5316\u5e94\u7528\u7a0b\u5e8f appinit() //\u542f\u52a8servers\uff08\u5728\u534f\u7a0b\u4e2d\u542f\u52a8\uff0c\u4fbf\u4e8e\u5b9e\u73b0\u4f18\u96c5\u9000\u51fa\uff09 go ie310go.Run(nil) defer ie310go.Stop() //\u5b9e\u73b0\u4f18\u96c5\u9000\u51fa sigs := make(chan os.Signal, 1) signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT) for s := range sigs { switch s { case syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT: logsagent.Info( got signal and try to exit: , s) return default: fmt.Println( got other signal : , s) } } } func appinit() { //\u914d\u7f6e\u521d\u59cb\u5316 configFileName := appconfig.json logFileName := logs/i3work.log for _, arg := range os.Args { //fmt.Println( \u53c2\u6570 +strconv.Itoa(idx)+ : , arg) if strings.Index(arg, -cf ) == 0 { //\u914d\u7f6e\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) configFileName = fileName } if strings.Index(arg, -lf ) == 0 { //\u65e5\u5fd7\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) logFileName = fileName } } cfg := cu.Init(configFileName) //\u65e5\u5fd7\u521d\u59cb\u5316 //\u5148\u521d\u59cb\u5316\u65e5\u5fd7\uff0c\u4e0d\u7136\u540e\u9762\u6709\u7684\u4ee3\u7801\u5904\u65e5\u5fd7\u65e0\u6cd5\u8f93\u51fa ie310go.AppLogsInitFunc = nil //\u53d6\u6d88\u9ed8\u8ba4\u65e5\u5fd7\u521d\u59cb\u65b9\u6cd5 ie310go.InitLogs(`{ filename : ` + logFileName + ` }`) logsagent.Info( configFile: + configFileName) logsagent.Info( logFile: + logFileName) //\u7f13\u5b58\u521d\u59cb\u5316 cache.Init() //\u6570\u636e\u5e93\u521d\u59cb\u5316 ie310go.SetDbInfo(cfg.DataBase, cfg.DataBaseRO) //session\u521d\u59cb\u5316 //ie310go.SetDefaultSessionInfo( JSESSIONID , false) //ie310go.AppSessionInitFunc = session.Init ie310go.AppSessionInitFunc = nil //\u4e0d\u4f7f\u7528session //server\u521d\u59cb\u5316 httpConfig := route.ServerHTTPConfig{ Port: cfg.Port, ServiceSuffix: cfg.ServiceSuffix, Jsonp: true, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath() + static , } logsagent.Info( the DefaultServeStatic is + httpConfig.DefaultStaticDir) if cfg.StaticFilePath != cfg.StaticFilePath != httpConfig.DefaultStaticDir { httpConfig.DefaultStaticDir = cfg.StaticFilePath logsagent.Info( reset the DefaultServeStatic to + httpConfig.DefaultStaticDir) } srv := route.NewServerHTTP(httpConfig, httpServer ) exportServices(route.Services, srv) route.RegisterServer(srv) } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } } \u914d\u7f6e\u6587\u4ef6\u7c7b package config import ( github.com/ie310mu/ie310go/config ) // Config ... var Config AppConfig // Init ... func Init(file string) AppConfig { config.ScanFromFile(file, Config) return Config } //AppConfig .. type AppConfig struct { Port string AdminPort string ServiceSuffix string Jsonp bool LogArgs bool Appkey string StaticFilePath string RiotIndexPath string DataBase gosql.Config DataBaseRO gosql.Config RedisURL string } \u914d\u7f6e\u6587\u4ef6 { Port : 8083 , AdminPort : 8084 , ServiceSuffix : goss , Jsonp : true, LogArgs : false, Appkey : i3work_goservcie , RedisURL : 127.0.0.1:6379 , StaticFilePath : , RiotIndexPath : , DataBase : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 }, DataBaseRO : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 } } cache package cache import ( i3work/config fmt github.com/ie310mu/ie310go/cache github.com/ie310mu/ie310go/common/logsagent github.com/ie310mu/ie310go/common/obj github.com/ie310mu/ie310go/common/throw ) //Bm \u6839\u636e\u914d\u7f6e\u786e\u5b9a\u662f\u5b58\u50a8\u5728memory\u8fd8\u662fredis var Bm cache.Cache //BmMemory \u53ea\u5b58\u50a8\u5728memory var BmMemory cache.Cache //GetString .. func GetString(k string) string { v := Bm.Get(k) if obj.InterfaceIsNil(v) { return } switch v.(type) { case string: return v.(string) case []byte: data := v.([]byte) return string(data) default: return fmt.Sprint(v) } } //Init .. func Init() { if config.Config.RedisURL != { logsagent.Info( cache where init as redis : + config.Config.RedisURL) bm, err := cache.NewCache( redis , `{ conn : `+config.Config.RedisURL+` }`) throw.CheckErr(err) Bm = bm logsagent.Info( cache init as redis : + config.Config.RedisURL) } else { logsagent.Info( cache where init as memory ) bm, err := cache.NewCache( memory , `{ interval :60}`) throw.CheckErr(err) Bm = bm logsagent.Info( cache init as memory ) } { bm, err := cache.NewCache( memory , `{ interval :60}`) //interval:\u591a\u4e45\u68c0\u67e5\u4e00\u6b21\u8fc7\u671f\uff0c\u5355\u4f4ds throw.CheckErr(err) BmMemory = bm } }","title":"\u521d\u59cb\u5316"},{"location":"ie310go/init/#_1","text":"\u672c\u6587\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u521d\u59cb\u5316\u5b9e\u4f8b\uff0c\u5305\u542b\u524d\u6587\u6240\u6d89\u53ca\u5230\u7684\u6a21\u5757 \u793a\u4f8b\u4ee3\u7801\u6458\u53d6\u81ea i3work \u9879\u76ee","title":"\u7b80\u4ecb"},{"location":"ie310go/init/#maingo","text":"package main import ( fmt os os/signal strings syscall _ i3work/service //\u5bfc\u5165services _ github.com/ie310mu/ie310go/cache/redis //\u5bfc\u5165\u7f13\u5b58\u7684redis\u9a71\u52a8 github.com/ie310mu/ie310go/common/dir github.com/ie310mu/ie310go/common/json github.com/ie310mu/ie310go/common/logsagent _ github.com/ie310mu/ie310go/session/redis //\u5bfc\u5165session\u7684redis\u9a71\u52a8 i3work/cache cu i3work/config github.com/ie310mu/ie310go github.com/ie310mu/ie310go/route ) func main() { //\u5f02\u5e38\u5904\u7406 defer func() { if err := recover(); err != nil { logsagent.Error( Exception has been caught. , err) logsagent.Warn( Press return to exit. ) var empty string fmt.Scanln( empty) } }() //\u521d\u59cb\u5316\u5e94\u7528\u7a0b\u5e8f appinit() //\u542f\u52a8servers\uff08\u5728\u534f\u7a0b\u4e2d\u542f\u52a8\uff0c\u4fbf\u4e8e\u5b9e\u73b0\u4f18\u96c5\u9000\u51fa\uff09 go ie310go.Run(nil) defer ie310go.Stop() //\u5b9e\u73b0\u4f18\u96c5\u9000\u51fa sigs := make(chan os.Signal, 1) signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT) for s := range sigs { switch s { case syscall.SIGINT, syscall.SIGTERM, syscall.SIGHUP, syscall.SIGQUIT: logsagent.Info( got signal and try to exit: , s) return default: fmt.Println( got other signal : , s) } } } func appinit() { //\u914d\u7f6e\u521d\u59cb\u5316 configFileName := appconfig.json logFileName := logs/i3work.log for _, arg := range os.Args { //fmt.Println( \u53c2\u6570 +strconv.Itoa(idx)+ : , arg) if strings.Index(arg, -cf ) == 0 { //\u914d\u7f6e\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) configFileName = fileName } if strings.Index(arg, -lf ) == 0 { //\u65e5\u5fd7\u6587\u4ef6 fileName := arg[4:] fileName = strings.Trim(fileName, ) logFileName = fileName } } cfg := cu.Init(configFileName) //\u65e5\u5fd7\u521d\u59cb\u5316 //\u5148\u521d\u59cb\u5316\u65e5\u5fd7\uff0c\u4e0d\u7136\u540e\u9762\u6709\u7684\u4ee3\u7801\u5904\u65e5\u5fd7\u65e0\u6cd5\u8f93\u51fa ie310go.AppLogsInitFunc = nil //\u53d6\u6d88\u9ed8\u8ba4\u65e5\u5fd7\u521d\u59cb\u65b9\u6cd5 ie310go.InitLogs(`{ filename : ` + logFileName + ` }`) logsagent.Info( configFile: + configFileName) logsagent.Info( logFile: + logFileName) //\u7f13\u5b58\u521d\u59cb\u5316 cache.Init() //\u6570\u636e\u5e93\u521d\u59cb\u5316 ie310go.SetDbInfo(cfg.DataBase, cfg.DataBaseRO) //session\u521d\u59cb\u5316 //ie310go.SetDefaultSessionInfo( JSESSIONID , false) //ie310go.AppSessionInitFunc = session.Init ie310go.AppSessionInitFunc = nil //\u4e0d\u4f7f\u7528session //server\u521d\u59cb\u5316 httpConfig := route.ServerHTTPConfig{ Port: cfg.Port, ServiceSuffix: cfg.ServiceSuffix, Jsonp: true, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath() + static , } logsagent.Info( the DefaultServeStatic is + httpConfig.DefaultStaticDir) if cfg.StaticFilePath != cfg.StaticFilePath != httpConfig.DefaultStaticDir { httpConfig.DefaultStaticDir = cfg.StaticFilePath logsagent.Info( reset the DefaultServeStatic to + httpConfig.DefaultStaticDir) } srv := route.NewServerHTTP(httpConfig, httpServer ) exportServices(route.Services, srv) route.RegisterServer(srv) } func exportServices(ss []route.IService, srv route.Server) { for _, s := range ss { srv.RegisterService(s) } }","title":"main.go"},{"location":"ie310go/init/#_2","text":"package config import ( github.com/ie310mu/ie310go/config ) // Config ... var Config AppConfig // Init ... func Init(file string) AppConfig { config.ScanFromFile(file, Config) return Config } //AppConfig .. type AppConfig struct { Port string AdminPort string ServiceSuffix string Jsonp bool LogArgs bool Appkey string StaticFilePath string RiotIndexPath string DataBase gosql.Config DataBaseRO gosql.Config RedisURL string }","title":"\u914d\u7f6e\u6587\u4ef6\u7c7b"},{"location":"ie310go/init/#_3","text":"{ Port : 8083 , AdminPort : 8084 , ServiceSuffix : goss , Jsonp : true, LogArgs : false, Appkey : i3work_goservcie , RedisURL : 127.0.0.1:6379 , StaticFilePath : , RiotIndexPath : , DataBase : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 }, DataBaseRO : { enable : true, driver : mysql , dsn : username:password@tcp(server:ip)/dbname?charset=utf8 parseTime=True loc=Asia%2FShanghai , show_sql : true, max_open_conns : 20, max_idle_conns : 20, max_life_time : 3600 } }","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"ie310go/init/#cache","text":"package cache import ( i3work/config fmt github.com/ie310mu/ie310go/cache github.com/ie310mu/ie310go/common/logsagent github.com/ie310mu/ie310go/common/obj github.com/ie310mu/ie310go/common/throw ) //Bm \u6839\u636e\u914d\u7f6e\u786e\u5b9a\u662f\u5b58\u50a8\u5728memory\u8fd8\u662fredis var Bm cache.Cache //BmMemory \u53ea\u5b58\u50a8\u5728memory var BmMemory cache.Cache //GetString .. func GetString(k string) string { v := Bm.Get(k) if obj.InterfaceIsNil(v) { return } switch v.(type) { case string: return v.(string) case []byte: data := v.([]byte) return string(data) default: return fmt.Sprint(v) } } //Init .. func Init() { if config.Config.RedisURL != { logsagent.Info( cache where init as redis : + config.Config.RedisURL) bm, err := cache.NewCache( redis , `{ conn : `+config.Config.RedisURL+` }`) throw.CheckErr(err) Bm = bm logsagent.Info( cache init as redis : + config.Config.RedisURL) } else { logsagent.Info( cache where init as memory ) bm, err := cache.NewCache( memory , `{ interval :60}`) throw.CheckErr(err) Bm = bm logsagent.Info( cache init as memory ) } { bm, err := cache.NewCache( memory , `{ interval :60}`) //interval:\u591a\u4e45\u68c0\u67e5\u4e00\u6b21\u8fc7\u671f\uff0c\u5355\u4f4ds throw.CheckErr(err) BmMemory = bm } }","title":"cache"},{"location":"ie310go/ipc/","text":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1 \u53c2\u8003 tcp \u8c03\u7528\u65b9\u5f0f \u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"ipc"},{"location":"ie310go/ipc/#_1","text":"\u53c2\u8003 tcp","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1"},{"location":"ie310go/ipc/#_2","text":"\u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"\u8c03\u7528\u65b9\u5f0f"},{"location":"ie310go/jj/","text":"\u662f\u4ec0\u4e48 ie310go\u662f\u4e00\u4e2a web\u5f00\u53d1\u6846\u67b6 \u4f7f\u7528 golang \u8bed\u8a00\u5f00\u53d1 \u7528\u4e8e \u5feb\u901f\u5f00\u53d1 web\u5e94\u7528\u3001api\u670d\u52a1 git\u4ed3\u5e93\u5730\u5740\uff1a https://github.com/ie310mu/ie310go \u7279\u6027 \u5feb\u901f\u542f\u52a8\uff0c \u6570\u79d2 \u65f6\u95f4\u5373\u53ef\u5b8c\u6210\u7f16\u8bd1\u3001\u8fd0\u884c \u4ee3\u7801\u7b80\u6d01\u3001\u5bf9\u7f16\u7801\u98ce\u683c\u8fdb\u884c\u5f3a\u5236\u7ea6\u675f\uff0c \u964d\u4f4e\u6c9f\u901a\u6210\u672c \u4f7f\u7528\u7b80\u5355\uff0c\u53ef\u5feb\u901f\u4e0a\u624b\uff0c\u5373\u4f7f\u662f\u6ca1\u6709go\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\uff0c\u4e5f\u53ea\u9700 1\u5468 \u65f6\u95f4\u719f\u6089go\u8bed\u8a00\u5c31\u53ef\u8fdb\u5165\u5f00\u53d1\u5de5\u4f5c \u9488\u5bf9\u4e1a\u52a1\u7cfb\u7edf\u7684\u5f00\u53d1\uff0c \u81ea\u52a8\u751f\u6210 crud\u4ee3\u7801\uff0c\u51cf\u5c1180%\u5de5\u4f5c\u91cf\uff0c\u5e76\u63d0\u4f9b\u5feb\u901f\u6269\u5c55\u7684\u7a7a\u95f4\uff0c\u4e3a\u5feb\u901f\u4ea4\u4ed8\u63d0\u4f9b\u652f\u6491 \u90e8\u7f72\u7b80\u5355\uff0c \u6ca1\u6709\u4f9d\u8d56 \u914d\u7f6e\u7b80\u5355 \uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u51fa\u95ee\u9898\u53ef\u5feb\u901f\u5b9a\u4f4d\uff0c\u7ec6\u8282\u4e0d\u4f1a\u9690\u85cf\u5728\u91cd\u91cd\u4ee3\u7801\u4e4b\u4e0b \u8d44\u6e90\u8981\u6c42\u4f4e \uff0c\u4e0d\u4f1a\u542f\u52a8\u5c31\u9700\u8981\u4e0a\u767e\u3001\u6570\u767eM\u5185\u5b58 \u8fd0\u884c\u6548\u7387\u9ad8 \u4e0edocker\u96c6\u6210\u65b9\u4fbf\uff0c \u955c\u50cf\u6587\u4ef6\u5f88\u5c0f \uff08\u4e00\u822c10M\u5de6\u53f3\uff09\uff0c\u9002\u5408\u5fae\u670d\u52a1\u67b6\u6784\uff08B\u7ad9\u540e\u53f0\u5c31\u662f\u7528go\u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c\u6709\u6570\u767e\u4e2a\u670d\u52a1\uff09 \u5bf9\u4e1a\u52a1\u7a0b\u5e8f\u5458\u5c4f\u853d\u7ec6\u8282\uff0c\u5bf9\u67b6\u6784\u5e08\u5f00\u653e\uff08\u4ee3\u7801\u5c42\u6b21\u6d45\uff0c\u6ca1\u6709\u592a\u591a\u590d\u6742\u7684\u5c01\u88c5\uff0c \u5b66\u4e60\u6210\u672c\u4f4e \uff09 \u5b8c\u5584\u3001\u7edf\u4e00\u7684\u6587\u6863 \uff1a\u6587\u6863\u6258\u7ba1\u5728github\uff0c\u5165\u53e3\u5730\u5740\u662f ie310.cn \uff0c\u6b64\u5904\u6587\u6863\u662f\u6700\u5168\u3001\u6700\u65b0\u7684 \u83b7\u53d6\u6e90\u7801 cd {yourGoPath}/src/github.com/ie310mu (\u9700\u8981\u5148\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55) git clone https://github.com/ie310mu/ie310go ie310go\u5f15\u7528\u4e86\u8bb8\u591a\u5f00\u6e90\u9879\u76ee\uff0c\u4e3a\u51cf\u5c11\u9879\u76ee\u5f15\u7528\u7684\u590d\u6742\u6027\uff0c\u6240\u6709\u5f15\u7528\u5230\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u90fd\u5df2\u7ecf\u590d\u5236\u5230/ie310go/forks\u76ee\u5f55\u4e0b\u3002\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u4e0b\u8f7die310go\u9879\u76ee\u7684\u6e90\u7801\u5373\u53ef\u3002 \u4ee3\u7801\u751f\u6210 \u4e0eie310go\u914d\u5957\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ee3\u7801\u751f\u6210\u5de5\u5177i3go_codemaker\uff0c\u7528\u4e8e\u6309\u6570\u636e\u5e93\u8868\u751f\u6210db\u6a21\u5757\u9700\u8981\u7684Model\u3001Mapper\uff0croute\u6a21\u5757\u9700\u8981\u7684Service ie310go_codemaker\u4f7f\u7528c#\u5f00\u53d1\uff0c\u76ee\u524d\u53ea\u80fd\u5728windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 https://github.com/ie310mu/i3go_codemaker \u5177\u4f53\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003 \u4ee3\u7801\u751f\u6210","title":"\u7b80\u4ecb"},{"location":"ie310go/jj/#_1","text":"ie310go\u662f\u4e00\u4e2a web\u5f00\u53d1\u6846\u67b6 \u4f7f\u7528 golang \u8bed\u8a00\u5f00\u53d1 \u7528\u4e8e \u5feb\u901f\u5f00\u53d1 web\u5e94\u7528\u3001api\u670d\u52a1 git\u4ed3\u5e93\u5730\u5740\uff1a https://github.com/ie310mu/ie310go","title":"\u662f\u4ec0\u4e48"},{"location":"ie310go/jj/#_2","text":"\u5feb\u901f\u542f\u52a8\uff0c \u6570\u79d2 \u65f6\u95f4\u5373\u53ef\u5b8c\u6210\u7f16\u8bd1\u3001\u8fd0\u884c \u4ee3\u7801\u7b80\u6d01\u3001\u5bf9\u7f16\u7801\u98ce\u683c\u8fdb\u884c\u5f3a\u5236\u7ea6\u675f\uff0c \u964d\u4f4e\u6c9f\u901a\u6210\u672c \u4f7f\u7528\u7b80\u5355\uff0c\u53ef\u5feb\u901f\u4e0a\u624b\uff0c\u5373\u4f7f\u662f\u6ca1\u6709go\u8bed\u8a00\u5f00\u53d1\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\uff0c\u4e5f\u53ea\u9700 1\u5468 \u65f6\u95f4\u719f\u6089go\u8bed\u8a00\u5c31\u53ef\u8fdb\u5165\u5f00\u53d1\u5de5\u4f5c \u9488\u5bf9\u4e1a\u52a1\u7cfb\u7edf\u7684\u5f00\u53d1\uff0c \u81ea\u52a8\u751f\u6210 crud\u4ee3\u7801\uff0c\u51cf\u5c1180%\u5de5\u4f5c\u91cf\uff0c\u5e76\u63d0\u4f9b\u5feb\u901f\u6269\u5c55\u7684\u7a7a\u95f4\uff0c\u4e3a\u5feb\u901f\u4ea4\u4ed8\u63d0\u4f9b\u652f\u6491 \u90e8\u7f72\u7b80\u5355\uff0c \u6ca1\u6709\u4f9d\u8d56 \u914d\u7f6e\u7b80\u5355 \uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u51fa\u95ee\u9898\u53ef\u5feb\u901f\u5b9a\u4f4d\uff0c\u7ec6\u8282\u4e0d\u4f1a\u9690\u85cf\u5728\u91cd\u91cd\u4ee3\u7801\u4e4b\u4e0b \u8d44\u6e90\u8981\u6c42\u4f4e \uff0c\u4e0d\u4f1a\u542f\u52a8\u5c31\u9700\u8981\u4e0a\u767e\u3001\u6570\u767eM\u5185\u5b58 \u8fd0\u884c\u6548\u7387\u9ad8 \u4e0edocker\u96c6\u6210\u65b9\u4fbf\uff0c \u955c\u50cf\u6587\u4ef6\u5f88\u5c0f \uff08\u4e00\u822c10M\u5de6\u53f3\uff09\uff0c\u9002\u5408\u5fae\u670d\u52a1\u67b6\u6784\uff08B\u7ad9\u540e\u53f0\u5c31\u662f\u7528go\u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c\u6709\u6570\u767e\u4e2a\u670d\u52a1\uff09 \u5bf9\u4e1a\u52a1\u7a0b\u5e8f\u5458\u5c4f\u853d\u7ec6\u8282\uff0c\u5bf9\u67b6\u6784\u5e08\u5f00\u653e\uff08\u4ee3\u7801\u5c42\u6b21\u6d45\uff0c\u6ca1\u6709\u592a\u591a\u590d\u6742\u7684\u5c01\u88c5\uff0c \u5b66\u4e60\u6210\u672c\u4f4e \uff09 \u5b8c\u5584\u3001\u7edf\u4e00\u7684\u6587\u6863 \uff1a\u6587\u6863\u6258\u7ba1\u5728github\uff0c\u5165\u53e3\u5730\u5740\u662f ie310.cn \uff0c\u6b64\u5904\u6587\u6863\u662f\u6700\u5168\u3001\u6700\u65b0\u7684","title":"\u7279\u6027"},{"location":"ie310go/jj/#_3","text":"cd {yourGoPath}/src/github.com/ie310mu (\u9700\u8981\u5148\u521b\u5efa\u5bf9\u5e94\u76ee\u5f55) git clone https://github.com/ie310mu/ie310go ie310go\u5f15\u7528\u4e86\u8bb8\u591a\u5f00\u6e90\u9879\u76ee\uff0c\u4e3a\u51cf\u5c11\u9879\u76ee\u5f15\u7528\u7684\u590d\u6742\u6027\uff0c\u6240\u6709\u5f15\u7528\u5230\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u90fd\u5df2\u7ecf\u590d\u5236\u5230/ie310go/forks\u76ee\u5f55\u4e0b\u3002\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u4e0b\u8f7die310go\u9879\u76ee\u7684\u6e90\u7801\u5373\u53ef\u3002","title":"\u83b7\u53d6\u6e90\u7801"},{"location":"ie310go/jj/#_4","text":"\u4e0eie310go\u914d\u5957\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ee3\u7801\u751f\u6210\u5de5\u5177i3go_codemaker\uff0c\u7528\u4e8e\u6309\u6570\u636e\u5e93\u8868\u751f\u6210db\u6a21\u5757\u9700\u8981\u7684Model\u3001Mapper\uff0croute\u6a21\u5757\u9700\u8981\u7684Service ie310go_codemaker\u4f7f\u7528c#\u5f00\u53d1\uff0c\u76ee\u524d\u53ea\u80fd\u5728windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 https://github.com/ie310mu/i3go_codemaker \u5177\u4f53\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003 \u4ee3\u7801\u751f\u6210","title":"\u4ee3\u7801\u751f\u6210"},{"location":"ie310go/logs/","text":"\u7b80\u4ecb session\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---logs\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/logs logsagent ie310go\u63d0\u4f9blogsagent\u5305\uff0c\u4f4d\u4e8e/ie310go/common/logsagent \u5176\u76ee\u7684\u662f\u7ed9\u4f7f\u7528\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u3001\u81ea\u5b9a\u4e49\u9879\u76ee\u4e2d\u7684\u65e5\u5fd7\u6a21\u5757\u7559\u4e0b\u57fa\u7840 \u521d\u59cb\u5316\u65b9\u5f0f\uff08\u4f7f\u7528beego logs\u6a21\u5757\u793a\u4f8b\uff09\uff1a //InitLogs \u65e5\u5fd7\u521d\u59cb\u5316 func InitLogs(config string) { beeLogger := logs.GetBeeLogger() beeLogger.EnableErrorStack(true) beeLogger.EnableFuncCallDepth(true) beeLogger.SetLogFuncCallDepth(3) logs.SetLogger(logs.AdapterConsole) logs.SetLogger(logs.AdapterFile, config) //\u8bbe\u7f6eie310go\u4e2ddb\u7b49\u6a21\u5757\u7684\u65e5\u5fd7\u4ee3\u7406 logsagent.SetLogger(beeLogger) } \u521d\u59cb\u5316\u540e\u901a\u8fc7logsagent\u8f93\u51fa\u65e5\u5fd7\uff0c\u5982\uff1a logsagent.Info( configFile: + configFileName) logsagent.Info( logFile: + logFileName) \u5982\u679c\u6ca1\u6709\u8c03\u7528SetLogger\uff0c\u9ed8\u8ba4\u4f7f\u7528fmt.Print\u8f93\u51fa\u4fe1\u606f \u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863 \u65e5\u5fd7\u5904\u7406 \u8fd9\u662f\u4e00\u4e2a\u7528\u6765\u5904\u7406\u65e5\u5fd7\u7684\u5e93\uff0c\u5b83\u7684\u8bbe\u8ba1\u601d\u8def\u6765\u81ea\u4e8e database/sql \uff0c\u76ee\u524d\u652f\u6301\u7684\u5f15\u64ce\u6709 file\u3001console\u3001net\u3001smtp\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1a go get github.com/astaxie/beego/logs \u5982\u4f55\u4f7f\u7528 \u901a\u7528\u65b9\u5f0f \u9996\u5148\u5f15\u5165\u5305\uff1a import ( github.com/astaxie/beego/logs ) \u7136\u540e\u6dfb\u52a0\u8f93\u51fa\u5f15\u64ce\uff08log \u652f\u6301\u540c\u65f6\u8f93\u51fa\u5230\u591a\u4e2a\u5f15\u64ce\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5 console \u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f15\u64ce\u540d\uff08\u5305\u62ec\uff1aconsole\u3001file\u3001conn\u3001smtp\u3001es\u3001multifile\uff09 logs.SetLogger( console ) \u6dfb\u52a0\u8f93\u51fa\u5f15\u64ce\u4e5f\u652f\u6301\u7b2c\u4e8c\u4e2a\u53c2\u6570,\u7528\u6765\u8868\u793a\u914d\u7f6e\u4fe1\u606f\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u770b\u4e0b\u9762\u4ecb\u7ecd\uff1a logs.SetLogger(logs.AdapterFile,`{ filename : project.log , level :7, maxlines :0, maxsize :0, daily :true, maxdays :10, color :true}`) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u903b\u8f91\u4e2d\u5f00\u59cb\u4efb\u610f\u7684\u4f7f\u7528\u4e86\uff1a package main import ( github.com/astaxie/beego/logs ) func main() { //an official log.Logger l := logs.GetLogger() l.Println( this is a message of http ) //an official log.Logger with prefix ORM logs.GetLogger( ORM ).Println( this is a message of orm ) logs.Debug( my book is bought in the year of , 2016) logs.Info( this %s cat is %v years old , yellow , 3) logs.Warn( json is a type of kv like , map[string]int{ key : 2016}) logs.Error(1024, is a very , good game ) logs.Critical( oh,crash ) } \u591a\u4e2a\u5b9e\u4f8b \u4e00\u822c\u63a8\u8350\u4f7f\u7528\u901a\u7528\u65b9\u5f0f\u8fdb\u884c\u65e5\u5fd7\uff0c\u4f46\u4f9d\u7136\u652f\u6301\u5355\u72ec\u58f0\u660e\u6765\u4f7f\u7528\u72ec\u7acb\u7684\u65e5\u5fd7 package main import ( github.com/astaxie/beego/logs ) func main() { log := logs.NewLogger() log.SetLogger(logs.AdapterConsole) log.Debug( this is a debug message ) } \u8f93\u51fa\u6587\u4ef6\u540d\u548c\u884c\u53f7 \u65e5\u5fd7\u9ed8\u8ba4\u4e0d\u8f93\u51fa\u8c03\u7528\u7684\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u884c\u53f7,\u5982\u679c\u4f60\u671f\u671b\u8f93\u51fa\u8c03\u7528\u7684\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u884c\u53f7,\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e logs.EnableFuncCallDepth(true) \u5f00\u542f\u4f20\u5165\u53c2\u6570 true,\u5173\u95ed\u4f20\u5165\u53c2\u6570 false,\u9ed8\u8ba4\u662f\u5173\u95ed\u7684. \u5982\u679c\u4f60\u7684\u5e94\u7528\u81ea\u5df1\u5c01\u88c5\u4e86\u8c03\u7528 log \u5305,\u90a3\u4e48\u9700\u8981\u8bbe\u7f6e SetLogFuncCallDepth,\u9ed8\u8ba4\u662f 2,\u4e5f\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u7684\u5c42\u7ea7,\u5982\u679c\u4f60\u5c01\u88c5\u4e86\u591a\u5c42,\u90a3\u4e48\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u8c03\u6574. logs.SetLogFuncCallDepth(3) \u5f02\u6b65\u8f93\u51fa\u65e5\u5fd7 \u4e3a\u4e86\u63d0\u5347\u6027\u80fd, \u53ef\u4ee5\u8bbe\u7f6e\u5f02\u6b65\u8f93\u51fa: logs.Async() \u5f02\u6b65\u8f93\u51fa\u5141\u8bb8\u8bbe\u7f6e\u7f13\u51b2 chan \u7684\u5927\u5c0f logs.Async(1e3) \u5f15\u64ce\u914d\u7f6e\u8bbe\u7f6e console \u547d\u4ee4\u884c\u8f93\u51fa\uff0c\u9ed8\u8ba4\u8f93\u51fa\u5230 os.Stdout \uff1a logs.SetLogger(logs.AdapterConsole, `{ level :1, color :true}`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e\uff1a - level \u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b - color \u662f\u5426\u5f00\u542f\u6253\u5370\u65e5\u5fd7\u5f69\u8272\u6253\u5370(\u9700\u73af\u5883\u652f\u6301\u5f69\u8272\u8f93\u51fa) file \u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterFile, `{ filename : test.log }`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e\uff1a - filename \u4fdd\u5b58\u7684\u6587\u4ef6\u540d - maxlines \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u884c\u6570\uff0c\u9ed8\u8ba4\u503c 1000000 - maxsize \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u9ed8\u8ba4\u503c\u662f 1 28, //256 MB - daily \u662f\u5426\u6309\u7167\u6bcf\u5929 logrotate\uff0c\u9ed8\u8ba4\u662f true - maxdays \u6587\u4ef6\u6700\u591a\u4fdd\u5b58\u591a\u5c11\u5929\uff0c\u9ed8\u8ba4\u4fdd\u5b58 7 \u5929 - rotate \u662f\u5426\u5f00\u542f logrotate\uff0c\u9ed8\u8ba4\u662f true - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b - perm \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 multifile \u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterMultiFile, `{ filename : test.log , separate :[ emergency , alert , critical , error , warning , notice , info , debug ]}`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e(\u9664 separate \u5916,\u5747\u4e0efile\u76f8\u540c)\uff1a - filename \u4fdd\u5b58\u7684\u6587\u4ef6\u540d - maxlines \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u884c\u6570\uff0c\u9ed8\u8ba4\u503c 1000000 - maxsize \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u9ed8\u8ba4\u503c\u662f 1 28, //256 MB - daily \u662f\u5426\u6309\u7167\u6bcf\u5929 logrotate\uff0c\u9ed8\u8ba4\u662f true - maxdays \u6587\u4ef6\u6700\u591a\u4fdd\u5b58\u591a\u5c11\u5929\uff0c\u9ed8\u8ba4\u4fdd\u5b58 7 \u5929 - rotate \u662f\u5426\u5f00\u542f logrotate\uff0c\u9ed8\u8ba4\u662f true - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b - perm \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - separate \u9700\u8981\u5355\u72ec\u5199\u5165\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b,\u8bbe\u7f6e\u540e\u547d\u540d\u7c7b\u4f3c test.error.log conn \u7f51\u7edc\u8f93\u51fa\uff0c\u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterConn, `{ net : tcp , addr : :7020 }`) \u4e3b\u8981\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a - reconnectOnMsg \u662f\u5426\u6bcf\u6b21\u94fe\u63a5\u90fd\u91cd\u65b0\u6253\u5f00\u94fe\u63a5\uff0c\u9ed8\u8ba4\u662f false - reconnect \u662f\u5426\u81ea\u52a8\u91cd\u65b0\u94fe\u63a5\u5730\u5740\uff0c\u9ed8\u8ba4\u662f false - net \u53d1\u5f00\u7f51\u7edc\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 tcp\u3001unix\u3001udp \u7b49 - addr \u7f51\u7edc\u94fe\u63a5\u7684\u5730\u5740 - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b smtp \u90ae\u4ef6\u53d1\u9001\uff0c\u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterMail, `{ username : beegotest@gmail.com , password : xxxxxxxx , host : smtp.gmail.com:587 , sendTos :[ xiemengjun@gmail.com ]}`) \u4e3b\u8981\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a - username smtp \u9a8c\u8bc1\u7684\u7528\u6237\u540d - password smtp \u9a8c\u8bc1\u5bc6\u7801 - host \u53d1\u9001\u7684\u90ae\u7bb1\u5730\u5740 - sendTos \u90ae\u4ef6\u9700\u8981\u53d1\u9001\u7684\u4eba\uff0c\u652f\u6301\u591a\u4e2a - subject \u53d1\u9001\u90ae\u4ef6\u7684\u6807\u9898\uff0c\u9ed8\u8ba4\u662f Diagnostic message from server - level \u65e5\u5fd7\u53d1\u9001\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b ElasticSearch \u8f93\u51fa\u5230 ElasticSearch: logs.SetLogger(logs.AdapterEs, `{ dsn : http://localhost:9200/ , level :1}`) \u7b80\u804a \u8f93\u51fa\u5230\u7b80\u804a\uff1a logs.SetLogger(logs.AdapterJianLiao, `{ authorname : xxx , title : beego , webhookurl : https://jianliao.com/xxx , redirecturl : https://jianliao.com/xxx , imageurl : https://jianliao.com/xxx , level :1}`) slack \u8f93\u51fa\u5230slack: logs.SetLogger(logs.AdapterSlack, `{ webhookurl : https://slack.com/xxx , level :1}`)","title":"logs"},{"location":"ie310go/logs/#_1","text":"session\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---logs\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/logs","title":"\u7b80\u4ecb"},{"location":"ie310go/logs/#logsagent","text":"ie310go\u63d0\u4f9blogsagent\u5305\uff0c\u4f4d\u4e8e/ie310go/common/logsagent \u5176\u76ee\u7684\u662f\u7ed9\u4f7f\u7528\u5176\u4ed6\u5f00\u6e90\u9879\u76ee\u3001\u81ea\u5b9a\u4e49\u9879\u76ee\u4e2d\u7684\u65e5\u5fd7\u6a21\u5757\u7559\u4e0b\u57fa\u7840 \u521d\u59cb\u5316\u65b9\u5f0f\uff08\u4f7f\u7528beego logs\u6a21\u5757\u793a\u4f8b\uff09\uff1a //InitLogs \u65e5\u5fd7\u521d\u59cb\u5316 func InitLogs(config string) { beeLogger := logs.GetBeeLogger() beeLogger.EnableErrorStack(true) beeLogger.EnableFuncCallDepth(true) beeLogger.SetLogFuncCallDepth(3) logs.SetLogger(logs.AdapterConsole) logs.SetLogger(logs.AdapterFile, config) //\u8bbe\u7f6eie310go\u4e2ddb\u7b49\u6a21\u5757\u7684\u65e5\u5fd7\u4ee3\u7406 logsagent.SetLogger(beeLogger) } \u521d\u59cb\u5316\u540e\u901a\u8fc7logsagent\u8f93\u51fa\u65e5\u5fd7\uff0c\u5982\uff1a logsagent.Info( configFile: + configFileName) logsagent.Info( logFile: + logFileName) \u5982\u679c\u6ca1\u6709\u8c03\u7528SetLogger\uff0c\u9ed8\u8ba4\u4f7f\u7528fmt.Print\u8f93\u51fa\u4fe1\u606f","title":"logsagent"},{"location":"ie310go/logs/#beego","text":"","title":"\u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863"},{"location":"ie310go/logs/#_2","text":"\u8fd9\u662f\u4e00\u4e2a\u7528\u6765\u5904\u7406\u65e5\u5fd7\u7684\u5e93\uff0c\u5b83\u7684\u8bbe\u8ba1\u601d\u8def\u6765\u81ea\u4e8e database/sql \uff0c\u76ee\u524d\u652f\u6301\u7684\u5f15\u64ce\u6709 file\u3001console\u3001net\u3001smtp\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1a go get github.com/astaxie/beego/logs","title":"\u65e5\u5fd7\u5904\u7406"},{"location":"ie310go/logs/#_3","text":"","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"ie310go/logs/#_4","text":"\u9996\u5148\u5f15\u5165\u5305\uff1a import ( github.com/astaxie/beego/logs ) \u7136\u540e\u6dfb\u52a0\u8f93\u51fa\u5f15\u64ce\uff08log \u652f\u6301\u540c\u65f6\u8f93\u51fa\u5230\u591a\u4e2a\u5f15\u64ce\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5 console \u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f15\u64ce\u540d\uff08\u5305\u62ec\uff1aconsole\u3001file\u3001conn\u3001smtp\u3001es\u3001multifile\uff09 logs.SetLogger( console ) \u6dfb\u52a0\u8f93\u51fa\u5f15\u64ce\u4e5f\u652f\u6301\u7b2c\u4e8c\u4e2a\u53c2\u6570,\u7528\u6765\u8868\u793a\u914d\u7f6e\u4fe1\u606f\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u770b\u4e0b\u9762\u4ecb\u7ecd\uff1a logs.SetLogger(logs.AdapterFile,`{ filename : project.log , level :7, maxlines :0, maxsize :0, daily :true, maxdays :10, color :true}`) \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u903b\u8f91\u4e2d\u5f00\u59cb\u4efb\u610f\u7684\u4f7f\u7528\u4e86\uff1a package main import ( github.com/astaxie/beego/logs ) func main() { //an official log.Logger l := logs.GetLogger() l.Println( this is a message of http ) //an official log.Logger with prefix ORM logs.GetLogger( ORM ).Println( this is a message of orm ) logs.Debug( my book is bought in the year of , 2016) logs.Info( this %s cat is %v years old , yellow , 3) logs.Warn( json is a type of kv like , map[string]int{ key : 2016}) logs.Error(1024, is a very , good game ) logs.Critical( oh,crash ) }","title":"\u901a\u7528\u65b9\u5f0f"},{"location":"ie310go/logs/#_5","text":"\u4e00\u822c\u63a8\u8350\u4f7f\u7528\u901a\u7528\u65b9\u5f0f\u8fdb\u884c\u65e5\u5fd7\uff0c\u4f46\u4f9d\u7136\u652f\u6301\u5355\u72ec\u58f0\u660e\u6765\u4f7f\u7528\u72ec\u7acb\u7684\u65e5\u5fd7 package main import ( github.com/astaxie/beego/logs ) func main() { log := logs.NewLogger() log.SetLogger(logs.AdapterConsole) log.Debug( this is a debug message ) }","title":"\u591a\u4e2a\u5b9e\u4f8b"},{"location":"ie310go/logs/#_6","text":"\u65e5\u5fd7\u9ed8\u8ba4\u4e0d\u8f93\u51fa\u8c03\u7528\u7684\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u884c\u53f7,\u5982\u679c\u4f60\u671f\u671b\u8f93\u51fa\u8c03\u7528\u7684\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u884c\u53f7,\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e logs.EnableFuncCallDepth(true) \u5f00\u542f\u4f20\u5165\u53c2\u6570 true,\u5173\u95ed\u4f20\u5165\u53c2\u6570 false,\u9ed8\u8ba4\u662f\u5173\u95ed\u7684. \u5982\u679c\u4f60\u7684\u5e94\u7528\u81ea\u5df1\u5c01\u88c5\u4e86\u8c03\u7528 log \u5305,\u90a3\u4e48\u9700\u8981\u8bbe\u7f6e SetLogFuncCallDepth,\u9ed8\u8ba4\u662f 2,\u4e5f\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u7684\u5c42\u7ea7,\u5982\u679c\u4f60\u5c01\u88c5\u4e86\u591a\u5c42,\u90a3\u4e48\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u8c03\u6574. logs.SetLogFuncCallDepth(3)","title":"\u8f93\u51fa\u6587\u4ef6\u540d\u548c\u884c\u53f7"},{"location":"ie310go/logs/#_7","text":"\u4e3a\u4e86\u63d0\u5347\u6027\u80fd, \u53ef\u4ee5\u8bbe\u7f6e\u5f02\u6b65\u8f93\u51fa: logs.Async() \u5f02\u6b65\u8f93\u51fa\u5141\u8bb8\u8bbe\u7f6e\u7f13\u51b2 chan \u7684\u5927\u5c0f logs.Async(1e3)","title":"\u5f02\u6b65\u8f93\u51fa\u65e5\u5fd7"},{"location":"ie310go/logs/#_8","text":"console \u547d\u4ee4\u884c\u8f93\u51fa\uff0c\u9ed8\u8ba4\u8f93\u51fa\u5230 os.Stdout \uff1a logs.SetLogger(logs.AdapterConsole, `{ level :1, color :true}`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e\uff1a - level \u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b - color \u662f\u5426\u5f00\u542f\u6253\u5370\u65e5\u5fd7\u5f69\u8272\u6253\u5370(\u9700\u73af\u5883\u652f\u6301\u5f69\u8272\u8f93\u51fa) file \u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterFile, `{ filename : test.log }`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e\uff1a - filename \u4fdd\u5b58\u7684\u6587\u4ef6\u540d - maxlines \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u884c\u6570\uff0c\u9ed8\u8ba4\u503c 1000000 - maxsize \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u9ed8\u8ba4\u503c\u662f 1 28, //256 MB - daily \u662f\u5426\u6309\u7167\u6bcf\u5929 logrotate\uff0c\u9ed8\u8ba4\u662f true - maxdays \u6587\u4ef6\u6700\u591a\u4fdd\u5b58\u591a\u5c11\u5929\uff0c\u9ed8\u8ba4\u4fdd\u5b58 7 \u5929 - rotate \u662f\u5426\u5f00\u542f logrotate\uff0c\u9ed8\u8ba4\u662f true - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b - perm \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 multifile \u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterMultiFile, `{ filename : test.log , separate :[ emergency , alert , critical , error , warning , notice , info , debug ]}`) \u4e3b\u8981\u7684\u53c2\u6570\u5982\u4e0b\u8bf4\u660e(\u9664 separate \u5916,\u5747\u4e0efile\u76f8\u540c)\uff1a - filename \u4fdd\u5b58\u7684\u6587\u4ef6\u540d - maxlines \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u884c\u6570\uff0c\u9ed8\u8ba4\u503c 1000000 - maxsize \u6bcf\u4e2a\u6587\u4ef6\u4fdd\u5b58\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u9ed8\u8ba4\u503c\u662f 1 28, //256 MB - daily \u662f\u5426\u6309\u7167\u6bcf\u5929 logrotate\uff0c\u9ed8\u8ba4\u662f true - maxdays \u6587\u4ef6\u6700\u591a\u4fdd\u5b58\u591a\u5c11\u5929\uff0c\u9ed8\u8ba4\u4fdd\u5b58 7 \u5929 - rotate \u662f\u5426\u5f00\u542f logrotate\uff0c\u9ed8\u8ba4\u662f true - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b - perm \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - separate \u9700\u8981\u5355\u72ec\u5199\u5165\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b,\u8bbe\u7f6e\u540e\u547d\u540d\u7c7b\u4f3c test.error.log conn \u7f51\u7edc\u8f93\u51fa\uff0c\u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterConn, `{ net : tcp , addr : :7020 }`) \u4e3b\u8981\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a - reconnectOnMsg \u662f\u5426\u6bcf\u6b21\u94fe\u63a5\u90fd\u91cd\u65b0\u6253\u5f00\u94fe\u63a5\uff0c\u9ed8\u8ba4\u662f false - reconnect \u662f\u5426\u81ea\u52a8\u91cd\u65b0\u94fe\u63a5\u5730\u5740\uff0c\u9ed8\u8ba4\u662f false - net \u53d1\u5f00\u7f51\u7edc\u94fe\u63a5\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 tcp\u3001unix\u3001udp \u7b49 - addr \u7f51\u7edc\u94fe\u63a5\u7684\u5730\u5740 - level \u65e5\u5fd7\u4fdd\u5b58\u7684\u65f6\u5019\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b smtp \u90ae\u4ef6\u53d1\u9001\uff0c\u8bbe\u7f6e\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a logs.SetLogger(logs.AdapterMail, `{ username : beegotest@gmail.com , password : xxxxxxxx , host : smtp.gmail.com:587 , sendTos :[ xiemengjun@gmail.com ]}`) \u4e3b\u8981\u7684\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a - username smtp \u9a8c\u8bc1\u7684\u7528\u6237\u540d - password smtp \u9a8c\u8bc1\u5bc6\u7801 - host \u53d1\u9001\u7684\u90ae\u7bb1\u5730\u5740 - sendTos \u90ae\u4ef6\u9700\u8981\u53d1\u9001\u7684\u4eba\uff0c\u652f\u6301\u591a\u4e2a - subject \u53d1\u9001\u90ae\u4ef6\u7684\u6807\u9898\uff0c\u9ed8\u8ba4\u662f Diagnostic message from server - level \u65e5\u5fd7\u53d1\u9001\u7684\u7ea7\u522b\uff0c\u9ed8\u8ba4\u662f Trace \u7ea7\u522b ElasticSearch \u8f93\u51fa\u5230 ElasticSearch: logs.SetLogger(logs.AdapterEs, `{ dsn : http://localhost:9200/ , level :1}`) \u7b80\u804a \u8f93\u51fa\u5230\u7b80\u804a\uff1a logs.SetLogger(logs.AdapterJianLiao, `{ authorname : xxx , title : beego , webhookurl : https://jianliao.com/xxx , redirecturl : https://jianliao.com/xxx , imageurl : https://jianliao.com/xxx , level :1}`) slack \u8f93\u51fa\u5230slack: logs.SetLogger(logs.AdapterSlack, `{ webhookurl : https://slack.com/xxx , level :1}`)","title":"\u5f15\u64ce\u914d\u7f6e\u8bbe\u7f6e"},{"location":"ie310go/mservice/","text":"docker\u955c\u50cf\u6587\u4ef6\u7ea610M\u5de6\u53f3\uff0c\u5929\u751f\u9002\u5408\u5fae\u670d\u52a1\u67b6\u6784 \u5efa\u8bae\u5f00\u53d1\u9636\u6bb5\u5bfc\u51fa\u6240\u6709service\uff0c\u4fbf\u4e8e\u4e00\u6b21\u542f\u52a8\u5c31\u53ef\u8fd0\u884c\u6240\u6709\u670d\u52a1\uff0c\u751f\u4ea7\u73af\u5883\u5219\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6309\u9700\u5bfc\u51faservice","title":"\u5fae\u670d\u52a1"},{"location":"ie310go/route/","text":"\u7b80\u4ecb db\u6a21\u5757\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b\uff0c \u4ee3\u7801\u751f\u6210 --- Service \u548c api\u5f00\u53d1 \u5df2\u57fa\u672c\u6f14\u793a\u4e86route\u6a21\u5757\u7684\u80fd\u529b\uff0c\u6b64\u5904\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd","title":"route"},{"location":"ie310go/route/#_1","text":"db\u6a21\u5757\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u80fd\u529b\uff0c \u4ee3\u7801\u751f\u6210 --- Service \u548c api\u5f00\u53d1 \u5df2\u57fa\u672c\u6f14\u793a\u4e86route\u6a21\u5757\u7684\u80fd\u529b\uff0c\u6b64\u5904\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd","title":"\u7b80\u4ecb"},{"location":"ie310go/session/","text":"\u7b80\u4ecb logs\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---session\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/session httpServer\u4e2d\u63d0\u4f9b\u5bf9session\u7684\u652f\u6301\uff08\u4f46 \u4e0d\u63a8\u8350\u4f7f\u7528 \uff0cie310go\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u81ea\u5b9a\u4e49token\u7684\u65b9\u5f0f\uff09 \u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863 session \u4ecb\u7ecd session \u6a21\u5757\u662f\u7528\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u7528\u6237\uff0csession \u6a21\u5757\u76ee\u524d\u53ea\u652f\u6301 cookie \u65b9\u5f0f\u7684\u8bf7\u6c42\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u4e0d\u652f\u6301 cookie\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u4f7f\u7528\u8be5\u6a21\u5757\u3002 session \u6a21\u5757\u53c2\u8003\u4e86 database/sql \u7684\u5f15\u64ce\u5199\u6cd5\uff0c\u91c7\u7528\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u591a\u4e2a\u5b9e\u73b0\u7684\u65b9\u5f0f\u3002\u76ee\u524d\u5b9e\u73b0\u4e86 memory\u3001file\u3001Redis \u548c MySQL \u56db\u79cd\u5b58\u50a8\u5f15\u64ce\u3002 \u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u5b89\u88c5 session\uff1a go get github.com/astaxie/beego/session session \u4f7f\u7528 \u9996\u5148\u4f60\u5fc5\u987b\u5bfc\u5165\u5305\uff1a import ( github.com/astaxie/beego/session ) \u7136\u540e\u4f60\u521d\u59cb\u5316\u4e00\u4e2a\u5168\u5c40\u7684\u53d8\u91cf\u7528\u6765\u5b58\u50a8 session \u63a7\u5236\u5668\uff1a var globalSessions *session.Manager \u63a5\u7740\u5728\u4f60\u7684\u5165\u53e3\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u6570\u636e\uff1a func init() { sessionConfig := session.ManagerConfig{ CookieName: gosessionid , EnableSetCookie: true, Gclifetime:3600, Maxlifetime: 3600, Secure: false, CookieLifeTime: 3600, ProviderConfig: ./tmp , } globalSessions, _ = session.NewManager( memory ,sessionConfig) go globalSessions.GC() } NewManager \u51fd\u6570\u7684\u53c2\u6570\u7684\u51fd\u6570\u5982\u4e0b\u6240\u793a \u5f15\u64ce\u540d\u5b57\uff0c\u53ef\u4ee5\u662f memory\u3001file\u3001mysql \u6216 redis\u3002 \u4e00\u4e2a JSON \u5b57\u7b26\u4e32,\u4f20\u5165 Manager \u7684\u914d\u7f6e\u4fe1\u606f cookieName: \u5ba2\u6237\u7aef\u5b58\u50a8 cookie \u7684\u540d\u5b57\u3002 enableSetCookie,omitempty: \u662f\u5426\u5f00\u542f SetCookie,omitempty \u8fd9\u4e2a\u8bbe\u7f6e gclifetime: \u89e6\u53d1 GC \u7684\u65f6\u95f4\u3002 maxLifetime: \u670d\u52a1\u5668\u7aef\u5b58\u50a8\u7684\u6570\u636e\u7684\u8fc7\u671f\u65f6\u95f4 secure: \u662f\u5426\u5f00\u542f HTTPS\uff0c\u5728 cookie \u8bbe\u7f6e\u7684\u65f6\u5019\u6709 cookie.Secure \u8bbe\u7f6e\u3002 sessionIDHashFunc: sessionID \u751f\u4ea7\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f sha1 \u7b97\u6cd5\u3002 sessionIDHashKey: hash \u7b97\u6cd5\u4e2d\u7684 key\u3002 cookieLifeTime: \u5ba2\u6237\u7aef\u5b58\u50a8\u7684 cookie \u7684\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\u662f 0\uff0c\u5373\u6d4f\u89c8\u5668\u751f\u547d\u5468\u671f\u3002 providerConfig: \u914d\u7f6e\u4fe1\u606f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u5f15\u64ce\u8bbe\u7f6e\u4e0d\u540c\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u770b\u4e0b\u9762\u7684\u5f15\u64ce\u8bbe\u7f6e \u6700\u540e\u6211\u4eec\u7684\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u51fd\u6570\u4e2d\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\uff1a func login(w http.ResponseWriter, r *http.Request) { sess, _ := globalSessions.SessionStart(w, r) defer sess.SessionRelease(w) username := sess.Get( username ) if r.Method == GET { t, _ := template.ParseFiles( login.gtpl ) t.Execute(w, nil) } else { sess.Set( username , r.Form[ username ]) } } globalSessions \u6709\u591a\u4e2a\u51fd\u6570\u5982\u4e0b\u6240\u793a\uff1a SessionStart \u6839\u636e\u5f53\u524d\u8bf7\u6c42\u8fd4\u56de session \u5bf9\u8c61 SessionDestroy \u9500\u6bc1\u5f53\u524d session \u5bf9\u8c61 SessionRegenerateId \u91cd\u65b0\u751f\u6210 sessionID GetActiveSession \u83b7\u53d6\u5f53\u524d\u6d3b\u8dc3\u7684 session \u7528\u6237 SetHashFunc \u8bbe\u7f6e sessionID \u751f\u6210\u7684\u51fd\u6570 SetSecure \u8bbe\u7f6e\u662f\u5426\u5f00\u542f cookie \u7684 Secure \u8bbe\u7f6e \u8fd4\u56de\u7684 session \u5bf9\u8c61\u662f\u4e00\u4e2a Interface\uff0c\u5305\u542b\u4e0b\u9762\u7684\u65b9\u6cd5 Set(key, value interface{}) error Get(key interface{}) interface{} Delete(key interface{}) error SessionID() string SessionRelease() Flush() error \u5f15\u64ce\u8bbe\u7f6e \u4e0a\u9762\u5df2\u7ecf\u5c55\u793a\u4e86 memory \u7684\u8bbe\u7f6e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u4e0b\u5176\u4ed6\u4e09\u79cd\u5f15\u64ce\u7684\u8bbe\u7f6e\u65b9\u5f0f\uff1a mysql \u5176\u4ed6\u53c2\u6570\u4e00\u6837\uff0c\u53ea\u662f\u7b2c\u56db\u4e2a\u53c2\u6570\u914d\u7f6e\u8bbe\u7f6e\u5982\u4e0b\u6240\u793a\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u53c2\u8003 mysql \uff1a username:password@protocol(address)/dbname?param=value redis \u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u8868\u793a\u94fe\u63a5\u7684\u5730\u5740\uff0c\u8fde\u63a5\u6c60\uff0c\u8bbf\u95ee\u5bc6\u7801\uff0c\u6ca1\u6709\u4fdd\u6301\u4e3a\u7a7a\uff1a \u6ce8\u610f\uff1a\u82e5\u4f7f\u7528redis\u7b49\u5f15\u64ce\u4f5c\u4e3asession backend\uff0c\u8bf7\u5728\u4f7f\u7528\u524d\u5bfc\u5165 _ \"github.com/astaxie/beego/session/redis\" \u5426\u5219\u4f1a\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u4f7f\u7528\u5176\u4ed6\u5f15\u64ce\u65f6\u4e5f\u662f\u540c\u7406\u3002 127.0.0.1:6379,100,astaxie file \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff0c\u8868\u793a\u9700\u8981\u4fdd\u5b58\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u662f\u4e24\u7ea7\u76ee\u5f55\u65b0\u5efa\u6587\u4ef6\uff0c\u4f8b\u5982 sessionID \u662f xsnkjklkjjkh27hjh78908 \uff0c\u90a3\u4e48\u76ee\u5f55\u6587\u4ef6\u5e94\u8be5\u662f ./tmp/x/s/xsnkjklkjjkh27hjh78908 \uff1a ./tmp \u5982\u4f55\u521b\u5efa\u81ea\u5df1\u7684\u5f15\u64ce \u5728\u5f00\u53d1\u5e94\u7528\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5b9e\u73b0\u81ea\u5df1\u7684 session \u5f15\u64ce\uff0cbeego \u7684\u8fd9\u4e2a session \u6a21\u5757\u8bbe\u8ba1\u7684\u65f6\u5019\u5c31\u662f\u91c7\u7528\u4e86 interface\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u5b9e\u73b0\u4efb\u610f\u7684\u5f15\u64ce\uff0c\u4f8b\u5982 memcache \u7684\u5f15\u64ce\u3002 type SessionStore interface { Set(key, value interface{}) error //set session value Get(key interface{}) interface{} //get session value Delete(key interface{}) error //delete session value SessionID() string //back current sessionID SessionRelease() // release the resource save data to provider Flush() error //delete all data } type Provider interface { SessionInit(maxlifetime int64, savePath string) error SessionRead(sid string) (SessionStore, error) SessionExist(sid string) bool SessionRegenerate(oldsid, sid string) (SessionStore, error) SessionDestroy(sid string) error SessionAll() int //get all active session SessionGC() } \u6700\u540e\u9700\u8981\u6ce8\u518c\u81ea\u5df1\u5199\u7684\u5f15\u64ce\uff1a func init() { Register( own , ownadaper) }","title":"session"},{"location":"ie310go/session/#_1","text":"logs\u6a21\u5757\u5f15\u7528\u81eabeego\uff0c\u5177\u4f53\u4f7f\u7528\u53ef\u53c2\u8003 beego\u6a21\u5757---session\u6a21\u5757 \u6ce8\u610f\uff0cimport\u8def\u5f84\u4f7f\u7528 github.com/ie310mu/ie310go/session httpServer\u4e2d\u63d0\u4f9b\u5bf9session\u7684\u652f\u6301\uff08\u4f46 \u4e0d\u63a8\u8350\u4f7f\u7528 \uff0cie310go\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u81ea\u5b9a\u4e49token\u7684\u65b9\u5f0f\uff09","title":"\u7b80\u4ecb"},{"location":"ie310go/session/#beego","text":"","title":"\u4ee5\u4e0b\u5185\u5bb9\u6458\u53d6\u81eabeego\u6587\u6863"},{"location":"ie310go/session/#session","text":"session \u6a21\u5757\u662f\u7528\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u7528\u6237\uff0csession \u6a21\u5757\u76ee\u524d\u53ea\u652f\u6301 cookie \u65b9\u5f0f\u7684\u8bf7\u6c42\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u4e0d\u652f\u6301 cookie\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u4f7f\u7528\u8be5\u6a21\u5757\u3002 session \u6a21\u5757\u53c2\u8003\u4e86 database/sql \u7684\u5f15\u64ce\u5199\u6cd5\uff0c\u91c7\u7528\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u591a\u4e2a\u5b9e\u73b0\u7684\u65b9\u5f0f\u3002\u76ee\u524d\u5b9e\u73b0\u4e86 memory\u3001file\u3001Redis \u548c MySQL \u56db\u79cd\u5b58\u50a8\u5f15\u64ce\u3002 \u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u5b89\u88c5 session\uff1a go get github.com/astaxie/beego/session","title":"session \u4ecb\u7ecd"},{"location":"ie310go/session/#session_1","text":"\u9996\u5148\u4f60\u5fc5\u987b\u5bfc\u5165\u5305\uff1a import ( github.com/astaxie/beego/session ) \u7136\u540e\u4f60\u521d\u59cb\u5316\u4e00\u4e2a\u5168\u5c40\u7684\u53d8\u91cf\u7528\u6765\u5b58\u50a8 session \u63a7\u5236\u5668\uff1a var globalSessions *session.Manager \u63a5\u7740\u5728\u4f60\u7684\u5165\u53e3\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u6570\u636e\uff1a func init() { sessionConfig := session.ManagerConfig{ CookieName: gosessionid , EnableSetCookie: true, Gclifetime:3600, Maxlifetime: 3600, Secure: false, CookieLifeTime: 3600, ProviderConfig: ./tmp , } globalSessions, _ = session.NewManager( memory ,sessionConfig) go globalSessions.GC() } NewManager \u51fd\u6570\u7684\u53c2\u6570\u7684\u51fd\u6570\u5982\u4e0b\u6240\u793a \u5f15\u64ce\u540d\u5b57\uff0c\u53ef\u4ee5\u662f memory\u3001file\u3001mysql \u6216 redis\u3002 \u4e00\u4e2a JSON \u5b57\u7b26\u4e32,\u4f20\u5165 Manager \u7684\u914d\u7f6e\u4fe1\u606f cookieName: \u5ba2\u6237\u7aef\u5b58\u50a8 cookie \u7684\u540d\u5b57\u3002 enableSetCookie,omitempty: \u662f\u5426\u5f00\u542f SetCookie,omitempty \u8fd9\u4e2a\u8bbe\u7f6e gclifetime: \u89e6\u53d1 GC \u7684\u65f6\u95f4\u3002 maxLifetime: \u670d\u52a1\u5668\u7aef\u5b58\u50a8\u7684\u6570\u636e\u7684\u8fc7\u671f\u65f6\u95f4 secure: \u662f\u5426\u5f00\u542f HTTPS\uff0c\u5728 cookie \u8bbe\u7f6e\u7684\u65f6\u5019\u6709 cookie.Secure \u8bbe\u7f6e\u3002 sessionIDHashFunc: sessionID \u751f\u4ea7\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f sha1 \u7b97\u6cd5\u3002 sessionIDHashKey: hash \u7b97\u6cd5\u4e2d\u7684 key\u3002 cookieLifeTime: \u5ba2\u6237\u7aef\u5b58\u50a8\u7684 cookie \u7684\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\u662f 0\uff0c\u5373\u6d4f\u89c8\u5668\u751f\u547d\u5468\u671f\u3002 providerConfig: \u914d\u7f6e\u4fe1\u606f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u5f15\u64ce\u8bbe\u7f6e\u4e0d\u540c\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u770b\u4e0b\u9762\u7684\u5f15\u64ce\u8bbe\u7f6e \u6700\u540e\u6211\u4eec\u7684\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u51fd\u6570\u4e2d\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\uff1a func login(w http.ResponseWriter, r *http.Request) { sess, _ := globalSessions.SessionStart(w, r) defer sess.SessionRelease(w) username := sess.Get( username ) if r.Method == GET { t, _ := template.ParseFiles( login.gtpl ) t.Execute(w, nil) } else { sess.Set( username , r.Form[ username ]) } } globalSessions \u6709\u591a\u4e2a\u51fd\u6570\u5982\u4e0b\u6240\u793a\uff1a SessionStart \u6839\u636e\u5f53\u524d\u8bf7\u6c42\u8fd4\u56de session \u5bf9\u8c61 SessionDestroy \u9500\u6bc1\u5f53\u524d session \u5bf9\u8c61 SessionRegenerateId \u91cd\u65b0\u751f\u6210 sessionID GetActiveSession \u83b7\u53d6\u5f53\u524d\u6d3b\u8dc3\u7684 session \u7528\u6237 SetHashFunc \u8bbe\u7f6e sessionID \u751f\u6210\u7684\u51fd\u6570 SetSecure \u8bbe\u7f6e\u662f\u5426\u5f00\u542f cookie \u7684 Secure \u8bbe\u7f6e \u8fd4\u56de\u7684 session \u5bf9\u8c61\u662f\u4e00\u4e2a Interface\uff0c\u5305\u542b\u4e0b\u9762\u7684\u65b9\u6cd5 Set(key, value interface{}) error Get(key interface{}) interface{} Delete(key interface{}) error SessionID() string SessionRelease() Flush() error","title":"session \u4f7f\u7528"},{"location":"ie310go/session/#_2","text":"\u4e0a\u9762\u5df2\u7ecf\u5c55\u793a\u4e86 memory \u7684\u8bbe\u7f6e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u4e0b\u5176\u4ed6\u4e09\u79cd\u5f15\u64ce\u7684\u8bbe\u7f6e\u65b9\u5f0f\uff1a mysql \u5176\u4ed6\u53c2\u6570\u4e00\u6837\uff0c\u53ea\u662f\u7b2c\u56db\u4e2a\u53c2\u6570\u914d\u7f6e\u8bbe\u7f6e\u5982\u4e0b\u6240\u793a\uff0c\u8be6\u7ec6\u7684\u914d\u7f6e\u8bf7\u53c2\u8003 mysql \uff1a username:password@protocol(address)/dbname?param=value redis \u914d\u7f6e\u6587\u4ef6\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff0c\u8868\u793a\u94fe\u63a5\u7684\u5730\u5740\uff0c\u8fde\u63a5\u6c60\uff0c\u8bbf\u95ee\u5bc6\u7801\uff0c\u6ca1\u6709\u4fdd\u6301\u4e3a\u7a7a\uff1a \u6ce8\u610f\uff1a\u82e5\u4f7f\u7528redis\u7b49\u5f15\u64ce\u4f5c\u4e3asession backend\uff0c\u8bf7\u5728\u4f7f\u7528\u524d\u5bfc\u5165 _ \"github.com/astaxie/beego/session/redis\" \u5426\u5219\u4f1a\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u4f7f\u7528\u5176\u4ed6\u5f15\u64ce\u65f6\u4e5f\u662f\u540c\u7406\u3002 127.0.0.1:6379,100,astaxie file \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff0c\u8868\u793a\u9700\u8981\u4fdd\u5b58\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u662f\u4e24\u7ea7\u76ee\u5f55\u65b0\u5efa\u6587\u4ef6\uff0c\u4f8b\u5982 sessionID \u662f xsnkjklkjjkh27hjh78908 \uff0c\u90a3\u4e48\u76ee\u5f55\u6587\u4ef6\u5e94\u8be5\u662f ./tmp/x/s/xsnkjklkjjkh27hjh78908 \uff1a ./tmp","title":"\u5f15\u64ce\u8bbe\u7f6e"},{"location":"ie310go/session/#_3","text":"\u5728\u5f00\u53d1\u5e94\u7528\u4e2d\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5b9e\u73b0\u81ea\u5df1\u7684 session \u5f15\u64ce\uff0cbeego \u7684\u8fd9\u4e2a session \u6a21\u5757\u8bbe\u8ba1\u7684\u65f6\u5019\u5c31\u662f\u91c7\u7528\u4e86 interface\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u5b9e\u73b0\u4efb\u610f\u7684\u5f15\u64ce\uff0c\u4f8b\u5982 memcache \u7684\u5f15\u64ce\u3002 type SessionStore interface { Set(key, value interface{}) error //set session value Get(key interface{}) interface{} //get session value Delete(key interface{}) error //delete session value SessionID() string //back current sessionID SessionRelease() // release the resource save data to provider Flush() error //delete all data } type Provider interface { SessionInit(maxlifetime int64, savePath string) error SessionRead(sid string) (SessionStore, error) SessionExist(sid string) bool SessionRegenerate(oldsid, sid string) (SessionStore, error) SessionDestroy(sid string) error SessionAll() int //get all active session SessionGC() } \u6700\u540e\u9700\u8981\u6ce8\u518c\u81ea\u5df1\u5199\u7684\u5f15\u64ce\uff1a func init() { Register( own , ownadaper) }","title":"\u5982\u4f55\u521b\u5efa\u81ea\u5df1\u7684\u5f15\u64ce"},{"location":"ie310go/start/","text":"\u76ee\u6807 \u6211\u4eec\u8ba1\u5212\u5f00\u53d1\u4e00\u4e2a\u6781\u7b80web\u9875\u9762\uff0c\u6bcf\u96941s\uff0c\u4ece\u540e\u7aef\u63a5\u53e3\u83b7\u53d6\u670d\u52a1\u5668\u7684\u6700\u65b0\u65f6\u95f4\u5e76\u663e\u793a\u5728\u9875\u9762\u4e0a\u3002 \u5b8c\u6210\u8fd9\u4e9b\uff0c\u53ea\u9700\u8981\u5c11\u91cf\u4ee3\u7801\u5373\u53ef\u3002 \u524d\u63d0 \u60a8\u5df2\u7ecf\u6309\u524d\u4e00\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u4e0b\u8f7d\u4e86ie310go\u7684\u6e90\u7801\uff0c\u5e76\u786e\u4fdd\u6e90\u7801\u76ee\u5f55\u662f\uff1a {yourGoPath}/src/github.com/ie310mu \u6b64\u793a\u4f8b\u9700\u8981\u4f7f\u7528\u5230 jQuery \u548c\u4e00\u4e2a\u57fa\u7840js\u6587\u4ef6 base.js \uff0c \u53f3\u952e\u53e6\u5b58\u4e3a \u5373\u53ef\u4e0b\u8f7d\u3002 \u521b\u5efa\u9879\u76ee \u521b\u5efa\u76ee\u5f55\uff1a{yourGoPath}/src/i3go_t001\uff0c\u5e76\u5c06\u521a\u624d\u4e0b\u8f7d\u7684\u4e24\u4e2a\u6587\u4ef6jquery.min.js\u3001base.js\u653e\u8fdb\u53bb\u5907\u7528\u3002 \u52a8\u6001\u63a5\u53e3 \u5728i3go_t001\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u6587\u4ef6main.go\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a package main import ( time github.com/ie310mu/ie310go github.com/ie310mu/ie310go/common/convert github.com/ie310mu/ie310go/common/dir github.com/ie310mu/ie310go/route ) func main() { httpConfig := route.ServerHTTPConfig{Port: 8103 , ServiceSuffix: goss , Jsonp: true, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath()} srv := route.NewServerHTTP(httpConfig, httpServer ) srv.RegisterService( TimeService{}) route.RegisterServer(srv) ie310go.Run(nil) } //TimeService .. type TimeService struct { route.BaseService } //GetServerTime .. func (s TimeService) GetServerTime(args *route.ServiceArgs) string { now := time.Now() str := convert.DateTimeWithSecToStr(now) return str } \u9759\u6001\u7f51\u9875\u6587\u4ef6 \u5728i3go_t001\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u6587\u4ef6index.html\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a !DOCTYPE html html head /head body div id= serverTime /div script src= /jquery.min.js /script script src= /base.js /script script getServerTime(); function getServerTime() { beginInvokeJsonService( timeService.goss , getServerTime , {}, function (e) { $( #serverTime ).html(e.data); setTimeout(function () { getServerTime(); }, 1000); }, invokeServiceError); } /script /body /html \u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801 i3go_t001.rar \u542f\u52a8 \u5728i3go_t001\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4\uff1a\uff08\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528go run main.go\uff0c\u56e0\u4e3a\u90a3\u6837\u8fd0\u884c\u76ee\u5f55\u662f\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\uff0c\u4f1a\u8bbf\u95ee\u4e0d\u5230\u7f51\u9875\u6587\u4ef6\uff09 go build main.go main \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u5730\u5740 http://127.0.0.1:8103/","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"ie310go/start/#_1","text":"\u6211\u4eec\u8ba1\u5212\u5f00\u53d1\u4e00\u4e2a\u6781\u7b80web\u9875\u9762\uff0c\u6bcf\u96941s\uff0c\u4ece\u540e\u7aef\u63a5\u53e3\u83b7\u53d6\u670d\u52a1\u5668\u7684\u6700\u65b0\u65f6\u95f4\u5e76\u663e\u793a\u5728\u9875\u9762\u4e0a\u3002 \u5b8c\u6210\u8fd9\u4e9b\uff0c\u53ea\u9700\u8981\u5c11\u91cf\u4ee3\u7801\u5373\u53ef\u3002","title":"\u76ee\u6807"},{"location":"ie310go/start/#_2","text":"\u60a8\u5df2\u7ecf\u6309\u524d\u4e00\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u4e0b\u8f7d\u4e86ie310go\u7684\u6e90\u7801\uff0c\u5e76\u786e\u4fdd\u6e90\u7801\u76ee\u5f55\u662f\uff1a {yourGoPath}/src/github.com/ie310mu \u6b64\u793a\u4f8b\u9700\u8981\u4f7f\u7528\u5230 jQuery \u548c\u4e00\u4e2a\u57fa\u7840js\u6587\u4ef6 base.js \uff0c \u53f3\u952e\u53e6\u5b58\u4e3a \u5373\u53ef\u4e0b\u8f7d\u3002","title":"\u524d\u63d0"},{"location":"ie310go/start/#_3","text":"\u521b\u5efa\u76ee\u5f55\uff1a{yourGoPath}/src/i3go_t001\uff0c\u5e76\u5c06\u521a\u624d\u4e0b\u8f7d\u7684\u4e24\u4e2a\u6587\u4ef6jquery.min.js\u3001base.js\u653e\u8fdb\u53bb\u5907\u7528\u3002","title":"\u521b\u5efa\u9879\u76ee"},{"location":"ie310go/start/#_4","text":"\u5728i3go_t001\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u6587\u4ef6main.go\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a package main import ( time github.com/ie310mu/ie310go github.com/ie310mu/ie310go/common/convert github.com/ie310mu/ie310go/common/dir github.com/ie310mu/ie310go/route ) func main() { httpConfig := route.ServerHTTPConfig{Port: 8103 , ServiceSuffix: goss , Jsonp: true, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath()} srv := route.NewServerHTTP(httpConfig, httpServer ) srv.RegisterService( TimeService{}) route.RegisterServer(srv) ie310go.Run(nil) } //TimeService .. type TimeService struct { route.BaseService } //GetServerTime .. func (s TimeService) GetServerTime(args *route.ServiceArgs) string { now := time.Now() str := convert.DateTimeWithSecToStr(now) return str }","title":"\u52a8\u6001\u63a5\u53e3"},{"location":"ie310go/start/#_5","text":"\u5728i3go_t001\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u6587\u4ef6index.html\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a !DOCTYPE html html head /head body div id= serverTime /div script src= /jquery.min.js /script script src= /base.js /script script getServerTime(); function getServerTime() { beginInvokeJsonService( timeService.goss , getServerTime , {}, function (e) { $( #serverTime ).html(e.data); setTimeout(function () { getServerTime(); }, 1000); }, invokeServiceError); } /script /body /html","title":"\u9759\u6001\u7f51\u9875\u6587\u4ef6"},{"location":"ie310go/start/#_6","text":"i3go_t001.rar","title":"\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801"},{"location":"ie310go/start/#_7","text":"\u5728i3go_t001\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4\uff1a\uff08\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528go run main.go\uff0c\u56e0\u4e3a\u90a3\u6837\u8fd0\u884c\u76ee\u5f55\u662f\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\uff0c\u4f1a\u8bbf\u95ee\u4e0d\u5230\u7f51\u9875\u6587\u4ef6\uff09 go build main.go main \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165\u5730\u5740 http://127.0.0.1:8103/","title":"\u542f\u52a8"},{"location":"ie310go/static/","text":"\u9ed8\u8ba4\u5904\u7406 \u5728\u521b\u5efahttpServer\u65f6\uff0c\u6307\u5b9aServeStaticFunc\u3001DefaultStaticDir\u5373\u53ef\u5b9e\u73b0\u5bf9\u9759\u6001\u6587\u4ef6\u7684\u4ee3\u7406\u529f\u80fd\uff1a func main() { httpConfig := route.ServerHTTPConfig{ //.... StaticDirs: map[string]string{ /this : D:/abc , /zkb : F:/ie310.code/011.ZKB/zkb/zkb , }, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath(), } //......... } ServeStaticFunc\uff1a\u9759\u6001\u6587\u4ef6\u5904\u7406\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528route.DefaultServeStatic\u5373\u53ef\u3002 \u6b64\u51fd\u6570\u5b9a\u4e49\u5728ie310go.route\u5305\u4e0b\uff0c\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5904\u7406\u8bf7\u6c42\u8def\u5f84\uff0c\u770b\u662f\u5426\u547d\u4e2dStaticDirs\u4e2d\u6307\u5b9a\u7684\u524d\u7f00\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u53bb\u5bf9\u5e94\u7684\u76ee\u5f55\u68c0\u67e5\u80fd\u5426\u547d\u4e2d\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u547d\u4e2d\u5219\u8f93\u51fa\u5e76\u9000\u51fa\u5904\u7406 StaticDirs\u4e2d\u672a\u547d\u4e2d\uff0c\u5224\u65ad\u8def\u5f84\u4e2d\u662f\u5426\u5305\u542bService.goss\uff08goss\u662f\u914d\u7f6e\u7684\u53ef\u53d8\u5316\uff09\uff0c\u4e0d\u5305\u542b\u65f6\u8ba4\u4e3a\u662f\u4e00\u4e2a\u9759\u6001\u6587\u4ef6\u8bf7\u6c42 \u6b64\u65f6\u53bbDefaultStaticDir\u91cc\u9762\u67e5\u627e\u662f\u5426\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u6709\u5219\u8f93\u51fa \u547d\u4e2d\u5931\u8d25\uff0c\u8fdb\u884c\u6b63\u5e38\u7684api\u5904\u7406\u903b\u8f91 api\u547d\u4e2d\u5931\u8d25\uff0c\u8fd4\u56de 404 page not found \u81ea\u5b9a\u4e49 route.DefaultServeStatic\u63d0\u4f9b\u9ed8\u8ba4\u5904\u7406\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u9700\u6c42\uff0c\u53ef\u81ea\u5b9a\u4e49\u5904\u7406\u51fd\u6570\u5e76\u8d4b\u503c\u7ed9ServerHTTPConfig.ServeStaticFunc \u6743\u9650\u6821\u9a8c route.DefaultServeStatic\u4e0d\u63d0\u4f9b\u6743\u9650\u6821\u9a8c\uff0c\u53ea\u8981\u6587\u4ef6\u547d\u4e2d\u5c31\u4f1a\u8fd4\u56de\uff0c\u5982\u679c\u9700\u8981\u6743\u9650\u5904\u7406\uff0c\u5219\u9700\u8981\u81ea\u5904\u7406\u51fd\u6570","title":"\u9759\u6001\u6587\u4ef6\u4ee3\u7406"},{"location":"ie310go/static/#_1","text":"\u5728\u521b\u5efahttpServer\u65f6\uff0c\u6307\u5b9aServeStaticFunc\u3001DefaultStaticDir\u5373\u53ef\u5b9e\u73b0\u5bf9\u9759\u6001\u6587\u4ef6\u7684\u4ee3\u7406\u529f\u80fd\uff1a func main() { httpConfig := route.ServerHTTPConfig{ //.... StaticDirs: map[string]string{ /this : D:/abc , /zkb : F:/ie310.code/011.ZKB/zkb/zkb , }, ServeStaticFunc: route.DefaultServeStatic, DefaultStaticDir: dir.GetCurrentPath(), } //......... } ServeStaticFunc\uff1a\u9759\u6001\u6587\u4ef6\u5904\u7406\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528route.DefaultServeStatic\u5373\u53ef\u3002 \u6b64\u51fd\u6570\u5b9a\u4e49\u5728ie310go.route\u5305\u4e0b\uff0c\u5904\u7406\u89c4\u5219\u5982\u4e0b\uff1a \u5904\u7406\u8bf7\u6c42\u8def\u5f84\uff0c\u770b\u662f\u5426\u547d\u4e2dStaticDirs\u4e2d\u6307\u5b9a\u7684\u524d\u7f00\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u53bb\u5bf9\u5e94\u7684\u76ee\u5f55\u68c0\u67e5\u80fd\u5426\u547d\u4e2d\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u547d\u4e2d\u5219\u8f93\u51fa\u5e76\u9000\u51fa\u5904\u7406 StaticDirs\u4e2d\u672a\u547d\u4e2d\uff0c\u5224\u65ad\u8def\u5f84\u4e2d\u662f\u5426\u5305\u542bService.goss\uff08goss\u662f\u914d\u7f6e\u7684\u53ef\u53d8\u5316\uff09\uff0c\u4e0d\u5305\u542b\u65f6\u8ba4\u4e3a\u662f\u4e00\u4e2a\u9759\u6001\u6587\u4ef6\u8bf7\u6c42 \u6b64\u65f6\u53bbDefaultStaticDir\u91cc\u9762\u67e5\u627e\u662f\u5426\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u6709\u5219\u8f93\u51fa \u547d\u4e2d\u5931\u8d25\uff0c\u8fdb\u884c\u6b63\u5e38\u7684api\u5904\u7406\u903b\u8f91 api\u547d\u4e2d\u5931\u8d25\uff0c\u8fd4\u56de 404 page not found","title":"\u9ed8\u8ba4\u5904\u7406"},{"location":"ie310go/static/#_2","text":"route.DefaultServeStatic\u63d0\u4f9b\u9ed8\u8ba4\u5904\u7406\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u9700\u6c42\uff0c\u53ef\u81ea\u5b9a\u4e49\u5904\u7406\u51fd\u6570\u5e76\u8d4b\u503c\u7ed9ServerHTTPConfig.ServeStaticFunc","title":"\u81ea\u5b9a\u4e49"},{"location":"ie310go/static/#_3","text":"route.DefaultServeStatic\u4e0d\u63d0\u4f9b\u6743\u9650\u6821\u9a8c\uff0c\u53ea\u8981\u6587\u4ef6\u547d\u4e2d\u5c31\u4f1a\u8fd4\u56de\uff0c\u5982\u679c\u9700\u8981\u6743\u9650\u5904\u7406\uff0c\u5219\u9700\u8981\u81ea\u5904\u7406\u51fd\u6570","title":"\u6743\u9650\u6821\u9a8c"},{"location":"ie310go/tcp/","text":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1 \u4ee3\u7801\u6587\u4ef6 ie310go/ie310goserver_test.go Test\u65b9\u6cd5TestRun \u5728vscode\u4e2ddebug test\u6b64\u65b9\u6cd5\uff0c\u53ef\u9ed8\u8ba4\u542f\u52a8\u591a\u4e2a\u670d\u52a1\u5668 \u670d\u52a1\u5668\u521d\u59cb\u5316\u4ee3\u7801\u67e5\u770b ie310go/route/testservice.go\uff0c\u65b9\u6cd5 registerTestServers \u8c03\u7528\u65b9\u5f0f \u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"tcp"},{"location":"ie310go/tcp/#_1","text":"\u4ee3\u7801\u6587\u4ef6 ie310go/ie310goserver_test.go Test\u65b9\u6cd5TestRun \u5728vscode\u4e2ddebug test\u6b64\u65b9\u6cd5\uff0c\u53ef\u9ed8\u8ba4\u542f\u52a8\u591a\u4e2a\u670d\u52a1\u5668 \u670d\u52a1\u5668\u521d\u59cb\u5316\u4ee3\u7801\u67e5\u770b ie310go/route/testservice.go\uff0c\u65b9\u6cd5 registerTestServers","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1"},{"location":"ie310go/tcp/#_2","text":"\u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"\u8c03\u7528\u65b9\u5f0f"},{"location":"ie310go/thrift/","text":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1 \u53c2\u8003 tcp \u8c03\u7528\u65b9\u5f0f c#\u8c03\u7528\u793a\u4f8b\uff0c\u53c2\u8003\uff1aie310go/clienttest/Ie310goThriftTest_csharp.rar","title":"thrift"},{"location":"ie310go/thrift/#_1","text":"\u53c2\u8003 tcp","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1"},{"location":"ie310go/thrift/#_2","text":"c#\u8c03\u7528\u793a\u4f8b\uff0c\u53c2\u8003\uff1aie310go/clienttest/Ie310goThriftTest_csharp.rar","title":"\u8c03\u7528\u65b9\u5f0f"},{"location":"ie310go/ws/","text":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1 \u53c2\u8003 tcp \u8c03\u7528\u65b9\u5f0f \u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09 js\u8c03\u7528\u793a\u4f8b function WebSocketTest() { var ws = new WebSocket( ws://127.0.0.1:8023 ); ws.onopen = function() { setTimeout(function (){ws.send( { id : 1 , method : ethrpc_invoke , params :[{ m : getList , sessionId : CADD3638BF8C95718BEAD1852DE62804 , service : gwYqsbService }]} );},1000); }; ws.onmessage = function (evt) { var received_msg = evt.data; console.info(evt.data); }; ws.onclose = function() { }; ws.onerror = function(evt) { console.info(evt); }; } WebSocketTest();","title":"WebSocket"},{"location":"ie310go/ws/#_1","text":"\u53c2\u8003 tcp","title":"\u542f\u52a8\u6d4b\u8bd5\u670d\u52a1"},{"location":"ie310go/ws/#_2","text":"\u53ef\u4ee5\u7528route.Client\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff0c\u53c2\u8003\uff1aie310go/clienttest/ie310go_client_test.go \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u81ea\u884c\u7f16\u7801\u8c03\u7528\u3001\u89e3\u6790\uff08\u6570\u636e\u683c\u5f0f\u5f85\u8865\u5145\uff09","title":"\u8c03\u7528\u65b9\u5f0f"},{"location":"ie310go/ws/#js","text":"function WebSocketTest() { var ws = new WebSocket( ws://127.0.0.1:8023 ); ws.onopen = function() { setTimeout(function (){ws.send( { id : 1 , method : ethrpc_invoke , params :[{ m : getList , sessionId : CADD3638BF8C95718BEAD1852DE62804 , service : gwYqsbService }]} );},1000); }; ws.onmessage = function (evt) { var received_msg = evt.data; console.info(evt.data); }; ws.onclose = function() { }; ws.onerror = function(evt) { console.info(evt); }; } WebSocketTest();","title":"js\u8c03\u7528\u793a\u4f8b"},{"location":"ie310go/xys/","text":"\u7b80\u4ecb ie310go\u9664\u4e86\u63d0\u4f9bhttp\u534f\u8bae\u7684server\u5916\uff0c\u8fd8\u63d0\u4f9btcp\u3001ipc\u3001websocket\u3001grpc\u3001thrift\u7b49\u534f\u8bae\u7684\u652f\u6301 \u4e3a\u4e86\u7b80\u5316\u4f7f\u7528\uff0c\u8fd9\u4e9b\u534f\u8bae\u7684\u53c2\u6570\u4f20\u9012\u3001\u8fd4\u56de\u503c\u90fd\u662f\u901a\u8fc7json\u5b57\u7b26\u4e32\uff0c\u5bf9json\u5b57\u7b26\u4e32\u7684\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u53ef\u80fd\u4f1a\u5e26\u6765\u6027\u80fd\u7684\u635f\u5931","title":"\u7b80\u4ecb"},{"location":"ie310go/xys/#_1","text":"ie310go\u9664\u4e86\u63d0\u4f9bhttp\u534f\u8bae\u7684server\u5916\uff0c\u8fd8\u63d0\u4f9btcp\u3001ipc\u3001websocket\u3001grpc\u3001thrift\u7b49\u534f\u8bae\u7684\u652f\u6301 \u4e3a\u4e86\u7b80\u5316\u4f7f\u7528\uff0c\u8fd9\u4e9b\u534f\u8bae\u7684\u53c2\u6570\u4f20\u9012\u3001\u8fd4\u56de\u503c\u90fd\u662f\u901a\u8fc7json\u5b57\u7b26\u4e32\uff0c\u5bf9json\u5b57\u7b26\u4e32\u7684\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u53ef\u80fd\u4f1a\u5e26\u6765\u6027\u80fd\u7684\u635f\u5931","title":"\u7b80\u4ecb"},{"location":"ie310go/yytc/","text":"\u53c2\u8003 \u521d\u59cb\u5316","title":"\u4f18\u96c5\u9000\u51fa"}]}